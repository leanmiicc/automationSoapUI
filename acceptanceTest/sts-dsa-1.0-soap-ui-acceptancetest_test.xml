<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="16fc6505-e5e6-4a9f-940c-c33cb6069bd7" activeEnvironment="Default" name="sts-dsa-acceptanceTest" soapui-version="5.6.0" abortOnError="false" runType="SEQUENTIAL" resourceRoot="${projectDir}" encryptionMode="Not encrypted" updated="3.9.1 2021-07-21T11:56:24Z" xmlns:con="http://eviware.com/soapui/config"><con:settings><con:setting id="com.smartbear.swagger.ExportSwaggerAction$FormBase Path"/><con:setting id="com.smartbear.swagger.ExportSwaggerAction$FormTarget Folder">D:\seba\Documents\stechs\drive\STECHS\Productos\STS-BP\STS-DSA</con:setting><con:setting id="com.smartbear.swagger.ExportSwaggerAction$FormFormat">json</con:setting><con:setting id="com.smartbear.swagger.ExportSwaggerAction$FormAPI Version">1.0</con:setting><con:setting id="com.smartbear.swagger.ExportSwaggerAction$FormSwagger Version">2.0</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.actions.iface.tools.soapui.TestRunnerAction@values-local"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Report Format(s)" value=""/>
  <con:entry key="Host:Port" value=""/>
  <con:entry key="Export JUnit Results" value="false"/>
  <con:entry key="Export All" value="false"/>
  <con:entry key="Save After" value="false"/>
  <con:entry key="Add Settings" value="false"/>
  <con:entry key="WSS Password Type" value=""/>
  <con:entry key="TestSuite" value="DSA Api V1.0 Basic ABMs Suit"/>
  <con:entry key="Endpoint" value=""/>
  <con:entry key="Select Report Type" value=""/>
  <con:entry key="System Properties" value=""/>
  <con:entry key="Password" value=""/>
  <con:entry key="Print Report" value="true"/>
  <con:entry key="Open Report" value="false"/>
  <con:entry key="Export JUnit Results with test properties" value="false"/>
  <con:entry key="Global Properties" value=""/>
  <con:entry key="Project Properties" value=""/>
  <con:entry key="Project Password" value=""/>
  <con:entry key="TestCase" value="Test E2E Service Suit"/>
  <con:entry key="Username" value=""/>
  <con:entry key="user-settings.xml Password" value=""/>
  <con:entry key="TestRunner Path" value="/home/nico/SmartBear/SoapUI-5.4.0/bin"/>
  <con:entry key="Environment" value="Default"/>
  <con:entry key="Coverage Report" value="false"/>
  <con:entry key="Enable UI" value="false"/>
  <con:entry key="Root Folder" value=""/>
  <con:entry key="Ignore Errors" value="false"/>
  <con:entry key="Domain" value=""/>
  <con:entry key="Tool Args" value=""/>
  <con:entry key="Save Project" value="false"/>
</xml-fragment>]]></con:setting></con:settings><con:interface xsi:type="con:RestService" id="9e15e93d-8607-4800-b274-6bff2107207c" wadlVersion="http://wadl.dev.java.net/2009/02" name="http://10.0.0.100:8080" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:endpoint>http://10.0.0.100:8080</con:endpoint></con:endpoints><con:resource name="v1.0" path="/${#Project#path}/dsa/api/v1.0" id="ab998df7-4957-409b-91a4-be1b53b4ff74"><con:settings/><con:parameters/><con:resource name="info" path="info" id="62a7005b-f2d9-47bc-9c5b-99a30af4a08a"><con:settings/><con:parameters/><con:resource name="subscription" path="subscription/{subId}" id="48b7f78b-87a3-4190-8e32-e749cc4828b6"><con:settings/><con:parameters><con:parameter><con:name>subId</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>include</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Method 1" id="f41d9abc-4248-4058-89fa-c719745d0a68" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:ns="http://10.0.0.100/dsa-nico/dsa/api/v1.0/info/subscription/50">ns:Response</con:element></con:representation><con:request name="Request 1" id="2ef5d470-1100-4d63-b9dc-51a41a2debaf" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request/><con:originalUri>http://10.0.0.100/dsa-nico/dsa/api/v1.0/info/subscription/50</con:originalUri><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="subId" value="50"/>
  <con:entry key="include" value="devinfo,leases,outside_plant"/>
</con:parameters><con:parameterOrder><con:entry>subId</con:entry><con:entry>include</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:method name="info" id="f1986203-afa2-470b-91cd-48578e8d8e8c" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>text/html; charset=iso-8859-1</con:mediaType><con:status>403 404</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:info="http://10.0.0.100/dsa/dsa/api/v0.3/info">info:Response</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>text/html; charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=UTF-8</con:mediaType><con:status>500</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>text/html</con:mediaType><con:status>200</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=UTF-8</con:mediaType><con:status>500</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Get WS Info" id="94b22a52-3535-41cc-bcf9-fcfc2198c80c" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request/><con:originalUri>http://10.0.0.100/dsa/dsa/api/v0.3/info</con:originalUri><con:credentials><con:username>stechs</con:username><con:password>stechs</con:password><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:request></con:method></con:resource><con:resource name="subscriber" path="subscriber" id="34d034c0-cf43-4982-a206-80db1fd63684"><con:settings/><con:parameters/><con:resource name="{crmSubCode}" path="{crmSubCode}" id="11b8ee20-ba95-4c14-bfa5-a45f3ee09af1"><con:settings/><con:parameters><con:parameter><con:name>crmSubCode</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:resource name="subscription" path="subscription" id="731f7104-47d4-43df-8f50-49bd20b63fb9"><con:settings/><con:parameters/><con:resource name="{crmSubCode}" path="{subId}" id="baf48977-e582-42fa-bc7a-8bfd3e4730da"><con:settings/><con:parameters><con:parameter><con:name>crmSubCode</con:name><con:value>crmSubCode</con:value><con:style>TEMPLATE</con:style><con:default>crmSubCode</con:default></con:parameter><con:parameter><con:name>subId</con:name><con:value>1</con:value><con:style>TEMPLATE</con:style><con:default>1</con:default></con:parameter></con:parameters><con:resource name="issue" path="issue" id="9c9dbbc5-e620-4403-82e7-3dc3a35417ed"><con:settings/><con:parameters/><con:method name="Create" id="035c2643-9285-4165-8f48-b8399ecd2003" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:iss="http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/crmSubCode/issue">iss:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>text/html</con:mediaType><con:status>200</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=UTF-8</con:mediaType><con:status>500</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>text/html; charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element>html</con:element></con:representation><con:request name="Request 1" id="1b406235-c481-45a1-aeed-d4cc36c905a5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request/><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/crmSubCode/issue</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="crmSubCode" value="3123" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:request></con:method><con:method name="Get" id="035c2643-9285-4165-8f48-b8399ecd2003" method="GET"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:iss="http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/crmSubCode/issue">iss:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=UTF-8</con:mediaType><con:status>500</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>text/html; charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element>html</con:element></con:representation><con:request name="Request 1" id="1b406235-c481-45a1-aeed-d4cc36c905a5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request/><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/crmSubCode/issue</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="subId" value="1"/>
  <con:entry key="crmSubCode" value="3123"/>
</con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:request></con:method><con:method name="Delete" id="035c2643-9285-4165-8f48-b8399ecd2003" method="DELETE"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:iss="http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/crmSubCode/issue">iss:Response</con:element></con:representation><con:request name="Request 1" id="1b406235-c481-45a1-aeed-d4cc36c905a5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request/><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/crmSubCode/issue</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="subId" value="1"/>
  <con:entry key="crmSubCode" value="3123"/>
</con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="activationCode" path="activationcode" id="9c9dbbc5-e620-4403-82e7-3dc3a35417ed"><con:settings/><con:parameters/><con:method name="Update" id="035c2643-9285-4165-8f48-b8399ecd2003" method="PUT"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:iss="http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/crmSubCode/issue">iss:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=UTF-8</con:mediaType><con:status>500</con:status><con:params/><con:element>html</con:element></con:representation><con:request name="Request 1" id="1b406235-c481-45a1-aeed-d4cc36c905a5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request/><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/crmSubCode/issue</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="subId" value="1"/>
  <con:entry key="crmSubCode" value="3123"/>
</con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:request></con:method><con:method name="Get" id="035c2643-9285-4165-8f48-b8399ecd2003" method="GET"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:iss="http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/crmSubCode/issue">iss:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=UTF-8</con:mediaType><con:status>500</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=UTF-8</con:mediaType><con:status>500</con:status><con:params/><con:element>html</con:element></con:representation><con:request name="Request 1" id="1b406235-c481-45a1-aeed-d4cc36c905a5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request/><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/crmSubCode/issue</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="subId" value="1"/>
  <con:entry key="crmSubCode" value="3123"/>
</con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="device" path="device" id="9c9dbbc5-e620-4403-82e7-3dc3a35417ed"><con:settings/><con:parameters/><con:method name="Get" id="035c2643-9285-4165-8f48-b8399ecd2003" method="GET"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:iss="http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/crmSubCode/issue">iss:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=UTF-8</con:mediaType><con:status>500</con:status><con:params/></con:representation><con:request name="Request 1" id="1b406235-c481-45a1-aeed-d4cc36c905a5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request/><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/crmSubCode/issue</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="subId" value="1"/>
  <con:entry key="crmSubCode" value="3123"/>
</con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:request></con:method><con:method name="Delete" id="2970a463-c98d-452a-b63a-cceb4f3c9d13" method="DELETE"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>401 404</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:dev="http://10.0.0.100/dsa-nico/dsa/api/v1.0/subscriber/10000/subscription/1/device">dev:Response</con:element></con:representation><con:request name="Request 1" id="9d87d06f-cca3-4765-bc58-b6f1c50752fe" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request/><con:originalUri>http://10.0.0.100/dsa-nico/dsa/api/v1.0/subscriber/10000/subscription/1/device</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="crmSubCode" value="10000" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:request></con:method><con:method name="Asign device" id="035c2643-9285-4165-8f48-b8399ecd2003" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:iss="http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/crmSubCode/issue">iss:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=UTF-8</con:mediaType><con:status>500</con:status><con:params/></con:representation><con:request name="Request 1" id="1b406235-c481-45a1-aeed-d4cc36c905a5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
  "id" : "ZNTS0372548D",
  "activationCode": "705861531"
}</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/crmSubCode/issue</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="subId" value="4"/>
  <con:entry key="crmSubCode" value="100002"/>
</con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="service" path="service" id="9c9dbbc5-e620-4403-82e7-3dc3a35417ed"><con:settings/><con:parameters/><con:resource name="{srvId}" path="{srvId}" id="656f2a4d-2725-4538-ba33-5e5057ae63f5"><con:settings/><con:parameters><con:parameter><con:name>srvId</con:name><con:value>srvId</con:value><con:style>TEMPLATE</con:style><con:default>srvId</con:default></con:parameter></con:parameters><con:resource name="status" path="status" id="a57adc92-ad73-43f7-8e4c-b68a52f81361"><con:settings/><con:parameters/><con:method name="Suspend" id="8d145e01-e634-456f-81c3-12a9b900306f" method="PUT"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:stat="http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v1.0/subscriber/crmSubCode/subscription/123/service/srvId/status">stat:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=UTF-8</con:mediaType><con:status>500</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=UTF-8</con:mediaType><con:status>500</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>text/html; charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element>html</con:element></con:representation><con:request name="Request 1" id="98105fd5-685b-43d3-870a-f158f8755267" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
  "status":"suspended"
}
</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v1.0/subscriber/crmSubCode/subscription/123/service/srvId/status</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="subId" value="1" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>srvId</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="crmCode" path="crmCode" id="9e51d4b5-fda0-4a20-8601-1f0b2852ddae"><con:settings/><con:parameters/><con:method name="UpdateCrmCode" id="9655c6e5-aef2-46bb-96d3-885db0526314" method="PUT"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:crm="http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v1.0/subscriber/crmSubCode/subscription/123/service/srvId/crmCode">crm:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=UTF-8</con:mediaType><con:status>500</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>text/html; charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" id="022a9f2f-40ed-4d6a-9827-555beb631685" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
  "crmCode": 
    {
      "99999":"idSuscripcion", 
      "88888":"idSuscripcion"
    }
}</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v1.0/subscriber/crmSubCode/subscription/123/service/srvId/crmCode</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="subId" value="1"/>
  <con:entry key="srvId" value="1"/>
</con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>srvId</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="params" path="params" id="b7a91bd8-6a1c-4628-8f68-0a7a87eb3cd1"><con:settings/><con:parameters/><con:method name="Update Parameters" id="ff69e8f4-3193-4da6-be3d-ca8704f0e106" method="PUT"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>401 404</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:par="http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v1.0/subscriber/crmSubCode/subscription/123/service/srvId/params">par:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=UTF-8</con:mediaType><con:status>500</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>text/html; charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element>html</con:element></con:representation><con:request name="Request 1" id="30e8497e-4f92-4e73-8b6a-cc0132476dbc" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
  "params":{
    "trafficProfile":"hsi-test"
  }
}
</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v1.0/subscriber/crmSubCode/subscription/123/service/srvId/params</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="srvId" value="srvid" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>srvId</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:method name="Get" id="672ca80e-e820-4869-80d7-fe8cd9c0d922" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>401 404</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:srv="http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/123/service/srvId">srv:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=UTF-8</con:mediaType><con:status>500</con:status><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="27b59f4c-1da8-473c-934b-e16e6bf8f668" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request/><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/123/service/srvId</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="subId" value="1" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>srvId</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:request></con:method><con:method name="Update" id="672ca80e-e820-4869-80d7-fe8cd9c0d922" method="PUT"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=UTF-8</con:mediaType><con:status>500</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:srv="http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/123/service/srvId">srv:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=UTF-8</con:mediaType><con:status>500</con:status><con:params/><con:element>html</con:element></con:representation><con:request name="Request 1" id="27b59f4c-1da8-473c-934b-e16e6bf8f668" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
	"test2":"test"
}</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/123/service/srvId</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="subId" value="subId"/>
  <con:entry key="srvId" value="321"/>
</con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>srvId</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:request></con:method><con:method name="Delete" id="672ca80e-e820-4869-80d7-fe8cd9c0d922" method="DELETE"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=UTF-8</con:mediaType><con:status>500</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=UTF-8</con:mediaType><con:status>500</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:srv="http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/123/service/srvId">srv:Response</con:element></con:representation><con:request name="Request 1" id="27b59f4c-1da8-473c-934b-e16e6bf8f668" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request/><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/123/service/srvId</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="subId" value="2"/>
  <con:entry key="srvId" value="9"/>
  <con:entry key="crmSubCode" value="100002"/>
</con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>srvId</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:method name="Create" id="035c2643-9285-4165-8f48-b8399ecd2003" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:iss="http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/crmSubCode/issue">iss:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=UTF-8</con:mediaType><con:status>500</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=UTF-8</con:mediaType><con:status>500</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>text/html; charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element>html</con:element></con:representation><con:request name="Create HSI Service" id="1b406235-c481-45a1-aeed-d4cc36c905a5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
  "name":"hsi",
  "crmCode": {"99999":"SubscriptionId"},
  "parameters": {"maxCpe":90}
}
</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/crmSubCode/issue</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="subId" value="5"/>
  <con:entry key="crmSubCode" value="100002"/>
</con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:request><con:request name="Create SCM Service" id="1b406235-c481-45a1-aeed-d4cc36c905a5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
  "name":"scm",
  "crmCode": {
  		"99999" : "idSuscripcion"
  },
  "parameters": {
  	"type" :  "TLS"
  }
 
}
</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/crmSubCode/issue</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="subId" value="5"/>
  <con:entry key="crmSubCode" value="100002"/>
</con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:request><con:request name="Create LIV Service" id="1b406235-c481-45a1-aeed-d4cc36c905a5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
  "name":"liv",
  "crmCode": {"99999":"idSuscripcion"},
    "parameters": {"maxCpe":90 }
}
</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/crmSubCode/issue</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="subId" value="5"/>
  <con:entry key="crmSubCode" value="100002"/>
</con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:request><con:request name="Create Optimo  Service" id="1b406235-c481-45a1-aeed-d4cc36c905a5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
  "name":"optimo",
  "crmCode": {"99999":"idSuscripcion"},
   "parameters": {"maxCpe":90 }
}
</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/crmSubCode/issue</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="subId" value="5"/>
  <con:entry key="crmSubCode" value="100002"/>
</con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:request><con:request name="Create Unico Service" id="1b406235-c481-45a1-aeed-d4cc36c905a5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
  "name":"unico",
  "crmCode": {"99999":"idSuscripcion"},
    "parameters": {"maxCpe":90 }
}
</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/crmSubCode/issue</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="subId" value="5"/>
  <con:entry key="crmSubCode" value="100002"/>
</con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:request><con:request name="Create gigaplus Service" id="1b406235-c481-45a1-aeed-d4cc36c905a5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
  "name":"gigaplus",
  "crmCode": {"99999":"idSuscripcion"},
  "parameters": {"maxCpe":90 }
}
</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/crmSubCode/issue</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="subId" value="5"/>
  <con:entry key="crmSubCode" value="100002"/>
</con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:request><con:request name="Create voippack Service" id="1b406235-c481-45a1-aeed-d4cc36c905a5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
  "name":"voippack",
  "crmCode": {"99999":"idSuscripcion"},
  "parameters": {"vlan":1245 }
}
</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/crmSubCode/issue</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="subId" value="5"/>
  <con:entry key="crmSubCode" value="100002"/>
</con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:request><con:request name="Create maximo Service" id="1b406235-c481-45a1-aeed-d4cc36c905a5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
  "name":"maximo",
  "crmCode": {"99999":"idSuscripcion"},
  "parameters": {"vlan":1245 }
}
</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/crmSubCode/issue</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="subId" value="5"/>
  <con:entry key="crmSubCode" value="100002"/>
</con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:request><con:request name="Create tls Service" id="1b406235-c481-45a1-aeed-d4cc36c905a5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
  "name":"tls",
  "crmCode": {"99999":"idSuscripcion"},
  "parameters": {"vlan":1245 }
}
</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/crmSubCode/issue</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="subId" value="5"/>
  <con:entry key="crmSubCode" value="100002"/>
</con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:request><con:request name="Create tlsqinq Service" id="1b406235-c481-45a1-aeed-d4cc36c905a5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
  "name":"voip",
  "crmCode": {"99999":"idSuscripcion"},
  "parameters": {}
}
</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/crmSubCode/issue</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="crmSubCode" value="100002" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:request></con:method><con:method name="Get" id="035c2643-9285-4165-8f48-b8399ecd2003" method="GET"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:iss="http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/crmSubCode/issue">iss:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=UTF-8</con:mediaType><con:status>500</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=UTF-8</con:mediaType><con:status>500</con:status><con:params/></con:representation><con:request name="Request 1" id="1b406235-c481-45a1-aeed-d4cc36c905a5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request/><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/crmSubCode/issue</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="subId" value="4"/>
  <con:entry key="crmSubCode" value="100002"/>
</con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="removal" path="removal" id="9c9dbbc5-e620-4403-82e7-3dc3a35417ed"><con:settings/><con:parameters/><con:method name="Put" id="035c2643-9285-4165-8f48-b8399ecd2003" method="PUT"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:iss="http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/crmSubCode/issue">iss:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=UTF-8</con:mediaType><con:status>500</con:status><con:params/></con:representation><con:request name="Request 1" id="1b406235-c481-45a1-aeed-d4cc36c905a5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
  "removal"  : "enabled"
}</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/crmSubCode/issue</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="subId" value="1"/>
  <con:entry key="crmSubCode" value="100002"/>
</con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:method name="Get" id="782e3af8-aacd-41e4-8f7e-0caaa2fe83df" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>text/html</con:mediaType><con:status>200</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:ns="http://10.0.0.100/">ns:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=UTF-8</con:mediaType><con:status>500</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=UTF-8</con:mediaType><con:status>500</con:status><con:params/><con:element>html</con:element></con:representation><con:request name="Request 1" id="feefdf12-b3b4-40b2-8276-b5fbe393d422" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request/><con:originalUri>http://10.0.0.100/</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="subId" value="21"/>
  <con:entry key="crmSubCode" value="100002"/>
</con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:request></con:method><con:method name="Delete" id="782e3af8-aacd-41e4-8f7e-0caaa2fe83df" method="DELETE"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=UTF-8</con:mediaType><con:status>500</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:ns="http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/123">ns:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=UTF-8</con:mediaType><con:status>500</con:status><con:params/></con:representation><con:request name="Request 1" id="feefdf12-b3b4-40b2-8276-b5fbe393d422" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request/><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/123</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="subId" value="1"/>
  <con:entry key="crmSubCode" value="100002"/>
</con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:request></con:method><con:method name="Update" id="782e3af8-aacd-41e4-8f7e-0caaa2fe83df" method="PUT"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=UTF-8</con:mediaType><con:status>500</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:ns="http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/123">ns:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=UTF-8</con:mediaType><con:status>500</con:status><con:params/></con:representation><con:request name="Request 1" id="feefdf12-b3b4-40b2-8276-b5fbe393d422" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
  "removal": "909090",
      
}</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/123</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="subId" value="1" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:method name="Create" id="9478aa89-c588-4fed-92c0-12ebdbba508e" method="POST"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>404 401</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=UTF-8</con:mediaType><con:status>500</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:sub="http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription">sub:Response</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=UTF-8</con:mediaType><con:status>500</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>text/html; charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element>html</con:element></con:representation><con:request name="Request 1" id="e6e08620-df5b-479e-9e4b-84acb7330e05" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
  "reservationId": "909090"
}
</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="crmSubCode" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry></con:parameterOrder></con:request></con:method><con:method name="GETAll" id="9478aa89-c588-4fed-92c0-12ebdbba508e" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=UTF-8</con:mediaType><con:status>500</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:sub="http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription">sub:Response</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=UTF-8</con:mediaType><con:status>500</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>text/html; charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element>html</con:element></con:representation><con:request name="Request 1" id="e6e08620-df5b-479e-9e4b-84acb7330e05" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
  "reservationId": "909090"
}
</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="crmSubCode" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:method name="Get" id="db2064ab-f413-41d8-aebc-b2786ec3d6d7" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:crm="http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode">crm:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=UTF-8</con:mediaType><con:status>500</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=UTF-8</con:mediaType><con:status>500</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>text/html; charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" id="18dec9d5-5236-4e78-9992-028083570553" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request/><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="crmSubCode" value="100002" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry></con:parameterOrder></con:request></con:method><con:method name="Update" id="db2064ab-f413-41d8-aebc-b2786ec3d6d7" method="PUT"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:crm="http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode">crm:Response</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=UTF-8</con:mediaType><con:status>500</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>text/html; charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=UTF-8</con:mediaType><con:status>500</con:status><con:params/></con:representation><con:request name="Request 1" id="18dec9d5-5236-4e78-9992-028083570553" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
      "brandId": "2",
      "code": "123",
      "name": "Franco Rosental"
   }</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="crmSubCode" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry></con:parameterOrder></con:request></con:method><con:method name="Delete" id="db2064ab-f413-41d8-aebc-b2786ec3d6d7" method="DELETE"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:crm="http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode">crm:Response</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=UTF-8</con:mediaType><con:status>500</con:status><con:params/><con:element>html</con:element></con:representation><con:request name="Request 1" id="18dec9d5-5236-4e78-9992-028083570553" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request/><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="crmSubCode" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:method name="GetAll" id="eba74ea8-2b1b-4f4e-8b12-c8216fa7d37c" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>401 404</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:sub="http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber">sub:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=UTF-8</con:mediaType><con:status>500</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=UTF-8</con:mediaType><con:status>500</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>text/html</con:mediaType><con:status>200</con:status><con:params/><con:element>html</con:element></con:representation><con:request name="Request 1" id="7f7c1875-c1ab-4093-8e51-506fd78fc2f0" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request/><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:request></con:method><con:method name="Create" id="eba74ea8-2b1b-4f4e-8b12-c8216fa7d37c" method="POST"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>401 404</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:sub="http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber">sub:Response</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=UTF-8</con:mediaType><con:status>500</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=iso-8859-1</con:mediaType><con:status>403 404</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=UTF-8</con:mediaType><con:status>500</con:status><con:params/><con:element>html</con:element></con:representation><con:request name="CreateBasicSusbcriber" id="7f7c1875-c1ab-4093-8e51-506fd78fc2f0" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
"brandId":0,
"crmSubCode":"100002",
"name":"Martin Bravo"
}
</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:request></con:method></con:resource><con:resource name="info" path="crmCode/info" id="a699215b-32fe-4d48-a0ac-ce442d0424a8"><con:settings/><con:parameters><con:parameter><con:name>SubscriptionId</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>include</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="crmCode/Info" id="e2f8835a-bbe5-401d-b3b3-f0173540b217" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=UTF-8</con:mediaType><con:status>500</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:info="http://10.0.0.100/dsa_jenkings/dsa/api/v1.0/crmCode/info/">info:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=UTF-8</con:mediaType><con:status>500</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>text/html; charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element>html</con:element></con:representation><con:request name="GET /crmCode/info" id="793ad6e3-5cc4-4e15-8801-9410b43a5e0f" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request/><con:originalUri>http://10.0.0.100/dsa-nico/dsa/api/v1.0/crmCode/info/</con:originalUri><con:credentials><con:username/><con:password/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="include" value="devinfo,leases,outside_plant"/>
  <con:entry key="SubscriptionId" value="12345"/>
</con:parameters><con:parameterOrder><con:entry>include</con:entry><con:entry>SubscriptionId</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="operation" path="operation" id="62a7005b-f2d9-47bc-9c5b-99a30af4a08a"><con:settings/><con:parameters/><con:resource name="activationcode" path="activationcode/" id="505c2d1d-06e0-4236-871b-4b49734e8591"><con:settings/><con:parameters><con:parameter><con:name>activationCode</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:resource name="{activationcode}" path="{activationcode}/validate" id="b7661e76-a52a-474c-996b-d3aa11b7ac47"><con:settings/><con:parameters><con:parameter><con:name>activationcode</con:name><con:value>activationcode</con:value><con:style>TEMPLATE</con:style><con:default>activationcode</con:default></con:parameter></con:parameters><con:method name="Validate" id="67b6b355-93e3-4793-9259-f13dc1be09de" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>401 404</con:status><con:params/></con:representation><con:request name="Request 1" id="cfdaf439-a24c-4630-ad96-696c10dd7d54" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request/><con:originalUri>http://10.0.0.100/dsa-nico/dsa/api/v1.0/operation/activationcode/123456/validate</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="activationcode" value="123456" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>activationcode</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:resource></con:resource></con:resource></con:interface><con:testSuite id="5f703792-9d8e-45f0-8152-c06157bbf148" name="DSA Api V1.0 Basic ABMs Suit"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="ae06fb8a-3493-4f97-a393-169438be430c" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Test E2E Subscriber Success" searchProperties="true"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="properties" name="SetUpProperties" id="7062ffb4-507e-44fd-a972-a40b46fbdb7e"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>newCrmSubCode</con:name><con:value>100002</con:value></con:property><con:property><con:name>newName</con:name><con:value>Martin Bravo</con:value></con:property><con:property><con:name>reservationId</con:name><con:value>909090</con:value></con:property><con:property><con:name>newNameUpdated</con:name><con:value>Lopez Salgado</con:value></con:property><con:property><con:name>newService</con:name><con:value>hsi</con:value></con:property><con:property><con:name>newCrmCode</con:name><con:value>12345</con:value></con:property><con:property><con:name>include</con:name><con:value>devinfo,leases,outside_plant</con:value></con:property><con:property><con:name>newSubscriptionId</con:name><con:value>12345</con:value></con:property><con:property><con:name>valueCrmCode</con:name><con:value>SubscriptionId</con:value></con:property><con:property><con:name>newMaxCpe</con:name><con:value>90</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="GetTheStatusResponseHasToBeWellFormat" id="8f421686-dc20-4171-baa5-7cfa926d6bd3"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/info" methodName="info" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GetTheStatusResponseHasToBeWellFormat" id="94b22a52-3535-41cc-bcf9-fcfc2198c80c" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request/><con:originalUri>http://10.0.0.100/dsa/dsa/api/v0.3/info</con:originalUri><con:assertion type="Invalid HTTP Status Codes" id="6ba2f1b0-efa5-4d7a-85be-b3c4a85ebd58" name="Invalid HTTP Status Codes" disabled="true"><con:configuration><codes>HTTP/1.1 200 OK</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="fe02bb93-d19c-49f4-b772-6e08483d7794" name="ContainsResponse" disabled="true"><con:configuration><token>{"DSA API":{"version":"1.0","ws_status":"ok"}}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="b1d8b22e-d8a8-4d8f-8120-99dacc6acfb8" name="Script Assertion"><con:configuration><scriptText>//Expresion regular para realizar busqueda  
//object.object[?(@.object=='value')].object (este ultimo objeto es el que busco.
//Ej. photos.photo[?(@.id=='51371929169')].farm
//Valor a comparar entre []. Ej [66]
import groovy.json.JsonSlurper

//Obtengo el valor del Response
def response = messageExchange.response.responseContent

//Obtengo el Headers del Response
def headers = messageExchange.response.responseHeaders

//Parseo el response
def parsedResponse =  new JsonSlurper().parseText(response)

//Obtengo y defino las properties del TestCase.
def expectedResponseVersion = context.getTestCase().getPropertyValue("version")
def expectedResponseWsStatus = context.getTestCase().getPropertyValue("ws_status")

//Defino el resultado esperado y el resultado actual.
def expectedHTTPResponse = ['HTTP/1.1 200 OK']
def actualHTTPResponse = headers['#status#']

//Asserts.
assert expectedResponseVersion == parsedResponse.'DSA API'.version
assert expectedResponseWsStatus == parsedResponse.'DSA API'.ws_status
assert expectedHTTPResponse == actualHTTPResponse

log.info("Validaciones OK")



</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Create - CreateMartinBravoSubscriberShouldReturnOk" id="ff1372a5-bc08-4ef7-bda4-a5d5e17cb9b0"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber" methodName="Create" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Create - CreateMartinBravoSubscriberShouldReturnOk" id="7f7c1875-c1ab-4093-8e51-506fd78fc2f0" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
"crmSubCode":"${newCrmSubCode}",
"name":"${newName}"
}
</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber</con:originalUri><con:assertion type="GroovyScriptAssertion" id="60988fd5-9cd1-4425-a0bb-14111990229e" name="ScriptAssertionReturnBodyValidation"><con:configuration><scriptText>import groovy.json.JsonSlurper

//Obtengo el response
def response = messageExchange.response.responseContent

//Obtengo el Header response
def headers = messageExchange.response.responseHeaders

//Parseo el response.
def parsedResponse =  new JsonSlurper().parseText(response)

//Defino el resultado actual y esperado del Header.
def expectedHTTPResponse = ['HTTP/1.1 200 OK']
def actualHTTPResponse = headers['#status#']

// asserting that the response is equal to expected response.
assert parsedResponse.Result == 'Success'
assert parsedResponse.Items.name == context.expand('${SetUpProperties#newName}')
assert parsedResponse.Items.crmSubCode == context.expand('${SetUpProperties#newCrmSubCode}')
assert parsedResponse.Display_items == 1
assert parsedResponse.Matched_items == 1
assert parsedResponse.Error_code == null
assert parsedResponse.Error_str == null
assert parsedResponse.Error_str_detail == null
assert expectedHTTPResponse == actualHTTPResponse

log.info("Validaciones OK")
//log.info(context.expand('${SetUpProperties#newName}'))





</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="d9b33700-4b54-47c7-9ed1-b7f813801633" name="ScriptAssertionDataBase"><con:configuration><scriptText>//import net.sf.*;
//import net.sf.json.*;
//import net.sf.json.groovy.*;
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import groovy.lang.Binding
import groovy.util.GroovyScriptEngine
import groovy.sql.Sql
import java.sql.ResultSet

//Obtengo el response
def response = messageExchange.response.responseContent

//Parseo el response.
def parsedResponse =  new JsonSlurper().parseText(response)

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

// location of script file is relative to SOAPUI project file.
String scriptPath = groovyUtils.projectPath + "/scripts/"

// Create Groovy Script Engine to run the script.
GroovyScriptEngine gse = new GroovyScriptEngine(scriptPath) 

// Load the Groovy Script file 
externalScript = gse.loadScriptByName("UtilsTest.Groovy")  

// Create a runtime instance of script
instance = externalScript.newInstance()

// Sanity check 
assert instance!= null

log.info("Corriendo script");

def dbDsa  = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbDSA')
def dbHost = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbHost')
def user = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbUser')
def password = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbPass')
def dbPort = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue("dbPort")

// Muestro el path de conexion de la DB
log.info(user + ":" + password + "@" + dbHost + ':' + dbPort + '/' + dbDsa)
log.info(parsedResponse.Items.name)


// run the foo method in the external script
def dsaInstance = instance.getInstanceDB(dbDsa, dbHost, dbPort, user, password, log)

// Get of the response the name and crmSubCode fields
def name = parsedResponse.Items.name
// Convert field crmSubCode to Int.
def crmSubCode = parsedResponse.Items.crmSubCode

dsaInstance.query("SELECT * FROM subscribers;"){ ResultSet rs ->
	// Pruebo el primero	
	rs.next()
	
	// Valido el campo name
	log.info("name: " + rs.getString('name'))
	assert rs.getString('name') == name

	// Valido el campo number == crmSubCode en response.
	log.info("number: " + rs.getString('number'))
	assert rs.getString('number') == crmSubCode

	
	//Valido que no haya mas datos.
	assert !rs.next() 	     
}

</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="crmSubCodeTransfer" id="cd5955e7-081c-48a6-8294-1327318914dd"><con:settings/><con:config><script>import groovy.json.JsonSlurper

crmSubCode = new JsonSlurper().parseText(testRunner.testCase.getTestStepByName('Create - CreateMartinBravoSubscriberShouldReturnOk').properties.Response.value).Items.crmSubCode.toString()

testRunner.testCase.getTestStepByName('Get - GetMartinBravoSubscriberShouldReturnHisInfoOk').setPropertyValue('crmSubCode', crmSubCode)
testRunner.testCase.getTestStepByName('Create - CreateASubscriptionInMartinBravoShouldReturnSuccess').setPropertyValue('crmSubCode', crmSubCode)
testRunner.testCase.getTestStepByName('Update - UpdateMartinBravoSubscriberToMatiasBravoShouldReturnHisInfoOk').setPropertyValue('crmSubCode', crmSubCode)
testRunner.testCase.getTestStepByName('Asign - AsingAServiceToASubscriptionShouldReturnTrue').setPropertyValue('crmSubCode', crmSubCode)
testRunner.testCase.getTestStepByName('Delete Service -Delete Service asigned').setPropertyValue('crmSubCode', crmSubCode)
testRunner.testCase.getTestStepByName('Delete Susbcription - DeletLastSubscriptionCreated').setPropertyValue('crmSubCode', crmSubCode)
testRunner.testCase.getTestStepByName('Delete - DeleteMartinBravoSubscriberShouldReturnOk').setPropertyValue('crmSubCode', crmSubCode)

context.crmSubCode = crmSubCode</script></con:config></con:testStep><con:testStep type="restrequest" name="Get - GetMartinBravoSubscriberShouldReturnHisInfoOk" id="e9c1545c-86b0-4119-a104-eeea21441b89"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}" methodName="Get" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get - GetMartinBravoSubscriberShouldReturnHisInfoOk" id="7f7c1875-c1ab-4093-8e51-506fd78fc2f0" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>$Display_items</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber</con:originalUri><con:assertion type="Simple Contains" id="b6abe90b-2082-40ad-835e-f2c5d4b5fc1a" name="ContainResultSuccess"><con:configuration><token>Result":"Success"</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="b6abe90b-2082-40ad-835e-f2c5d4b5fc1a" name="ContainSubscriberName"><con:configuration><token>"name":"Martin Bravo"</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="b6abe90b-2082-40ad-835e-f2c5d4b5fc1a" name="ContainSubscriberNumber"><con:configuration><token>"crmSubCode":"100002"</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="ad08966c-597a-42de-b315-cd7beb7e1238" name="Contains all items"><con:configuration><token>"Items":{"brandId":0,"crmSubCode":"100002","name":"Martin Bravo"}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="72ad3f73-9e25-4459-b363-0b31af6a3de7" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

//Getting response from methods
def ResponseMessage = context.response
def parsedJson = new groovy.json.JsonSlurper().parseText(ResponseMessage)

assert parsedJson.Result == "Success"
assert parsedJson.Display_items == 1
assert parsedJson.Matched_items == 1
assert parsedJson.Error_code == null
assert parsedJson.Items != null
assert parsedJson.Error_str == null
assert parsedJson.Error_str_detail == null
assert parsedJson.Donetime != null</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="crmSubCode" value="100002" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Create - CreateASubscriptionInMartinBravoShouldReturnSuccess" id="8dc83b64-abd7-4767-86ed-bf83957fe9dd"><con:settings/><con:config service="http://10.0.0.100:8080" methodName="Create" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Create - CreateASubscriptionInMartinBravoShouldReturnSuccess" id="c2e14433-2d71-4676-a9d8-51d55cbe18a7" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
  "reservationId": "${reservationId}"
}
</con:request><con:originalUri>http://10.0.0.100/dsa-nico/dsa/api/v1.0/subscriber/100002/subscription</con:originalUri><con:assertion type="GroovyScriptAssertion" id="4cc0c8ad-85f6-4a69-bdfb-1043f4fc03d1" name="ScriptAssertionReturnBodyValidation"><con:configuration><scriptText>import groovy.json.JsonSlurper

//Obtengo el response
def response = messageExchange.response.responseContent

//Obtengo el Header response
def headers = messageExchange.response.responseHeaders

//Parseo el response.
def parsedResponse =  new JsonSlurper().parseText(response)

//Defino el resultado actual y esperado del Header.
def expectedHTTPResponse = ['HTTP/1.1 200 OK']
def actualHTTPResponse = headers['#status#']

// asserting that the response is equal to expected response.
assert parsedResponse.Result == 'Success'
assert parsedResponse.Items.activationCode.code != null 
assert parsedResponse.Items.activationCode.expirationDate != null
assert parsedResponse.Items.activationCode.active != null
assert parsedResponse.Display_items == 1
assert parsedResponse.Matched_items == 1
assert parsedResponse.Error_code == null
assert parsedResponse.Error_str == null
assert parsedResponse.Error_str_detail == null
assert expectedHTTPResponse == actualHTTPResponse

log.info("Validaciones OK")

</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="e67bec26-7c00-40e4-95e5-78f98b379ff4" name="ScriptAssertionDataBase"><con:configuration><scriptText>//import net.sf.*;
//import net.sf.json.*;
//import net.sf.json.groovy.*;
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import groovy.lang.Binding
import groovy.util.GroovyScriptEngine
import groovy.sql.Sql
import java.sql.ResultSet

//Get to response
def response = messageExchange.response.responseContent

//Parsed to response
def parsedResponse =  new JsonSlurper().parseText(response)

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

// location of script file is relative to SOAPUI project file.
String scriptPath = groovyUtils.projectPath + "/scripts/"

// Create Groovy Script Engine to run the script.
GroovyScriptEngine gse = new GroovyScriptEngine(scriptPath) 

// Load the Groovy Script file 
externalScript = gse.loadScriptByName("UtilsTest.Groovy")  

// Create a runtime instance of script
instance = externalScript.newInstance()

// Sanity check 
assert instance!= null

log.info("Corriendo script");

def dbDsa  = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbDSA')
def dbHost = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbHost')
def user = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbUser')
def password = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbPass')
def dbPort = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue("dbPort")

// Muestro el path de conexion de la DB
log.info(user + ":" + password + "@" + dbHost + ':' + dbPort + '/' + dbDsa)

// run the foo method in the external script
def dsaInstance = instance.getInstanceDB(dbDsa, dbHost, dbPort, user, password, log)

// Get of the response the code field
def codeResponse = parsedResponse.Items.activationCode.code

dsaInstance.query("select * from activation_code ac, subscriptions s where ac.subscription_id = s.id;"){ ResultSet rs ->
	// Pruebo el primero	
	rs.next()
	
	// Valido el campo code
	log.info("code: " + rs.getString('code'))
	assert rs.getString('code') == codeResponse
	
	//Valido que no haya mas datos.
	assert !rs.next() 	     
}</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="crmSubCode" value="100002" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="subscriptionsId Transfer" id="e9282164-a37a-4f53-93a3-c415a8be8b3e"><con:settings/><con:config><script>import groovy.json.JsonSlurper

subId = new JsonSlurper().parseText(testRunner.testCase.getTestStepByName('Create - CreateASubscriptionInMartinBravoShouldReturnSuccess').properties.Response.value).Items.subId.toString()

testRunner.testCase.getTestStepByName('Asign - AsingAServiceToASubscriptionShouldReturnTrue').setPropertyValue('subId', subId)
testRunner.testCase.getTestStepByName('Delete Service -Delete Service asigned').setPropertyValue('subId', subId)
testRunner.testCase.getTestStepByName('Delete Susbcription - DeletLastSubscriptionCreated').setPropertyValue('subId', subId)

context.subId = subId

</script></con:config></con:testStep><con:testStep type="restrequest" name="Update - UpdateMartinBravoSubscriberToMatiasBravoShouldReturnHisInfoOk" id="6f6bf4bc-32b5-40dc-980e-808903998b72"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}" methodName="Update" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Update - UpdateMartinBravoSubscriberToMatiasBravoShouldReturnHisInfoOk" id="7f7c1875-c1ab-4093-8e51-506fd78fc2f0" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
  "name": "${newNameUpdated}"
}</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber</con:originalUri><con:assertion type="Simple Contains" id="b6abe90b-2082-40ad-835e-f2c5d4b5fc1a" name="ContainResultSuccess"><con:configuration><token>Result":"Success"</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="b6abe90b-2082-40ad-835e-f2c5d4b5fc1a" name="ContainSubscriberName"><con:configuration><token>"name":"Lopez Salgado"</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="b6abe90b-2082-40ad-835e-f2c5d4b5fc1a" name="ContainSubscriberNumber"><con:configuration><token>"crmSubCode":"100002"</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="ad08966c-597a-42de-b315-cd7beb7e1238" name="Contains all items"><con:configuration><token>"Items":{"brandId":0,"crmSubCode":"100002","name":"Lopez Salgado"}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="d99a88d1-0e29-4669-8958-9a0eab18905e" name="ScriptAssertionDataBase"><con:configuration><scriptText>//import net.sf.*;
//import net.sf.json.*;
//import net.sf.json.groovy.*;
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import groovy.lang.Binding
import groovy.util.GroovyScriptEngine
import groovy.sql.Sql
import java.sql.ResultSet

//Get to response
def response = messageExchange.response.responseContent

//Parsed to response
def parsedResponse =  new JsonSlurper().parseText(response)

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

// location of script file is relative to SOAPUI project file.
String scriptPath = groovyUtils.projectPath + "/scripts/"

// Create Groovy Script Engine to run the script.
GroovyScriptEngine gse = new GroovyScriptEngine(scriptPath) 

// Load the Groovy Script file 
externalScript = gse.loadScriptByName("UtilsTest.Groovy")  

// Create a runtime instance of script
instance = externalScript.newInstance()

// Sanity check 
assert instance!= null

log.info("Corriendo script");

def dbDsa  = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbDSA')
def dbHost = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbHost')
def user = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbUser')
def password = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbPass')
def dbPort = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue("dbPort")

// Muestro el path de conexion de la DB
log.info(user + ":" + password + "@" + dbHost + ':' + dbPort + '/' + dbDsa)

// run the foo method in the external script
def dsaInstance = instance.getInstanceDB(dbDsa, dbHost, dbPort, user, password, log)

// Get of the response the name and crmSubCode fields
def crmSubCode = parsedResponse.Items.crmSubCode
def nameResponse = parsedResponse.Items.name

dsaInstance.query("select * from subscribers;"){ ResultSet rs ->
	// Pruebo el primero	
	rs.next()
	
	// Valido el campo crmSubCode
	log.info("number: " + rs.getString('number'))
	assert rs.getString('number') == crmSubCode

	// Valido el campo name
	log.info("name: " + rs.getString('name'))
	assert rs.getString('name') == nameResponse
	
	//Valido que no haya mas datos.
	assert !rs.next() 	     
}</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="crmSubCode" value="100002" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Asign - AsingAServiceToASubscriptionShouldReturnTrue" id="af9bcb87-1d7b-49a5-ae99-b6441d9e1046"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription/{subId}/service" methodName="Create" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Asign - AsingAServiceToASubscriptionShouldReturnTrue" id="1b406235-c481-45a1-aeed-d4cc36c905a5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
  "name":"${newService}",
  "crmCode": {"${newCrmCode}":"${valueCrmCode}"},
  "parameters": {"maxCpe":"${newMaxCpe}"}
}
</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/crmSubCode/issue</con:originalUri><con:assertion type="Simple Contains" id="690cc520-101d-4f04-b310-3e173b93275d" name="Contains Success"><con:configuration><token>"Result":"Success"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Invalid HTTP Status Codes" id="8c2958da-62ac-4762-a407-d2eba9421322" name="Invalid HTTP Status Codes &lt;> 200"><con:configuration><codes>HTTP/1.1 200 OK</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="39b1d030-fa88-4ea5-a348-90cff7ff0d3b" name="Contains name hsi"><con:configuration><token>"name":"hsi"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="c78540c0-86a5-4b5c-b5dc-7ffc0d493b27" name="Contains parameter field"><con:configuration><token>"parameters":</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="87d25ff8-c87c-4bb0-a0cf-f7d1f2e482e5" name="ScriptAssertionReturnBodyValidation"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

//Getting response from methods
def ResponseMessage = context.response
def parsedJson = new groovy.json.JsonSlurper().parseText(ResponseMessage)

assert parsedJson.Result == "Success"
assert parsedJson.Display_items == 1
assert parsedJson.Matched_items == 1
assert parsedJson.Error_code == null
assert parsedJson.Items != null
assert parsedJson.Error_str == null
assert parsedJson.Error_str_detail == null
assert parsedJson.Items.name == context.expand('${SetUpProperties#newService}')
assert parsedJson.Items.srvId == 1
assert parsedJson.Items.status == "inactive"
assert parsedJson.Items.crmCode.'12345' == context.expand('${SetUpProperties#valueCrmCode}')
assert parsedJson.Items.family == "gpon"
assert parsedJson.Items.parameters.trafficProfile == "200 Megas"
assert parsedJson.Items.parameters.clientClass == "publico"
assert parsedJson.Items.parameters.bindLanPortsType == "dynamic"
assert parsedJson.Items.parameters.bindLanPorts == 1
assert parsedJson.Items.parameters.bindLanPortsMaxAmount == 4
assert parsedJson.Items.parameters.bindLanPortsTotal == 1

//Firt Convert String MaxCpe Porperty to Integer
def newMaxCpeInt = (context.expand('${SetUpProperties#newMaxCpe}'))
assert parsedJson.Items.parameters.maxCpe == newMaxCpeInt.toInteger()
assert parsedJson.Items.parameters.reservedIpList[0] == null
assert parsedJson.Items.parameters.wifi.status == "disabled"
assert parsedJson.Items.parameters.gd.status == "enabled"
assert parsedJson.Items.parameters.gd.ipv4.nat == "enabled"
assert parsedJson.Items.parameters.gd.ipv4.ipMode == "DHCP"
assert parsedJson.Items.parameters.gd.ipv4.address == null
assert parsedJson.Items.parameters.gd.ipv4.mask == null
assert parsedJson.Items.parameters.gd.ipv4.gw == null
//assert parsedJson.Items.parameters.gd.ipv4.dns[1].'0' == "8.8.8.8"
assert parsedJson.Items.parameters.gd.ipv6.status == "disabled"

log.info("Validaciones OK")</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="crmSubCode" value="100002" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="crmCode Transfer" id="c821e823-39eb-481a-8acc-b6a2c1f39ef1"><con:settings/><con:config><script>import groovy.json.JsonSlurper

crmCode = new JsonSlurper().parseText(testRunner.testCase.getTestStepByName('Asign - AsingAServiceToASubscriptionShouldReturnTrue').properties.Response.value).Items.crmCode.toString()

crmCode2 = crmCode.substring(1,6)

log.info(crmCode2)

testRunner.testCase.getTestStepByName('GET By crmCode - GetTheInfoByCrmCodeShouldReturnTheDSADataOnly').setPropertyValue('SubscriptionId', crmCode2)

context.crmCode = crmCode2</script></con:config></con:testStep><con:testStep type="restrequest" name="GET By crmCode - GetTheInfoByCrmCodeShouldReturnTheDSADataOnly" id="e43de894-f15c-4054-ba64-690c048798e3"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/crmCode/info" methodName="crmCode/Info" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET By crmCode - GetTheInfoByCrmCodeShouldReturnTheDSADataOnly" id="793ad6e3-5cc4-4e15-8801-9410b43a5e0f" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request/><con:originalUri>http://10.0.0.100/dsa_jenkings/dsa/api/v1.0/crmCode/info/</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="e293ea09-94ff-40f3-8c5e-f7be11f4097d" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="0d9d0c32-7110-4ef9-ad41-7c5164f4b2a1" name="Contains Result Success"><con:configuration><token>"Result":"Success"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="7c4b7f20-78e8-4ef8-a5fe-0d490819fc1b" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

//Getting response from methods
def ResponseMessage = context.response
def parsedJson = new groovy.json.JsonSlurper().parseText(ResponseMessage)

assert parsedJson.Result == "Success"
assert parsedJson.Display_items == 1
assert parsedJson.Matched_items == 1
assert parsedJson.Error_code == null
assert parsedJson.Items != null
assert parsedJson.Error_str == null
assert parsedJson.Error_str_detail == null
assert parsedJson.Items.subscriber != null

assert parsedJson.Items.subscriber.name == "Lopez Salgado"
assert parsedJson.Items.subscriber.brandId == "0"
assert parsedJson.Items.subscriber.crmSubCode == "100002"

assert parsedJson.Items.subscriptions != null
assert parsedJson.Items.subscriptions.length != 0
assert parsedJson.Items.subscriptions[0].status == "pending"
assert parsedJson.Items.subscriptions[0].subId == 1

assert parsedJson.Items.subscriptions[0].services != null
assert parsedJson.Items.subscriptions[0].services.length != 0
assert parsedJson.Items.subscriptions[0].services[0].srvId == 1
assert parsedJson.Items.subscriptions[0].services[0].status == "inactive"
assert parsedJson.Items.subscriptions[0].services[0].name ==  "hsi"
assert parsedJson.Items.subscriptions[0].services[0].crmCode !=  null
assert parsedJson.Items.subscriptions[0].services[0].crmCode['12345'] ==  "SubscriptionId"

assert parsedJson.Items.subscriptions[0].services[0].parameters != null
assert parsedJson.Items.subscriptions[0].services[0].parameters.trafficProfile == "200 Megas"
assert parsedJson.Items.subscriptions[0].services[0].parameters.clientClass ==  "publico"
assert parsedJson.Items.subscriptions[0].services[0].parameters.bindLanPortsType == "dynamic"
assert parsedJson.Items.subscriptions[0].services[0].parameters.bindLanPorts != null

assert parsedJson.Items.subscriptions[0].services[0].parameters.bindLanPorts == 1
/*assert parsedJson.Items.subscriptions[0].services[0].parameters.bindLanPorts[1] == 2
assert parsedJson.Items.subscriptions[0].services[0].parameters.bindLanPorts[2] == 3
assert parsedJson.Items.subscriptions[0].services[0].parameters.bindLanPorts[3] == 4*/

assert parsedJson.Items.subscriptions[0].services[0].parameters.maxCpe == 90
assert parsedJson.Items.subscriptions[0].services[0].parameters.reservedIpList[0] == null
assert parsedJson.Items.subscriptions[0].services[0].parameters.wifi.status == "disabled"
assert parsedJson.Items.subscriptions[0].services[0].parameters.gd.status ==  "enabled"

assert parsedJson.Items.subscriptions[0].activationCode != null
assert parsedJson.Items.subscriptions[0].activationCode.code != ""
assert parsedJson.Items.subscriptions[0].activationCode.expirationDate !=  ""
assert parsedJson.Items.subscriptions[0].activationCode.active == true</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="95067cd1-179a-40e5-a888-dac58d9d24ce"><con:configuration/></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="include" value="devinfo,leases,outside_plant"/>
  <con:entry key="SubscriptionId" value="12345"/>
</con:parameters><con:parameterOrder><con:entry>include</con:entry><con:entry>SubscriptionId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ServId Transfer" id="b97dae7f-95b5-481f-af57-05d59ea8de39"><con:settings/><con:config><script>import groovy.json.JsonSlurper

srvId = new JsonSlurper().parseText(testRunner.testCase.getTestStepByName('GET By crmCode - GetTheInfoByCrmCodeShouldReturnTheDSADataOnly').properties.Response.value).Items.subscriptions[0].services[0].srvId.toString()

testRunner.testCase.getTestStepByName('GET By crmCode - GetTheInfoByCrmCodeShouldReturnTheDSADataOnly').setPropertyValue('srvId', srvId)

context.srvId = srvId</script></con:config></con:testStep><con:testStep type="restrequest" name="Delete Service -Delete Service asigned" id="3429f3d2-7a71-4260-9376-d32ae31401b9"><con:settings/><con:config service="http://10.0.0.100:8080" methodName="Delete" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription/{subId}/service/{srvId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Delete Service -Delete Service asigned" id="289257b9-eee3-4b29-acf2-df2487ccd035" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request/><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v1.0/subscriber/10002/subscription/1/service/1</con:originalUri><con:assertion type="Simple Contains" id="a0ce99ff-6530-424f-aea8-0fd77d337a67" name="Contains"><con:configuration><token>"Result":"Success"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="5a8a1d86-89b2-4cbd-b45a-630be6314dbd" name="ScriptAssertionDataBase"><con:configuration><scriptText>//import net.sf.*;
//import net.sf.json.*;
//import net.sf.json.groovy.*;
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import groovy.lang.Binding
import groovy.util.GroovyScriptEngine
import groovy.sql.Sql
import java.sql.ResultSet

//Get to response
def response = messageExchange.response.responseContent

//Parsed to response
def parsedResponse =  new JsonSlurper().parseText(response)

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

// location of script file is relative to SOAPUI project file.
String scriptPath = groovyUtils.projectPath + "/scripts/"

// Create Groovy Script Engine to run the script.
GroovyScriptEngine gse = new GroovyScriptEngine(scriptPath) 

// Load the Groovy Script file 
externalScript = gse.loadScriptByName("UtilsTest.Groovy")  

// Create a runtime instance of script
instance = externalScript.newInstance()

// Sanity check 
assert instance!= null

log.info("Corriendo script");

def dbDsa  = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbDSA')
def dbHost = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbHost')
def user = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbUser')
def password = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbPass')
def dbPort = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue("dbPort")

// Muestro el path de conexion de la DB
log.info(user + ":" + password + "@" + dbHost + ':' + dbPort + '/' + dbDsa)

// run the foo method in the external script
def dsaInstance = instance.getInstanceDB(dbDsa, dbHost, dbPort, user, password, log)

dsaInstance.query("select * from subscription_service;"){ ResultSet rs ->
	// Pruebo el primero	
	assert !rs.next()
}

log.info("Validacion OK")</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="srvId" value="1"/>
  <con:entry key="crmSubCode" value="100002"/>
</con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry><con:entry>srvId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Delete Susbcription - DeletLastSubscriptionCreated" id="137d1222-69d6-49da-a8e7-c31be19d7905"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription/{subId}" methodName="Delete" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Delete Susbcription - DeletLastSubscriptionCreated" id="18dec9d5-5236-4e78-9992-028083570553" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request/><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode</con:originalUri><con:assertion type="Simple Contains" id="83d1f736-2c19-42dc-b828-509b14bd7fc7" name="Contains"><con:configuration><token>"Result":"Success"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="50e00ada-d996-4fcb-bd61-19c3e859b7ac" name="ScriptAssertionDataBase"><con:configuration><scriptText>//import net.sf.*;
//import net.sf.json.*;
//import net.sf.json.groovy.*;
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import groovy.lang.Binding
import groovy.util.GroovyScriptEngine
import groovy.sql.Sql
import java.sql.ResultSet

//Get to response
def response = messageExchange.response.responseContent

//Parsed to response
def parsedResponse =  new JsonSlurper().parseText(response)

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

// location of script file is relative to SOAPUI project file.
String scriptPath = groovyUtils.projectPath + "/scripts/"

// Create Groovy Script Engine to run the script.
GroovyScriptEngine gse = new GroovyScriptEngine(scriptPath) 

// Load the Groovy Script file 
externalScript = gse.loadScriptByName("UtilsTest.Groovy")  

// Create a runtime instance of script
instance = externalScript.newInstance()

// Sanity check 
assert instance!= null

log.info("Corriendo script");

def dbDsa  = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbDSA')
def dbHost = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbHost')
def user = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbUser')
def password = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbPass')
def dbPort = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue("dbPort")

// Muestro el path de conexion de la DB
log.info(user + ":" + password + "@" + dbHost + ':' + dbPort + '/' + dbDsa)

// run the foo method in the external script
def dsaInstance = instance.getInstanceDB(dbDsa, dbHost, dbPort, user, password, log)

dsaInstance.query("select * from subscriptions;"){ ResultSet rs ->
	// Pruebo el primero	
	assert !rs.next()
}

log.info("Validacion OK")</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="crmSubCode" value="100002" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Delete - DeleteMartinBravoSubscriberShouldReturnOk" id="5113813b-37fc-43dd-92b2-c38d88bb14d0"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}" methodName="Delete" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Delete - DeleteMartinBravoSubscriberShouldReturnOk" id="7f7c1875-c1ab-4093-8e51-506fd78fc2f0" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
"crmSubCode":"100002",
"name":"Martin Bravo"
}
</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber</con:originalUri><con:assertion type="Simple Contains" id="b6abe90b-2082-40ad-835e-f2c5d4b5fc1a" name="ContainResultSuccess"><con:configuration><token>Result":"Success"</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Invalid HTTP Status Codes" id="6ffe93fa-3771-4f8a-9fd3-e6ab4db07b1a" name="Invalid HTTP Status Codes"><con:configuration><codes>HTTP/1.1 200 OK</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="b9009ff9-88a6-4858-8a72-ddedd249925f" name="ScriptAssertionReturnBodyValidation"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

//Getting response from methods
def ResponseMessage = context.response
def parsedJson = new groovy.json.JsonSlurper().parseText(ResponseMessage)

assert parsedJson.Result == "Success"
assert parsedJson.Display_items == 0
assert parsedJson.Matched_items == 1
assert parsedJson.Error_code == null
assert parsedJson.Items == null
assert parsedJson.Error_str == null
assert parsedJson.Error_str_detail == null
assert parsedJson.Donetime != null</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="aaca6da2-3f05-4537-92fd-ff6a7aa6049d" name="ScriptAssertionDataBase"><con:configuration><scriptText>//import net.sf.*;
//import net.sf.json.*;
//import net.sf.json.groovy.*;
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import groovy.lang.Binding
import groovy.util.GroovyScriptEngine
import groovy.sql.Sql
import java.sql.ResultSet

//Get to response
def response = messageExchange.response.responseContent

//Parsed to response
def parsedResponse =  new JsonSlurper().parseText(response)

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

// location of script file is relative to SOAPUI project file.
String scriptPath = groovyUtils.projectPath + "/scripts/"

// Create Groovy Script Engine to run the script.
GroovyScriptEngine gse = new GroovyScriptEngine(scriptPath) 

// Load the Groovy Script file 
externalScript = gse.loadScriptByName("UtilsTest.Groovy")  

// Create a runtime instance of script
instance = externalScript.newInstance()

// Sanity check 
assert instance!= null

log.info("Corriendo script");

def dbDsa  = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbDSA')
def dbHost = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbHost')
def user = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbUser')
def password = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbPass')
def dbPort = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue("dbPort")

// Muestro el path de conexion de la DB
log.info(user + ":" + password + "@" + dbHost + ':' + dbPort + '/' + dbDsa)

// run the foo method in the external script
def dsaInstance = instance.getInstanceDB(dbDsa, dbHost, dbPort, user, password, log)

dsaInstance.query("select * from subscribers;"){ ResultSet rs ->
	// Pruebo el primero	
	assert !rs.next()
}

log.info("Validacion OK")</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="crmSubCode" value="100002" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:setupScript>import groovy.lang.Binding
import groovy.util.GroovyScriptEngine

def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )

// location of script file is relative to SOAPUI project file.
String scriptPath = groovyUtils.projectPath + "/scripts/"

// Create Groovy Script Engine to run the script.
GroovyScriptEngine gse = new GroovyScriptEngine(scriptPath) 

// Load the Groovy Script file 
externalScript = gse.loadScriptByName("UtilsTest.Groovy")  

// Create a runtime instance of script
instance = externalScript.newInstance()

// Sanity check 
assert instance!= null

//call project properties
def dbDsa = testRunner.testCase.testSuite.project.getPropertyValue("dbDsa")
def dbHost = testRunner.testCase.testSuite.project.getPropertyValue("dbHost")
def user = testRunner.testCase.testSuite.project.getPropertyValue("dbUser")
def password = testRunner.testCase.testSuite.project.getPropertyValue("dbPass")
def dbPort = testRunner.testCase.testSuite.project.getPropertyValue("dbPort")

// run the foo method in the external script
instance.recreateDsaDB(dbDsa,dbHost,dbPort,user,password,log)
//instance.recreateDsaProductsV02(dbDsa,dbHost,user,password,log)
//instance.recreateFdmDB(testRunner.testCase.testSuite.project,log)
//instance.FdmOntWithBrand(testRunner.testCase.testSuite.project,log)
//instance.recreateBdpDB(testRunner.testCase.testSuite.project,log)
//instance.settingBDP(testRunner.testCase.testSuite.project,log)
//instance.recreateAsteriskDB(testRunner.testCase.testSuite.project,log)</con:setupScript><con:tearDownScript/><con:properties><con:property><con:name>version</con:name><con:value>1.0</con:value></con:property><con:property><con:name>ws_status</con:name><con:value>ok</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>7062ffb4-507e-44fd-a972-a40b46fbdb7e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>8f421686-dc20-4171-baa5-7cfa926d6bd3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ff1372a5-bc08-4ef7-bda4-a5d5e17cb9b0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cd5955e7-081c-48a6-8294-1327318914dd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e9c1545c-86b0-4119-a104-eeea21441b89</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>8dc83b64-abd7-4767-86ed-bf83957fe9dd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e9282164-a37a-4f53-93a3-c415a8be8b3e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6f6bf4bc-32b5-40dc-980e-808903998b72</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>af9bcb87-1d7b-49a5-ae99-b6441d9e1046</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c821e823-39eb-481a-8acc-b6a2c1f39ef1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e43de894-f15c-4054-ba64-690c048798e3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b97dae7f-95b5-481f-af57-05d59ea8de39</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3429f3d2-7a71-4260-9376-d32ae31401b9</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>137d1222-69d6-49da-a8e7-c31be19d7905</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5113813b-37fc-43dd-92b2-c38d88bb14d0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="3412f57d-1c93-4e14-916b-ccf0070d7304" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Test E2E Service Suit" searchProperties="true"><con:settings/><con:testStep type="properties" name="SetUpProperties" id="edc6604f-8088-441c-8db3-da30c8a9e380"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>include</con:name><con:value>devinfo,leases,outside_plant</con:value></con:property><con:property><con:name>newActivationCode</con:name><con:value>12321321</con:value></con:property><con:property><con:name>newAllBindLanPorts</con:name><con:value>1,2,3,4</con:value></con:property><con:property><con:name>newBindLanPorts</con:name><con:value>2</con:value></con:property><con:property><con:name>newClientClass</con:name><con:value>publico</con:value></con:property><con:property><con:name>newCrmCode</con:name><con:value>12345</con:value></con:property><con:property><con:name>newCrmCode2</con:name><con:value>78945</con:value></con:property><con:property><con:name>newCrmCodeGigaplus</con:name><con:value>0013</con:value></con:property><con:property><con:name>newCrmCodeLiv</con:name><con:value>0010</con:value></con:property><con:property><con:name>newCrmCodeMaximo</con:name><con:value>0015</con:value></con:property><con:property><con:name>newCrmCodeOptimo</con:name><con:value>0011</con:value></con:property><con:property><con:name>newCrmCodeScm</con:name><con:value>0019</con:value></con:property><con:property><con:name>newCrmCodeTls</con:name><con:value>0017</con:value></con:property><con:property><con:name>newCrmCodeTlsQinq</con:name><con:value>0018</con:value></con:property><con:property><con:name>newCrmCodeUnico</con:name><con:value>0012</con:value></con:property><con:property><con:name>newCrmCodeVideo</con:name><con:value>0016</con:value></con:property><con:property><con:name>newCrmCodeVoip</con:name><con:value>0014</con:value></con:property><con:property><con:name>newCrmSubCode</con:name><con:value>100002</con:value></con:property><con:property><con:name>newIdDevice</con:name><con:value>ZTE01010101010</con:value></con:property><con:property><con:name>newIpAddress</con:name><con:value>10.0.0.2</con:value></con:property><con:property><con:name>newIpDns1</con:name><con:value>12.1.2.2</con:value></con:property><con:property><con:name>newIpDns2</con:name><con:value>8.8.8.8</con:value></con:property><con:property><con:name>newIpDns3</con:name><con:value>8.8.4.4</con:value></con:property><con:property><con:name>newIpGw</con:name><con:value>12.1.1.1</con:value></con:property><con:property><con:name>newIpMask</con:name><con:value>255.0.0.0</con:value></con:property><con:property><con:name>newIpModeDhcp</con:name><con:value>DHCP</con:value></con:property><con:property><con:name>newIpModeStatic</con:name><con:value>static</con:value></con:property><con:property><con:name>newMaxCpe</con:name><con:value>90</con:value></con:property><con:property><con:name>newName</con:name><con:value>Martin Bravo</con:value></con:property><con:property><con:name>newNameUnico</con:name><con:value>unico</con:value></con:property><con:property><con:name>newNameUpdated</con:name><con:value>Lopez Salgado</con:value></con:property><con:property><con:name>newReservationIpLista</con:name><con:value>90</con:value></con:property><con:property><con:name>newReservedIpList1</con:name><con:value>10.0.0.1</con:value></con:property><con:property><con:name>newReservedIpList2</con:name><con:value>10.0.0.5</con:value></con:property><con:property><con:name>newReservedIpList3</con:name><con:value>100.201.201.203</con:value></con:property><con:property><con:name>newServiceHsi</con:name><con:value>hsi</con:value></con:property><con:property><con:name>newServiceScm</con:name><con:value>scm</con:value></con:property><con:property><con:name>newServicesGigaplus</con:name><con:value>gigaplus</con:value></con:property><con:property><con:name>newServicesLiv</con:name><con:value>liv</con:value></con:property><con:property><con:name>newServicesMaximo</con:name><con:value>maximo</con:value></con:property><con:property><con:name>newServicesOptimo</con:name><con:value>optimo</con:value></con:property><con:property><con:name>newServicesTls</con:name><con:value>tls</con:value></con:property><con:property><con:name>newServicesTlsQinq</con:name><con:value>tls-qinq</con:value></con:property><con:property><con:name>newServicesVideo</con:name><con:value>video</con:value></con:property><con:property><con:name>newServicesVoip</con:name><con:value>voippack</con:value></con:property><con:property><con:name>newServiceTypeScm</con:name><con:value>TLS</con:value></con:property><con:property><con:name>newStatusDisabled</con:name><con:value>disabled</con:value></con:property><con:property><con:name>newStatusEnabled</con:name><con:value>enabled</con:value></con:property><con:property><con:name>newStatusSuspended</con:name><con:value>suspended</con:value></con:property><con:property><con:name>newSubscriptionId</con:name><con:value>12345</con:value></con:property><con:property><con:name>newTrafficProfile</con:name><con:value>300 Megas</con:value></con:property><con:property><con:name>newTrafficProfile2</con:name><con:value>300 Megas</con:value></con:property><con:property><con:name>newVlanValue</con:name><con:value>1245</con:value></con:property><con:property><con:name>reservationId</con:name><con:value>909090</con:value></con:property><con:property><con:name>valueCrmCode</con:name><con:value>SubscriptionId</con:value></con:property><con:property><con:name>newPort</con:name><con:value>90</con:value></con:property><con:property><con:name>newUserVoip</con:name><con:value>testUserVoip</con:value></con:property><con:property><con:name>newPasswordVoip</con:name><con:value>testPasswordVoip</con:value></con:property><con:property><con:name>newLineVoip</con:name><con:value>48484340</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Create - CreateMartinBravoSubscriberShouldReturnOk" id="0ad8779a-b5f0-40e6-b7c1-462d090837d1"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber" methodName="Create" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Create - CreateMartinBravoSubscriberShouldReturnOk" id="7f7c1875-c1ab-4093-8e51-506fd78fc2f0" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
"crmSubCode":"${newCrmSubCode}",
"name":"${newName}"
}
</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber</con:originalUri><con:assertion type="GroovyScriptAssertion" id="94249649-86b9-4185-8483-70871464f145" name="ScriptAssertionReturnBodyValidation"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

//Getting response from methods
def ResponseMessage = context.response
def parsedJson = new groovy.json.JsonSlurper().parseText(ResponseMessage)

assert parsedJson.Result == "Success"
assert parsedJson.Items.name == context.expand('${SetUpProperties#newName}')
assert parsedJson.Items.crmSubCode == context.expand('${SetUpProperties#newCrmSubCode}')
assert parsedJson.Display_items == 1
assert parsedJson.Matched_items == 1
assert parsedJson.Error_code == null
assert parsedJson.Items != null
assert parsedJson.Error_str == null
assert parsedJson.Error_str_detail == null
assert parsedJson.Donetime != null

</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="e0d8a742-f76c-4959-9e11-c3228129f24e" name="ScriptAssertionDataBase"><con:configuration><scriptText>import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import groovy.lang.Binding
import groovy.util.GroovyScriptEngine
import groovy.sql.Sql
import java.sql.ResultSet

//Obtengo el response
def response = messageExchange.response.responseContent

//Parseo el response.
def parsedResponse =  new JsonSlurper().parseText(response)

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

// location of script file is relative to SOAPUI project file.
String scriptPath = groovyUtils.projectPath + "/scripts/"

// Create Groovy Script Engine to run the script.
GroovyScriptEngine gse = new GroovyScriptEngine(scriptPath) 

// Load the Groovy Script file 
externalScript = gse.loadScriptByName("UtilsTest.Groovy")  

// Create a runtime instance of script
instance = externalScript.newInstance()

// Sanity check 
assert instance!= null

log.info("Corriendo script");

def dbDsa  = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbDSA')
def dbHost = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbHost')
def user = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbUser')
def password = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbPass')
def dbPort = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue("dbPort")

// Muestro el path de conexion de la DB
log.info(user + ":" + password + "@" + dbHost + ':' + dbPort + '/' + dbDsa)
log.info(parsedResponse.Items.name)


// run the foo method in the external script
def dsaInstance = instance.getInstanceDB(dbDsa, dbHost, dbPort, user, password, log)

// Get of the response the name and crmSubCode fields
def name = parsedResponse.Items.name
def crmSubCode = parsedResponse.Items.crmSubCode

dsaInstance.query("select s.number,s.name from subscribers s where s.number = '${crmSubCode}'"){ ResultSet rs ->
	// Pruebo el primero	
	rs.next()
	
	// Valido el campo name
	log.info("name: " + rs.getString('name'))
	assert rs.getString('name') == name

	// Valido el campo number == crmSubCode en response.
	log.info("number: " + rs.getString('number'))
	assert rs.getString('number') == crmSubCode

	
	//Valido que no haya mas datos.
	assert !rs.next() 	     
}

</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="crmSubCodeTransfer" id="7582c1c7-b718-4a05-86e4-5e98b2a65252"><con:settings/><con:config><script>import groovy.json.JsonSlurper

crmSubCode = new JsonSlurper().parseText(testRunner.testCase.getTestStepByName('Create - CreateMartinBravoSubscriberShouldReturnOk').properties.Response.value).Items.crmSubCode.toString()

testRunner.testCase.getTestStepByName('Create - CreateASubscriptionInMartinBravoShouldReturnSuccess').setPropertyValue('crmSubCode', crmSubCode)
testRunner.testCase.getTestStepByName('Create - CreateServiceHsi').setPropertyValue('crmSubCode', crmSubCode)
testRunner.testCase.getTestStepByName('Create - CreateServiceLIV').setPropertyValue('crmSubCode', crmSubCode)
testRunner.testCase.getTestStepByName('Create - CreateServiceOptimo').setPropertyValue('crmSubCode', crmSubCode)
testRunner.testCase.getTestStepByName('Create - CreateServiceUnico').setPropertyValue('crmSubCode', crmSubCode)
testRunner.testCase.getTestStepByName('Create - CreateServiceGIGAPLUS').setPropertyValue('crmSubCode', crmSubCode)
testRunner.testCase.getTestStepByName('Create - CrateServiceVOIPPACK').setPropertyValue('crmSubCode', crmSubCode)
testRunner.testCase.getTestStepByName('Create - CreateServiceMaximo').setPropertyValue('crmSubCode', crmSubCode)
testRunner.testCase.getTestStepByName('Create - CreateServiceVideo').setPropertyValue('crmSubCode', crmSubCode)
testRunner.testCase.getTestStepByName('Create - CreateServiceTls').setPropertyValue('crmSubCode', crmSubCode)
testRunner.testCase.getTestStepByName('Create - CreateServiceTlsQinQ').setPropertyValue('crmSubCode', crmSubCode)
testRunner.testCase.getTestStepByName('Create - CreateServiceVoip').setPropertyValue('crmSubCode', crmSubCode)
testRunner.testCase.getTestStepByName('Create - CreateServiceHsi - ReservationIpList failure').setPropertyValue('crmSubCode', crmSubCode)
testRunner.testCase.getTestStepByName('Create Another - CreateServiceHsiShouldReturnReservedIPList').setPropertyValue('crmSubCode', crmSubCode)
testRunner.testCase.getTestStepByName('Create ServiceWithDNS - CreateServiceHsiShouldReturnReservedIPList').setPropertyValue('crmSubCode', crmSubCode)
testRunner.testCase.getTestStepByName('Get - GetService').setPropertyValue('crmSubCode', crmSubCode)
testRunner.testCase.getTestStepByName('Get All - GetAllSubscriptionService').setPropertyValue('crmSubCode', crmSubCode)
testRunner.testCase.getTestStepByName('Create AllParams - CreateServiceHsiShouldReturnReservedIPList').setPropertyValue('crmSubCode', crmSubCode)
testRunner.testCase.getTestStepByName('Asign device - ActiveSubscriptionShouldReturnOk').setPropertyValue('crmSubCode', crmSubCode)
testRunner.testCase.getTestStepByName('ValidationError - UpdateNotValidStatusServiceShouldReturnFailure').setPropertyValue('crmSubCode', crmSubCode)
testRunner.testCase.getTestStepByName('Activate - UpdateStatusService').setPropertyValue('crmSubCode', crmSubCode)
testRunner.testCase.getTestStepByName('Update - CrmCodeService').setPropertyValue('crmSubCode', crmSubCode)
testRunner.testCase.getTestStepByName('Update - ParamsService').setPropertyValue('crmSubCode', crmSubCode)
testRunner.testCase.getTestStepByName('Update - ParamsService bindLanPorts').setPropertyValue('crmSubCode', crmSubCode)
testRunner.testCase.getTestStepByName('Delete - DeleteService').setPropertyValue('crmSubCode', crmSubCode)
testRunner.testCase.getTestStepByName('Create - CreateServiceSCM').setPropertyValue('crmSubCode', crmSubCode)

context.crmSubCode = crmSubCode</script></con:config></con:testStep><con:testStep type="restrequest" name="Create - CreateASubscriptionInMartinBravoShouldReturnSuccess" id="b6e44b39-a118-421a-b0d4-8ef85d839a5b"><con:settings/><con:config service="http://10.0.0.100:8080" methodName="Create" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Create - CreateASubscriptionInMartinBravoShouldReturnSuccess" id="c2e14433-2d71-4676-a9d8-51d55cbe18a7" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
  "reservationId": "${reservationId}"
}
</con:request><con:originalUri>http://10.0.0.100/dsa-nico/dsa/api/v1.0/subscriber/100002/subscription</con:originalUri><con:assertion type="GroovyScriptAssertion" id="5413a192-d822-4e09-8325-3f5207d65bde" name="ScriptAssertionReturnBodyValidation"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

//Getting response from methods
def ResponseMessage = context.response
def parsedJson = new groovy.json.JsonSlurper().parseText(ResponseMessage)

assert parsedJson.Result == "Success"
assert parsedJson.Display_items == 1
assert parsedJson.Matched_items == 1
assert parsedJson.Error_code == null
assert parsedJson.Items != null
assert parsedJson.Error_str == null
assert parsedJson.Error_str_detail == null
assert parsedJson.Donetime != null
assert parsedJson.Items.subId == 1
assert parsedJson.Items.status == "pending"
assert parsedJson.Items.reservationId == context.expand('${SetUpProperties#reservationId}')
assert parsedJson.Items.activationCode != null
assert parsedJson.Items.activationCode.code != null
assert parsedJson.Items.activationCode.expirationDate != null
assert parsedJson.Items.activationCode.active == true

log.info("Validaciones OK")</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="3eee3388-c663-4e3a-8b2a-c2188bc0aae9" name="ScriptAssertionDataBase"><con:configuration><scriptText>import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import groovy.lang.Binding
import groovy.util.GroovyScriptEngine
import groovy.sql.Sql
import java.sql.ResultSet

//Obtengo el response
def response = messageExchange.response.responseContent

//Parseo el response.
def parsedResponse =  new JsonSlurper().parseText(response)

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

// location of script file is relative to SOAPUI project file.
String scriptPath = groovyUtils.projectPath + "/scripts/"

// Create Groovy Script Engine to run the script.
GroovyScriptEngine gse = new GroovyScriptEngine(scriptPath) 

// Load the Groovy Script file 
externalScript = gse.loadScriptByName("UtilsTest.Groovy")  

// Create a runtime instance of script
instance = externalScript.newInstance()

// Sanity check 
assert instance!= null

log.info("Corriendo script");

def dbDsa  = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbDSA')
def dbHost = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbHost')
def user = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbUser')
def password = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbPass')
def dbPort = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue("dbPort")

// Muestro el path de conexion de la DB
log.info(user + ":" + password + "@" + dbHost + ':' + dbPort + '/' + dbDsa)
log.info(parsedResponse.Items.name)


// run the foo method in the external script
def dsaInstance = instance.getInstanceDB(dbDsa, dbHost, dbPort, user, password, log)

// Get of the response the name and crmSubCode fields
def code = parsedResponse.Items.activationCode.code
def subscriptionId = parsedResponse.Items.subId as Integer
def reservationId = parsedResponse.Items.reservationId
def status = parsedResponse.Items.status

dsaInstance.query("select s.id, s.status, s.reservationId, ac.code from subscriptions s, activation_code ac where s.id = ac.subscription_id and s.id = 1;")
{ ResultSet rs ->
	// Pruebo el primero	
	rs.next()
	
	// Valido el campo subscriptionId
	log.info("id: " + rs.getInt('id'))
	assert rs.getInt('id') == subscriptionId

	// Valido el campo status
	log.info("status: " + rs.getString('status'))
	assert rs.getString('status') == status

	// Valido el campo reservationId
	log.info("reservationId: " + rs.getString('reservationId'))
	assert rs.getString('reservationId') == reservationId

	// Valido el campo reservationId
	log.info("code: " + rs.getString('code'))
	assert rs.getString('code') == code
	
	//Valido que no haya mas datos.
	assert !rs.next() 	     
}
</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="crmSubCode" value="100002" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="subscriptionsId Transfer" id="f7e9ea82-1475-4a3d-8bdf-29bb029ee578"><con:settings/><con:config><script>import groovy.json.JsonSlurper

subId = new JsonSlurper().parseText(testRunner.testCase.getTestStepByName('Create - CreateASubscriptionInMartinBravoShouldReturnSuccess').properties.Response.value).Items.subId.toString()

testRunner.testCase.getTestStepByName('Create - CreateServiceHsi').setPropertyValue('subId', subId)
testRunner.testCase.getTestStepByName('Create - CreateServiceLIV').setPropertyValue('subId', subId)
testRunner.testCase.getTestStepByName('Create - CreateServiceOptimo').setPropertyValue('subId', subId)
testRunner.testCase.getTestStepByName('Create - CreateServiceUnico').setPropertyValue('subId', subId)
testRunner.testCase.getTestStepByName('Create - CreateServiceGIGAPLUS').setPropertyValue('subId', subId)
testRunner.testCase.getTestStepByName('Create - CrateServiceVOIPPACK').setPropertyValue('subId', subId)
testRunner.testCase.getTestStepByName('Create - CreateServiceMaximo').setPropertyValue('subId', subId)
testRunner.testCase.getTestStepByName('Create - CreateServiceVideo').setPropertyValue('subId', subId)
testRunner.testCase.getTestStepByName('Create - CreateServiceTls').setPropertyValue('subId', subId)
testRunner.testCase.getTestStepByName('Create - CreateServiceTlsQinQ').setPropertyValue('subId', subId)
testRunner.testCase.getTestStepByName('Create - CreateServiceVoip').setPropertyValue('subId', subId)
testRunner.testCase.getTestStepByName('Create - CreateServiceHsi - ReservationIpList failure').setPropertyValue('subId', subId)
testRunner.testCase.getTestStepByName('Create Another - CreateServiceHsiShouldReturnReservedIPList').setPropertyValue('subId', subId)
testRunner.testCase.getTestStepByName('Create ServiceWithDNS - CreateServiceHsiShouldReturnReservedIPList').setPropertyValue('subId', subId)
testRunner.testCase.getTestStepByName('Get - GetService').setPropertyValue('subId', subId)
testRunner.testCase.getTestStepByName('Get All - GetAllSubscriptionService').setPropertyValue('subId', subId)
testRunner.testCase.getTestStepByName('Create AllParams - CreateServiceHsiShouldReturnReservedIPList').setPropertyValue('subId', subId)
testRunner.testCase.getTestStepByName('Asign device - ActiveSubscriptionShouldReturnOk').setPropertyValue('subId', subId)
testRunner.testCase.getTestStepByName('ValidationError - UpdateNotValidStatusServiceShouldReturnFailure').setPropertyValue('subId', subId)
testRunner.testCase.getTestStepByName('Activate - UpdateStatusService').setPropertyValue('subId', subId)
testRunner.testCase.getTestStepByName('Update - CrmCodeService').setPropertyValue('subId', subId)
testRunner.testCase.getTestStepByName('Update - ParamsService').setPropertyValue('subId', subId)
testRunner.testCase.getTestStepByName('Update - ParamsService bindLanPorts').setPropertyValue('subId', subId)
testRunner.testCase.getTestStepByName('Delete - DeleteService').setPropertyValue('subId', subId)
testRunner.testCase.getTestStepByName('Create - CreateServiceSCM').setPropertyValue('subId', subId)



context.subId = subId

</script></con:config></con:testStep><con:testStep type="restrequest" name="Create - CreateServiceHsi" id="b551bb03-ebf1-4234-820a-81ffc07f6055"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription/{subId}/service" methodName="Create" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Create - CreateServiceHsi" id="1b406235-c481-45a1-aeed-d4cc36c905a5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
  "name":"${newServiceHsi}",
  "crmCode": {"${newCrmCode}":"${valueCrmCode}"},
  "parameters": 
  	{
 		"maxcpe":"${newMaxCpe}"
 	}
}
</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/crmSubCode/issue</con:originalUri><con:assertion type="GroovyScriptAssertion" id="4cd69ddb-cde5-4d7d-a7f4-dd52c20442bf" name="ScriptAssertionReturnBodyValidation"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

//Getting response from methods
def ResponseMessage = context.response
def parsedJson = new groovy.json.JsonSlurper().parseText(ResponseMessage)

assert parsedJson.Result == "Success"
assert parsedJson.Display_items == 1
assert parsedJson.Matched_items == 1
assert parsedJson.Error_code == null
assert parsedJson.Items != null
assert parsedJson.Items.parameters != null
assert parsedJson.Items.parameters.clientClass != null
assert parsedJson.Items.parameters.bindLanPorts != null
assert parsedJson.Items.parameters.bindLanPortsType != null
assert parsedJson.Items.parameters.bindLanPortsMaxAmount != null
assert parsedJson.Items.parameters.bindLanPortsTotal != null
assert parsedJson.Items.parameters.maxCpe == 90
assert parsedJson.Items.parameters.trafficProfile != null
assert parsedJson.Items.parameters.reservedIpList[0] == null
assert parsedJson.Items.parameters.wifi.status == "disabled"
assert parsedJson.Items.parameters.gd.status == "enabled"
assert parsedJson.Items.parameters.gd.ipv4.nat == "enabled"
assert parsedJson.Items.parameters.gd.ipv4.ipMode == "DHCP"
assert parsedJson.Items.parameters.gd.ipv4.address == null
assert parsedJson.Items.parameters.gd.ipv4.mask == null
assert parsedJson.Items.parameters.gd.ipv4.gw == null
assert parsedJson.Items.parameters.gd.ipv4.gw == null
assert parsedJson.Items.parameters.gd.ipv4.dns[0] == "8.8.8.8"
assert parsedJson.Items.parameters.gd.ipv6.status == "disabled"
assert parsedJson.Error_str == null
assert parsedJson.Error_str_detail == null
assert parsedJson.Donetime != null

log.info("Validaciones OK")</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="a9bdb9ae-138b-4557-acce-fe7948144e0c" name="ScriptAssertionDataBase"><con:configuration><scriptText>import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import groovy.lang.Binding
import groovy.util.GroovyScriptEngine
import groovy.sql.Sql
import java.sql.ResultSet

//Obtengo el response
def response = messageExchange.response.responseContent

//Parseo el response.
def parsedResponse =  new JsonSlurper().parseText(response)

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

// location of script file is relative to SOAPUI project file.
String scriptPath = groovyUtils.projectPath + "/scripts/"

// Create Groovy Script Engine to run the script.
GroovyScriptEngine gse = new GroovyScriptEngine(scriptPath) 

// Load the Groovy Script file 
externalScript = gse.loadScriptByName("UtilsTest.Groovy")  

// Create a runtime instance of script
instance = externalScript.newInstance()

// Sanity check 
assert instance!= null

log.info("Corriendo script");

def dbDsa  = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbDSA')
def dbHost = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbHost')
def user = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbUser')
def password = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbPass')
def dbPort = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue("dbPort")

// Muestro el path de conexion de la DB
log.info(user + ":" + password + "@" + dbHost + ':' + dbPort + '/' + dbDsa)
log.info(parsedResponse.Items.name)


// run the foo method in the external script
def dsaInstance = instance.getInstanceDB(dbDsa, dbHost, dbPort, user, password, log)

// Get of the response the name and crmSubCode fields
def servicesId = parsedResponse.Items.srvId as Integer
def status = parsedResponse.Items.status
def name = parsedResponse.Items.name
def trafficProfile = parsedResponse.Items.parameters.trafficProfile
def clientClass = parsedResponse.Items.parameters.clientClass
def maxCpe = parsedResponse.Items.parameters.maxCpe as Integer
def reservedIpList = parsedResponse.Items.parameters.reservedIpList[0]
def wifiStatus = parsedResponse.Items.parameters.wifi.status
def gdStatus = parsedResponse.Items.parameters.gd.status
def gdIpv4Nat = parsedResponse.Items.parameters.gd.ipv4.nat
def gdIpv4IpMode = parsedResponse.Items.parameters.gd.ipv4.ipMode
def gdIpv4Address = parsedResponse.Items.parameters.gd.ipv4.address
def gdIpv4Mask = parsedResponse.Items.parameters.gd.ipv4.mask
def gdIpv4Gw = parsedResponse.Items.parameters.gd.ipv4.gw
def gdIpv4Dns = parsedResponse.Items.parameters.gd.ipv4.dns[0]
def gdIpv6Status = parsedResponse.Items.parameters.gd.ipv6.status
def crmCode = parsedResponse.Items.crmCode as String


dsaInstance.query("select ss.service_id, hi.status, hi.trafficProfile, hi.clientClass, hi.maxCpe, hi.reservedIpList, hi.wifi_status, hi.gd_status, hi.gd_ipv4_nat, hi.gd_ipv4_ipMode, hi.gd_ipv4_address, hi.gd_ipv4_mask, hi.gd_ipv4_gw, hi.gd_ipv4_dns, hi.gd_ipv6_status, hi.fdm_srv_hsi, replace(replace(replace(hi.crmCode,'\"\',''),'{','['),'}',']') as newCrmCode from  hsi_instance hi, subscription_service ss , subscriptions s, hsi_template ht where  hi.id = ss.service_id and ss.subscription_id = s.id and hi.template_id = ht.id and ht.name = 'hsi';")
{ ResultSet rs ->
	// Pruebo el primero	
	rs.next()
	
	// Valido el campo subscriptionId
	log.info("service: " + rs.getInt('service_id'))
	assert rs.getInt('service_id') == servicesId

	// Valido el campo status
	log.info("status: " + rs.getString('status'))
	assert rs.getString('status') == status

	// Valido el campo hi.fdm_srv_hsi == name
	log.info("fdm_srv_hsi: " + rs.getString('hi.fdm_srv_hsi'))
	assert rs.getString('hi.fdm_srv_hsi') == name

	// Valido el campo trafficProfile
	log.info("clientClass: " + rs.getString('clientClass'))
	assert rs.getString('trafficProfile') == trafficProfile

	// Valido el campo trafficProfile
	log.info("clientClass: " + rs.getString('clientClass'))
	assert rs.getString('clientClass') == clientClass

	// Valido el campo trafficProfile
	log.info("maxCpe: " + rs.getInt('maxCpe'))
	assert rs.getInt('maxCpe') == maxCpe

	// Valido el campo reservedIpList
	log.info("reservedIpList: " + rs.getString('reservedIpList'))
	assert rs.getString('reservedIpList') == reservedIpList	

	// Valido el campo wifi_status
	log.info("wifi_status: " + rs.getString('wifi_status'))
	assert rs.getString('wifi_status') == wifiStatus	

	// Valido el campo gd_status
	log.info("gd_status: " + rs.getString('gd_status'))
	assert rs.getString('gd_status') == gdStatus	
	
	// Valido el campo gd_ipv4_nat
	log.info("gd_ipv4_nat: " + rs.getString('gd_ipv4_nat'))
	assert rs.getString('gd_ipv4_nat') == gdIpv4Nat

	// Valido el campo gd_ipv4_ipMode
	log.info("gd_ipv4_ipMode: " + rs.getString('gd_ipv4_ipMode'))
	assert rs.getString('gd_ipv4_ipMode') == gdIpv4IpMode	

	// Valido el campo gd_ipv4_address
	log.info("gd_ipv4_address: " + rs.getString('gd_ipv4_address'))
	assert rs.getString('gd_ipv4_address') == gdIpv4Address

	// Valido el campo gd_ipv4_mask
	log.info("gd_ipv4_mask: " + rs.getString('gd_ipv4_mask'))
	assert rs.getString('gd_ipv4_mask') == gdIpv4Mask

	// Valido el campo gd_ipv4_gw
	log.info("gd_ipv4_gw: " + rs.getString('gd_ipv4_gw'))
	assert rs.getString('gd_ipv4_gw') == gdIpv4Gw

	// Valido el campo gd_ipv4_dns
	log.info("gd_ipv4_dns: " + rs.getString('gd_ipv4_dns'))
	assert rs.getString('gd_ipv4_dns') == gdIpv4Dns

	// Valido el campo gd_ipv6_status
	log.info("gd_ipv6_status: " + rs.getString('gd_ipv6_status'))
	assert rs.getString('gd_ipv6_status') == gdIpv6Status

	// Valido el campo REPLACE(hi.crmCode,'\"\','')
	log.info("crmCode: " + rs.getString('newCrmCode'))
	assert rs.getString('newCrmCode') == crmCode

	//Valido que no haya mas datos.
	assert !rs.next() 	     
}</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="crmSubCode" value="100002" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Create - CreateServiceLIV" id="5fca02e7-668d-4d30-b58b-4fea0b9a0a11"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription/{subId}/service" methodName="Create" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Create - CreateServiceLIV" id="1b406235-c481-45a1-aeed-d4cc36c905a5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
  "name":"${newServicesLiv}",
  "crmCode": {"${newCrmCodeLiv}":"${valueCrmCode}"},
  "parameters": 
  	{
  		"maxCpe":"${newMaxCpe}"
  	}
}
</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/crmSubCode/issue</con:originalUri><con:assertion type="GroovyScriptAssertion" id="4e73ab39-40b5-46e2-9acc-e519cda888ee" name="ScriptAssertionReturnBodyValidation"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

//Getting response from methods
def ResponseMessage = context.response
def parsedJson = new groovy.json.JsonSlurper().parseText(ResponseMessage)

assert parsedJson.Result == "Success"
assert parsedJson.Display_items == 1
assert parsedJson.Matched_items == 1
assert parsedJson.Error_code == null
assert parsedJson.Error_str == null
assert parsedJson.Error_str_detail == null
assert parsedJson.Donetime != null
assert parsedJson.Items != null
assert parsedJson.Items.name == "liv"
assert parsedJson.Items.parameters != null
assert parsedJson.Items.parameters.clientClass != null
assert parsedJson.Items.parameters.bindLanPorts != null
assert parsedJson.Items.parameters.maxCpe == 90
assert parsedJson.Items.parameters.reservedIpList != null
assert parsedJson.Items.parameters.reservedIpList == []</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="eef4ff4f-8ace-4c24-82bf-ef93bab8d534" name="ScriptAssertionDataBase"><con:configuration><scriptText>import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import groovy.lang.Binding
import groovy.util.GroovyScriptEngine
import groovy.sql.Sql
import java.sql.ResultSet

//Obtengo el response
def response = messageExchange.response.responseContent

//Parseo el response.
def parsedResponse =  new JsonSlurper().parseText(response)

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

// location of script file is relative to SOAPUI project file.
String scriptPath = groovyUtils.projectPath + "/scripts/"

// Create Groovy Script Engine to run the script.
GroovyScriptEngine gse = new GroovyScriptEngine(scriptPath) 

// Load the Groovy Script file 
externalScript = gse.loadScriptByName("UtilsTest.Groovy")  

// Create a runtime instance of script
instance = externalScript.newInstance()

// Sanity check 
assert instance!= null

log.info("Corriendo script");

def dbDsa  = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbDSA')
def dbHost = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbHost')
def user = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbUser')
def password = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbPass')
def dbPort = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue("dbPort")

// Muestro el path de conexion de la DB
log.info(user + ":" + password + "@" + dbHost + ':' + dbPort + '/' + dbDsa)
log.info(parsedResponse.Items.name)


// run the foo method in the external script
def dsaInstance = instance.getInstanceDB(dbDsa, dbHost, dbPort, user, password, log)

// Get of the response the name and crmSubCode fields
def servicesId = parsedResponse.Items.srvId as Integer
def status = parsedResponse.Items.status
def name = parsedResponse.Items.name
def trafficProfile = parsedResponse.Items.parameters.trafficProfile
def clientClass = parsedResponse.Items.parameters.clientClass
def maxCpe = parsedResponse.Items.parameters.maxCpe as Integer
def reservedIpList = parsedResponse.Items.parameters.reservedIpList[0]
def wifiStatus = parsedResponse.Items.parameters.wifi.status
def gdStatus = parsedResponse.Items.parameters.gd.status
def gdIpv4Nat = parsedResponse.Items.parameters.gd.ipv4.nat
def gdIpv4IpMode = parsedResponse.Items.parameters.gd.ipv4.ipMode
def gdIpv4Address = parsedResponse.Items.parameters.gd.ipv4.address
def gdIpv4Mask = parsedResponse.Items.parameters.gd.ipv4.mask
def gdIpv4Gw = parsedResponse.Items.parameters.gd.ipv4.gw
def gdIpv4Dns = parsedResponse.Items.parameters.gd.ipv4.dns[0]
def gdIpv6Status = parsedResponse.Items.parameters.gd.ipv6.status
def crmCode = parsedResponse.Items.crmCode as String


dsaInstance.query("select ss.service_id, hi.status, hi.trafficProfile, hi.clientClass, hi.maxCpe, hi.reservedIpList, hi.wifi_status, hi.gd_status, hi.gd_ipv4_nat, hi.gd_ipv4_ipMode, hi.gd_ipv4_address, hi.gd_ipv4_mask, hi.gd_ipv4_gw, hi.gd_ipv4_dns, hi.gd_ipv6_status, hi.fdm_srv_hsi, replace(replace(replace(hi.crmCode,'\"\',''),'{','['),'}',']') as newCrmCode from  hsi_instance hi, subscription_service ss , subscriptions s, hsi_template ht where  hi.id = ss.service_id and ss.subscription_id = s.id and hi.template_id = ht.id and ht.name = 'liv';"){ ResultSet rs ->
	// Pruebo el primero	
	rs.next()
	
	// Valido el campo servicesID
	log.info("services: " + rs.getInt('service_id'))
	assert rs.getInt('service_id') == servicesId

	// Valido el campo status
	log.info("status: " + rs.getString('status'))
	assert rs.getString('status') == status

	// Valido el campo fdm_srv_hsi == name
	log.info("fdm_srv_hsi: " + rs.getString('fdm_srv_hsi'))
	assert rs.getString('fdm_srv_hsi') == name

	// Valido el campo trafficProfile
	log.info("clientClass: " + rs.getString('clientClass'))
	assert rs.getString('trafficProfile') == trafficProfile

	// Valido el campo trafficProfile
	log.info("clientClass: " + rs.getString('clientClass'))
	assert rs.getString('clientClass') == clientClass

	// Valido el campo trafficProfile
	log.info("maxCpe: " + rs.getInt('maxCpe'))
	assert rs.getInt('maxCpe') == maxCpe

	// Valido el campo reservedIpList
	log.info("reservedIpList: " + rs.getString('reservedIpList'))
	assert rs.getString('reservedIpList') == reservedIpList	

	// Valido el campo wifi_status
	log.info("wifi_status: " + rs.getString('wifi_status'))
	assert rs.getString('wifi_status') == wifiStatus	

	// Valido el campo gd_status
	log.info("gd_status: " + rs.getString('gd_status'))
	assert rs.getString('gd_status') == gdStatus	
	
	// Valido el campo gd_ipv4_nat
	log.info("gd_ipv4_nat: " + rs.getString('gd_ipv4_nat'))
	assert rs.getString('gd_ipv4_nat') == gdIpv4Nat

	// Valido el campo gd_ipv4_ipMode
	log.info("gd_ipv4_ipMode: " + rs.getString('gd_ipv4_ipMode'))
	assert rs.getString('gd_ipv4_ipMode') == gdIpv4IpMode	

	// Valido el campo gd_ipv4_address
	log.info("gd_ipv4_address: " + rs.getString('gd_ipv4_address'))
	assert rs.getString('gd_ipv4_address') == gdIpv4Address

	// Valido el campo gd_ipv4_mask
	log.info("gd_ipv4_mask: " + rs.getString('gd_ipv4_mask'))
	assert rs.getString('gd_ipv4_mask') == gdIpv4Mask

	// Valido el campo gd_ipv4_gw
	log.info("gd_ipv4_gw: " + rs.getString('gd_ipv4_gw'))
	assert rs.getString('gd_ipv4_gw') == gdIpv4Gw

	// Valido el campo gd_ipv4_dns
	log.info("gd_ipv4_dns: " + rs.getString('gd_ipv4_dns'))
	assert rs.getString('gd_ipv4_dns') == gdIpv4Dns

	// Valido el campo gd_ipv6_status
	log.info("gd_ipv6_status: " + rs.getString('gd_ipv6_status'))
	assert rs.getString('gd_ipv6_status') == gdIpv6Status

	// Valido el campo REPLACE(hi.crmCode,'\"\','')
	log.info("crmCode: " + rs.getString('newCrmCode'))
	assert rs.getString('newCrmCode') == crmCode

	//Valido que no haya mas datos.
	assert !rs.next() 	     
}</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="crmSubCode" value="100002" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Create - CreateServiceOptimo" id="dae82be0-8fb3-4eff-9bb8-4f378c64a1c5"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription/{subId}/service" methodName="Create" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Create - CreateServiceOptimo" id="1b406235-c481-45a1-aeed-d4cc36c905a5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
  "name":"${newServicesOptimo}",
  "crmCode": {"${newCrmCodeOptimo}":"${valueCrmCode}"},
  "parameters": 
  	{
  		"maxCpe":"${newMaxCpe}" 
  	}
}
</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/crmSubCode/issue</con:originalUri><con:assertion type="GroovyScriptAssertion" id="4e73ab39-40b5-46e2-9acc-e519cda888ee" name="ScriptAssertionReturnBodyValidation"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

//Getting response from methods
def ResponseMessage = context.response
def parsedJson = new groovy.json.JsonSlurper().parseText(ResponseMessage)

assert parsedJson.Result == "Success"
assert parsedJson.Display_items == 1
assert parsedJson.Matched_items == 1
assert parsedJson.Error_code == null
assert parsedJson.Error_str_detail == null
assert parsedJson.Donetime != null
assert parsedJson.Items != null
assert parsedJson.Items.name == "optimo"
assert parsedJson.Items.parameters != null
assert parsedJson.Items.parameters.clientClass != null
assert parsedJson.Items.parameters.bindLanPorts != null
assert parsedJson.Items.parameters.maxCpe == 90
assert parsedJson.Items.parameters.reservedIpList != null
assert parsedJson.Items.parameters.reservedIpList == []
assert parsedJson.Error_str == null</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="ff843445-ba77-47f8-8a62-82f65f99230e" name="ScriptAssertionDataBase"><con:configuration><scriptText>import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import groovy.lang.Binding
import groovy.util.GroovyScriptEngine
import groovy.sql.Sql
import java.sql.ResultSet

//Obtengo el response
def response = messageExchange.response.responseContent

//Parseo el response.
def parsedResponse =  new JsonSlurper().parseText(response)

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

// location of script file is relative to SOAPUI project file.
String scriptPath = groovyUtils.projectPath + "/scripts/"

// Create Groovy Script Engine to run the script.
GroovyScriptEngine gse = new GroovyScriptEngine(scriptPath) 

// Load the Groovy Script file 
externalScript = gse.loadScriptByName("UtilsTest.Groovy")  

// Create a runtime instance of script
instance = externalScript.newInstance()

// Sanity check 
assert instance!= null

log.info("Corriendo script");

def dbDsa  = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbDSA')
def dbHost = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbHost')
def user = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbUser')
def password = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbPass')
def dbPort = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue("dbPort")

// Muestro el path de conexion de la DB
log.info(user + ":" + password + "@" + dbHost + ':' + dbPort + '/' + dbDsa)
log.info(parsedResponse.Items.name)


// run the foo method in the external script
def dsaInstance = instance.getInstanceDB(dbDsa, dbHost, dbPort, user, password, log)

// Get of the response the name and crmSubCode fields
def servicesId = parsedResponse.Items.srvId as Integer
def status = parsedResponse.Items.status
def name = parsedResponse.Items.name
def trafficProfile = parsedResponse.Items.parameters.trafficProfile
def clientClass = parsedResponse.Items.parameters.clientClass
def maxCpe = parsedResponse.Items.parameters.maxCpe as Integer
def reservedIpList = parsedResponse.Items.parameters.reservedIpList[0]
def wifiStatus = parsedResponse.Items.parameters.wifi.status
def gdStatus = parsedResponse.Items.parameters.gd.status
def gdIpv4Nat = parsedResponse.Items.parameters.gd.ipv4.nat
def gdIpv4IpMode = parsedResponse.Items.parameters.gd.ipv4.ipMode
def gdIpv4Address = parsedResponse.Items.parameters.gd.ipv4.address
def gdIpv4Mask = parsedResponse.Items.parameters.gd.ipv4.mask
def gdIpv4Gw = parsedResponse.Items.parameters.gd.ipv4.gw
def gdIpv4Dns = parsedResponse.Items.parameters.gd.ipv4.dns[0]
def gdIpv6Status = parsedResponse.Items.parameters.gd.ipv6.status
def crmCode = parsedResponse.Items.crmCode as String


dsaInstance.query("select ss.service_id, hi.status, hi.trafficProfile, hi.clientClass, hi.maxCpe, hi.reservedIpList, hi.wifi_status, hi.gd_status, hi.gd_ipv4_nat, hi.gd_ipv4_ipMode, hi.gd_ipv4_address, hi.gd_ipv4_mask, hi.gd_ipv4_gw, hi.gd_ipv4_dns, hi.gd_ipv6_status, hi.fdm_srv_hsi, replace(replace(replace(hi.crmCode,'\"\',''),'{','['),'}',']') as newCrmCode from  hsi_instance hi, subscription_service ss , subscriptions s, hsi_template ht where  hi.id = ss.service_id and ss.subscription_id = s.id and hi.template_id = ht.id and ht.name = 'optimo';"){ ResultSet rs ->
	// Pruebo el primero	
	rs.next()
	
	// Valido el campo servicesID
	log.info("services: " + rs.getInt('service_id'))
	assert rs.getInt('service_id') == servicesId

	// Valido el campo status
	log.info("status: " + rs.getString('status'))
	assert rs.getString('status') == status

	// Valido el campo fdm_srv_hsi == name
	log.info("fdm_srv_hsi: " + rs.getString('fdm_srv_hsi'))
	assert rs.getString('fdm_srv_hsi') == name

	// Valido el campo trafficProfile
	log.info("clientClass: " + rs.getString('clientClass'))
	assert rs.getString('trafficProfile') == trafficProfile

	// Valido el campo trafficProfile
	log.info("clientClass: " + rs.getString('clientClass'))
	assert rs.getString('clientClass') == clientClass

	// Valido el campo trafficProfile
	log.info("maxCpe: " + rs.getInt('maxCpe'))
	assert rs.getInt('maxCpe') == maxCpe

	// Valido el campo reservedIpList
	log.info("reservedIpList: " + rs.getString('reservedIpList'))
	assert rs.getString('reservedIpList') == reservedIpList	

	// Valido el campo wifi_status
	log.info("wifi_status: " + rs.getString('wifi_status'))
	assert rs.getString('wifi_status') == wifiStatus	

	// Valido el campo gd_status
	log.info("gd_status: " + rs.getString('gd_status'))
	assert rs.getString('gd_status') == gdStatus	
	
	// Valido el campo gd_ipv4_nat
	log.info("gd_ipv4_nat: " + rs.getString('gd_ipv4_nat'))
	assert rs.getString('gd_ipv4_nat') == gdIpv4Nat

	// Valido el campo gd_ipv4_ipMode
	log.info("gd_ipv4_ipMode: " + rs.getString('gd_ipv4_ipMode'))
	assert rs.getString('gd_ipv4_ipMode') == gdIpv4IpMode	

	// Valido el campo gd_ipv4_address
	log.info("gd_ipv4_address: " + rs.getString('gd_ipv4_address'))
	assert rs.getString('gd_ipv4_address') == gdIpv4Address

	// Valido el campo gd_ipv4_mask
	log.info("gd_ipv4_mask: " + rs.getString('gd_ipv4_mask'))
	assert rs.getString('gd_ipv4_mask') == gdIpv4Mask

	// Valido el campo gd_ipv4_gw
	log.info("gd_ipv4_gw: " + rs.getString('gd_ipv4_gw'))
	assert rs.getString('gd_ipv4_gw') == gdIpv4Gw

	// Valido el campo gd_ipv4_dns
	log.info("gd_ipv4_dns: " + rs.getString('gd_ipv4_dns'))
	assert rs.getString('gd_ipv4_dns') == gdIpv4Dns

	// Valido el campo gd_ipv6_status
	log.info("gd_ipv6_status: " + rs.getString('gd_ipv6_status'))
	assert rs.getString('gd_ipv6_status') == gdIpv6Status

	// Valido el campo REPLACE(hi.crmCode,'\"\','')
	log.info("crmCode: " + rs.getString('newCrmCode'))
	assert rs.getString('newCrmCode') == crmCode

	//Valido que no haya mas datos.
	assert !rs.next() 	     
}</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="crmSubCode" value="100002" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Create - CreateServiceUnico" id="866a0987-b0a9-4cf0-a6c5-07127ea05209"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription/{subId}/service" methodName="Create" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Create - CreateServiceUnico" id="1b406235-c481-45a1-aeed-d4cc36c905a5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
  "name":"${newNameUnico}",
  "crmCode": {"${newCrmCodeUnico}":"${valueCrmCode}"},
  "parameters": {"maxCpe":"${newMaxCpe}"}
}
</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/crmSubCode/issue</con:originalUri><con:assertion type="GroovyScriptAssertion" id="8f4e8043-db89-4879-8ae1-de8497a3020e" name="ScriptAssertionReturnBodyValidation"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

//Getting response from methods
def ResponseMessage = context.response
def parsedJson = new groovy.json.JsonSlurper().parseText(ResponseMessage)

assert parsedJson.Result == "Success"
assert parsedJson.Display_items == 1
assert parsedJson.Matched_items == 1
assert parsedJson.Error_code == null
assert parsedJson.Error_str == null
assert parsedJson.Error_str_detail == null
assert parsedJson.Donetime != null
assert parsedJson.Items != null
assert parsedJson.Items.name == "unico"
assert parsedJson.Items.parameters != null
assert parsedJson.Items.parameters.clientClass != null
assert parsedJson.Items.parameters.bindLanPorts != null
assert parsedJson.Items.parameters.maxCpe == 90
assert parsedJson.Items.parameters.reservedIpList != null
assert parsedJson.Items.parameters.reservedIpList == []</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="7f34e83b-5bcc-4fe7-845e-b2579f3ff422" name="ScriptAssertionDataBase"><con:configuration><scriptText>import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import groovy.lang.Binding
import groovy.util.GroovyScriptEngine
import groovy.sql.Sql
import java.sql.ResultSet

//Obtengo el response
def response = messageExchange.response.responseContent

//Parseo el response.
def parsedResponse =  new JsonSlurper().parseText(response)

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

// location of script file is relative to SOAPUI project file.
String scriptPath = groovyUtils.projectPath + "/scripts/"

// Create Groovy Script Engine to run the script.
GroovyScriptEngine gse = new GroovyScriptEngine(scriptPath) 

// Load the Groovy Script file 
externalScript = gse.loadScriptByName("UtilsTest.Groovy")  

// Create a runtime instance of script
instance = externalScript.newInstance()

// Sanity check 
assert instance!= null

log.info("Corriendo script");

def dbDsa  = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbDSA')
def dbHost = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbHost')
def user = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbUser')
def password = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbPass')
def dbPort = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue("dbPort")

// Muestro el path de conexion de la DB
log.info(user + ":" + password + "@" + dbHost + ':' + dbPort + '/' + dbDsa)
log.info(parsedResponse.Items.name)


// run the foo method in the external script
def dsaInstance = instance.getInstanceDB(dbDsa, dbHost, dbPort, user, password, log)

// Get of the response the name and crmSubCode fields
def servicesId = parsedResponse.Items.srvId as Integer
def status = parsedResponse.Items.status
def name = parsedResponse.Items.name
def trafficProfile = parsedResponse.Items.parameters.trafficProfile
def clientClass = parsedResponse.Items.parameters.clientClass
def maxCpe = parsedResponse.Items.parameters.maxCpe as Integer
def reservedIpList = parsedResponse.Items.parameters.reservedIpList[0]
def wifiStatus = parsedResponse.Items.parameters.wifi.status
def gdStatus = parsedResponse.Items.parameters.gd.status
def gdIpv4Nat = parsedResponse.Items.parameters.gd.ipv4.nat
def gdIpv4IpMode = parsedResponse.Items.parameters.gd.ipv4.ipMode
def gdIpv4Address = parsedResponse.Items.parameters.gd.ipv4.address
def gdIpv4Mask = parsedResponse.Items.parameters.gd.ipv4.mask
def gdIpv4Gw = parsedResponse.Items.parameters.gd.ipv4.gw
def gdIpv4Dns = parsedResponse.Items.parameters.gd.ipv4.dns[0]
def gdIpv6Status = parsedResponse.Items.parameters.gd.ipv6.status
def crmCode = parsedResponse.Items.crmCode as String


dsaInstance.query("select ss.service_id, hi.status, hi.trafficProfile, hi.clientClass, hi.maxCpe, hi.reservedIpList, hi.wifi_status, hi.gd_status, hi.gd_ipv4_nat, hi.gd_ipv4_ipMode, hi.gd_ipv4_address, hi.gd_ipv4_mask, hi.gd_ipv4_gw, hi.gd_ipv4_dns, hi.gd_ipv6_status, hi.fdm_srv_hsi, replace(replace(replace(hi.crmCode,'\"\',''),'{','['),'}',']') as newCrmCode from  hsi_instance hi, subscription_service ss , subscriptions s, hsi_template ht where  hi.id = ss.service_id and ss.subscription_id = s.id and hi.template_id = ht.id and ht.name = 'unico';"){ ResultSet rs ->
	// Pruebo el primero	
	rs.next()
	
	// Valido el campo servicesID
	log.info("services: " + rs.getInt('service_id'))
	assert rs.getInt('service_id') == servicesId

	// Valido el campo status
	log.info("status: " + rs.getString('status'))
	assert rs.getString('status') == status

	// Valido el campo fdm_srv_hsi == name
	log.info("fdm_srv_hsi: " + rs.getString('fdm_srv_hsi'))
	assert rs.getString('fdm_srv_hsi') == name

	// Valido el campo trafficProfile
	log.info("clientClass: " + rs.getString('clientClass'))
	assert rs.getString('trafficProfile') == trafficProfile

	// Valido el campo trafficProfile
	log.info("clientClass: " + rs.getString('clientClass'))
	assert rs.getString('clientClass') == clientClass

	// Valido el campo trafficProfile
	log.info("maxCpe: " + rs.getInt('maxCpe'))
	assert rs.getInt('maxCpe') == maxCpe

	// Valido el campo reservedIpList
	log.info("reservedIpList: " + rs.getString('reservedIpList'))
	assert rs.getString('reservedIpList') == reservedIpList	

	// Valido el campo wifi_status
	log.info("wifi_status: " + rs.getString('wifi_status'))
	assert rs.getString('wifi_status') == wifiStatus	

	// Valido el campo gd_status
	log.info("gd_status: " + rs.getString('gd_status'))
	assert rs.getString('gd_status') == gdStatus	
	
	// Valido el campo gd_ipv4_nat
	log.info("gd_ipv4_nat: " + rs.getString('gd_ipv4_nat'))
	assert rs.getString('gd_ipv4_nat') == gdIpv4Nat

	// Valido el campo gd_ipv4_ipMode
	log.info("gd_ipv4_ipMode: " + rs.getString('gd_ipv4_ipMode'))
	assert rs.getString('gd_ipv4_ipMode') == gdIpv4IpMode	

	// Valido el campo gd_ipv4_address
	log.info("gd_ipv4_address: " + rs.getString('gd_ipv4_address'))
	assert rs.getString('gd_ipv4_address') == gdIpv4Address

	// Valido el campo gd_ipv4_mask
	log.info("gd_ipv4_mask: " + rs.getString('gd_ipv4_mask'))
	assert rs.getString('gd_ipv4_mask') == gdIpv4Mask

	// Valido el campo gd_ipv4_gw
	log.info("gd_ipv4_gw: " + rs.getString('gd_ipv4_gw'))
	assert rs.getString('gd_ipv4_gw') == gdIpv4Gw

	// Valido el campo gd_ipv4_dns
	log.info("gd_ipv4_dns: " + rs.getString('gd_ipv4_dns'))
	assert rs.getString('gd_ipv4_dns') == gdIpv4Dns

	// Valido el campo gd_ipv6_status
	log.info("gd_ipv6_status: " + rs.getString('gd_ipv6_status'))
	assert rs.getString('gd_ipv6_status') == gdIpv6Status

	// Valido el campo REPLACE(hi.crmCode,'\"\','')
	log.info("crmCode: " + rs.getString('newCrmCode'))
	assert rs.getString('newCrmCode') == crmCode

	//Valido que no haya mas datos.
	assert !rs.next() 	     
}</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="crmSubCode" value="100002" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Create - CreateServiceGIGAPLUS" id="b2560d45-d6de-4f3d-a593-1a3dd7369fba"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription/{subId}/service" methodName="Create" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Create - CreateServiceGIGAPLUS" id="1b406235-c481-45a1-aeed-d4cc36c905a5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
  "name":"${newServicesGigaplus}",
  "crmCode": {"${newCrmCodeGigaplus}":"${valueCrmCode}"},
  "parameters": {"maxCpe":"${newMaxCpe}"}
}
</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/crmSubCode/issue</con:originalUri><con:assertion type="GroovyScriptAssertion" id="ad91841a-fdbb-48ba-b28f-541b8d826da1" name="ScriptAssertionReturnBodyValidation"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

//Getting response from methods
def ResponseMessage = context.response
def parsedJson = new groovy.json.JsonSlurper().parseText(ResponseMessage)

assert parsedJson.Result == "Success"
assert parsedJson.Display_items == 1
assert parsedJson.Matched_items == 1
assert parsedJson.Error_code == null
assert parsedJson.Error_str == null
assert parsedJson.Error_str_detail == null
assert parsedJson.Donetime != null
assert parsedJson.Items != null
assert parsedJson.Items.name == "gigaplus"
assert parsedJson.Items.parameters != null
assert parsedJson.Items.parameters.clientClass != null
assert parsedJson.Items.parameters.bindLanPorts != null
assert parsedJson.Items.parameters.maxCpe == 90
assert parsedJson.Items.parameters.reservedIpList != null
assert parsedJson.Items.parameters.reservedIpList == []</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="a4995d00-3533-4087-a648-9e7e8110ec10" name="ScriptAssertionDataBase"><con:configuration><scriptText>import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import groovy.lang.Binding
import groovy.util.GroovyScriptEngine
import groovy.sql.Sql
import java.sql.ResultSet

//Obtengo el response
def response = messageExchange.response.responseContent

//Parseo el response.
def parsedResponse =  new JsonSlurper().parseText(response)

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

// location of script file is relative to SOAPUI project file.
String scriptPath = groovyUtils.projectPath + "/scripts/"

// Create Groovy Script Engine to run the script.
GroovyScriptEngine gse = new GroovyScriptEngine(scriptPath) 

// Load the Groovy Script file 
externalScript = gse.loadScriptByName("UtilsTest.Groovy")  

// Create a runtime instance of script
instance = externalScript.newInstance()

// Sanity check 
assert instance!= null

log.info("Corriendo script");

def dbDsa  = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbDSA')
def dbHost = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbHost')
def user = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbUser')
def password = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbPass')
def dbPort = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue("dbPort")

// Muestro el path de conexion de la DB
log.info(user + ":" + password + "@" + dbHost + ':' + dbPort + '/' + dbDsa)
log.info(parsedResponse.Items.name)


// run the foo method in the external script
def dsaInstance = instance.getInstanceDB(dbDsa, dbHost, dbPort, user, password, log)

// Get of the response the name and crmSubCode fields
def servicesId = parsedResponse.Items.srvId as Integer
def status = parsedResponse.Items.status
def name = parsedResponse.Items.name
def trafficProfile = parsedResponse.Items.parameters.trafficProfile
def clientClass = parsedResponse.Items.parameters.clientClass
def maxCpe = parsedResponse.Items.parameters.maxCpe as Integer
def reservedIpList = parsedResponse.Items.parameters.reservedIpList[0]
def wifiStatus = parsedResponse.Items.parameters.wifi.status
def gdStatus = parsedResponse.Items.parameters.gd.status
def gdIpv4Nat = parsedResponse.Items.parameters.gd.ipv4.nat
def gdIpv4IpMode = parsedResponse.Items.parameters.gd.ipv4.ipMode
def gdIpv4Address = parsedResponse.Items.parameters.gd.ipv4.address
def gdIpv4Mask = parsedResponse.Items.parameters.gd.ipv4.mask
def gdIpv4Gw = parsedResponse.Items.parameters.gd.ipv4.gw
def gdIpv4Dns = parsedResponse.Items.parameters.gd.ipv4.dns[0]
def gdIpv6Status = parsedResponse.Items.parameters.gd.ipv6.status
def crmCode = parsedResponse.Items.crmCode as String


dsaInstance.query("select ss.service_id, hi.status, hi.trafficProfile, hi.clientClass, hi.maxCpe, hi.reservedIpList, hi.wifi_status, hi.gd_status, hi.gd_ipv4_nat, hi.gd_ipv4_ipMode, hi.gd_ipv4_address, hi.gd_ipv4_mask, hi.gd_ipv4_gw, hi.gd_ipv4_dns, hi.gd_ipv6_status, hi.fdm_srv_hsi, replace(replace(replace(hi.crmCode,'\"\',''),'{','['),'}',']') as newCrmCode from  hsi_instance hi, subscription_service ss , subscriptions s, hsi_template ht where  hi.id = ss.service_id and ss.subscription_id = s.id and hi.template_id = ht.id and ht.name = 'gigaplus';"){ ResultSet rs ->
	// Pruebo el primero	
	rs.next()
	
	// Valido el campo servicesID
	log.info("services: " + rs.getInt('service_id'))
	assert rs.getInt('service_id') == servicesId

	// Valido el campo status
	log.info("status: " + rs.getString('status'))
	assert rs.getString('status') == status

	// Valido el campo fdm_srv_hsi == name
	log.info("fdm_srv_hsi: " + rs.getString('fdm_srv_hsi'))
	assert rs.getString('fdm_srv_hsi') == name

	// Valido el campo trafficProfile
	log.info("clientClass: " + rs.getString('clientClass'))
	assert rs.getString('trafficProfile') == trafficProfile

	// Valido el campo trafficProfile
	log.info("clientClass: " + rs.getString('clientClass'))
	assert rs.getString('clientClass') == clientClass

	// Valido el campo trafficProfile
	log.info("maxCpe: " + rs.getInt('maxCpe'))
	assert rs.getInt('maxCpe') == maxCpe

	// Valido el campo reservedIpList
	log.info("reservedIpList: " + rs.getString('reservedIpList'))
	assert rs.getString('reservedIpList') == reservedIpList	

	// Valido el campo wifi_status
	log.info("wifi_status: " + rs.getString('wifi_status'))
	assert rs.getString('wifi_status') == wifiStatus	

	// Valido el campo gd_status
	log.info("gd_status: " + rs.getString('gd_status'))
	assert rs.getString('gd_status') == gdStatus	
	
	// Valido el campo gd_ipv4_nat
	log.info("gd_ipv4_nat: " + rs.getString('gd_ipv4_nat'))
	assert rs.getString('gd_ipv4_nat') == gdIpv4Nat

	// Valido el campo gd_ipv4_ipMode
	log.info("gd_ipv4_ipMode: " + rs.getString('gd_ipv4_ipMode'))
	assert rs.getString('gd_ipv4_ipMode') == gdIpv4IpMode	

	// Valido el campo gd_ipv4_address
	log.info("gd_ipv4_address: " + rs.getString('gd_ipv4_address'))
	assert rs.getString('gd_ipv4_address') == gdIpv4Address

	// Valido el campo gd_ipv4_mask
	log.info("gd_ipv4_mask: " + rs.getString('gd_ipv4_mask'))
	assert rs.getString('gd_ipv4_mask') == gdIpv4Mask

	// Valido el campo gd_ipv4_gw
	log.info("gd_ipv4_gw: " + rs.getString('gd_ipv4_gw'))
	assert rs.getString('gd_ipv4_gw') == gdIpv4Gw

	// Valido el campo gd_ipv4_dns
	log.info("gd_ipv4_dns: " + rs.getString('gd_ipv4_dns'))
	assert rs.getString('gd_ipv4_dns') == gdIpv4Dns

	// Valido el campo gd_ipv6_status
	log.info("gd_ipv6_status: " + rs.getString('gd_ipv6_status'))
	assert rs.getString('gd_ipv6_status') == gdIpv6Status

	// Valido el campo REPLACE(hi.crmCode,'\"\','')
	log.info("crmCode: " + rs.getString('newCrmCode'))
	assert rs.getString('newCrmCode') == crmCode

	//Valido que no haya mas datos.
	assert !rs.next() 	     
}</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="crmSubCode" value="100002" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Create - CrateServiceVOIPPACK" id="df649c70-6b32-414a-be4a-3c455f40ee60"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription/{subId}/service" methodName="Create" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Create - CrateServiceVOIPPACK" id="1b406235-c481-45a1-aeed-d4cc36c905a5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
  "name":"${newServicesVoip}",
  "crmCode": {"${newCrmCodeVoip}":"${valueCrmCode}"},
  "parameters": {"vlan":"${newVlanValue}" }
}
</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/crmSubCode/issue</con:originalUri><con:assertion type="GroovyScriptAssertion" id="25139532-0ee0-4796-af71-27d04a656b84" name="ScriptAssertionReturnBodyValidation"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

//Getting response from methods
def ResponseMessage = context.response
def parsedJson = new groovy.json.JsonSlurper().parseText(ResponseMessage)

assert parsedJson.Result == "Success"
assert parsedJson.Display_items == 1
assert parsedJson.Matched_items == 1
assert parsedJson.Error_code == null
assert parsedJson.Items != null
assert parsedJson.Error_str == null
assert parsedJson.Error_str_detail == null
assert parsedJson.Donetime != null
assert parsedJson.Items.name == "voippack"
assert parsedJson.Items.parameters != null
assert parsedJson.Items.parameters.clientClass != null
assert parsedJson.Items.parameters.bindLanPorts != null
assert parsedJson.Items.parameters.maxCpe == 1
assert parsedJson.Items.parameters.bindLanPortsType == "dynamic"
assert parsedJson.Items.parameters.reservedIpList != null
assert parsedJson.Items.parameters.reservedIpList == []</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="c32e5c2e-5f1d-441c-b12d-f3669679c95f" name="ScriptAssertionDataBase"><con:configuration><scriptText>import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import groovy.lang.Binding
import groovy.util.GroovyScriptEngine
import groovy.sql.Sql
import java.sql.ResultSet

//Obtengo el response
def response = messageExchange.response.responseContent

//Parseo el response.
def parsedResponse =  new JsonSlurper().parseText(response)

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

// location of script file is relative to SOAPUI project file.
String scriptPath = groovyUtils.projectPath + "/scripts/"

// Create Groovy Script Engine to run the script.
GroovyScriptEngine gse = new GroovyScriptEngine(scriptPath) 

// Load the Groovy Script file 
externalScript = gse.loadScriptByName("UtilsTest.Groovy")  

// Create a runtime instance of script
instance = externalScript.newInstance()

// Sanity check 
assert instance!= null

log.info("Corriendo script");

def dbDsa  = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbDSA')
def dbHost = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbHost')
def user = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbUser')
def password = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbPass')
def dbPort = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue("dbPort")

// Muestro el path de conexion de la DB
log.info(user + ":" + password + "@" + dbHost + ':' + dbPort + '/' + dbDsa)

// run the foo method in the external script
def dsaInstance = instance.getInstanceDB(dbDsa, dbHost, dbPort, user, password, log)

// Get of the response the name and crmSubCode fields
def servicesId = parsedResponse.Items.srvId
def status = parsedResponse.Items.status
def name = parsedResponse.Items.name
def crmCode = parsedResponse.Items.crmCode as String
def trafficProfile = parsedResponse.Items.parameters.trafficProfile
def clientClass = parsedResponse.Items.parameters.clientClass
def maxCpe = parsedResponse.Items.parameters.maxCpe as Integer
def reservedIpList = parsedResponse.Items.parameters.reservedIpList[0]
def wifiStatus = parsedResponse.Items.parameters.wifi.status
def gdStatus = parsedResponse.Items.parameters.gd.status



dsaInstance.query("select ss.service_id , hi.status, hi.fdm_srv_hsi, replace(replace(replace(hi.crmCode,'\"\',''),'{','['),'}',']') as newCrmCode, hi.trafficProfile, hi.clientClass, ht.blps_allocation_type, ht.blps,hi.blps_max_amount, hi.blps, hi.maxCpe, hi.reservedIpList as reservedIpList, hi.wifi_status, hi.gd_status, hi.vlan from  hsi_instance hi, subscription_service ss , subscriptions s, hsi_template ht where hi.id = ss.service_id and ss.subscription_id = s.id and hi.template_id = ht.id and ht.name = 'voippack';"){ ResultSet rs ->
	// Pruebo el primero	
	rs.next()
	
	// Valido el campo servicesID
	log.info("services: " + rs.getInt('service_id'))
	assert rs.getInt('service_id') == servicesId

	// Valido el campo status
	log.info("status: " + rs.getString('status'))
	assert rs.getString('status') == status

	// Valido el campo fdm_srv_hsi == name
	log.info("fdm_srv_hsi: " + rs.getString('fdm_srv_hsi'))
	assert rs.getString('fdm_srv_hsi') == name

	// Valido el campo newCrmCode
	log.info("crmCode: " + rs.getString('newCrmCode'))
	assert rs.getString('newCrmCode') == crmCode

	// Valido el campo trafficProfile
	log.info("trafficProfile: " + rs.getString('trafficProfile'))
	assert rs.getString('trafficProfile') == trafficProfile

	// Valido el campo clientClass
	log.info("clientClass: " + rs.getString('clientClass'))
	assert rs.getString('clientClass') == clientClass

	// Valido el campo maxCpe
	log.info("maxCpe: " + rs.getInt('maxCpe'))
	assert rs.getInt('maxCpe') == maxCpe

	// Valido el campo reservedIpList
	log.info("reservedIpList: " + rs.getString('reservedIpList'))
	assert rs.getString('reservedIpList') == reservedIpList	

	// Valido el campo wifi_status
	log.info("wifi_status: " + rs.getString('wifi_status'))
	assert rs.getString('wifi_status') == wifiStatus	

	// Valido el campo gd_status
	log.info("gd_status: " + rs.getString('gd_status'))
	assert rs.getString('gd_status') == gdStatus	

	//Valido que no haya mas datos.
	assert !rs.next() 	     
}</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="crmSubCode" value="100002" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Create - CreateServiceMaximo" id="ad88cead-c322-46e9-b1ee-095255cc892b"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription/{subId}/service" methodName="Create" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Create - CreateServiceMaximo" id="1b406235-c481-45a1-aeed-d4cc36c905a5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
  "name":"${newServicesMaximo}",
  "crmCode": {"${newCrmCodeMaximo}":"${valueCrmCode}"},
  "parameters": {"vlan":"${newVlanValue}" }
}
</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/crmSubCode/issue</con:originalUri><con:assertion type="GroovyScriptAssertion" id="4060cb32-51f8-4f16-8878-951877a3cf2e" name="ScriptAssertionReturnBodyValidation"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

//Getting response from methods
def ResponseMessage = context.response
def parsedJson = new groovy.json.JsonSlurper().parseText(ResponseMessage)

assert parsedJson.Result == "Success"
assert parsedJson.Display_items == 1
assert parsedJson.Matched_items == 1
assert parsedJson.Error_code == null
assert parsedJson.Error_str == null
assert parsedJson.Error_str_detail == null
assert parsedJson.Donetime != null
assert parsedJson.Items != null
assert parsedJson.Items.name == "maximo"
assert parsedJson.Items.parameters != null
assert parsedJson.Items.parameters.clientClass != null
assert parsedJson.Items.parameters.bindLanPorts != null
assert parsedJson.Items.parameters.maxCpe == 1
assert parsedJson.Items.parameters.bindLanPortsType == "dynamic"
assert parsedJson.Items.parameters.reservedIpList != null
assert parsedJson.Items.parameters.reservedIpList == []</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="24aead4d-b9f4-4f1a-a7bb-bf7c569ef58d" name="ScriptAssertionDataBase"><con:configuration><scriptText>import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import groovy.lang.Binding
import groovy.util.GroovyScriptEngine
import groovy.sql.Sql
import java.sql.ResultSet

//Obtengo el response
def response = messageExchange.response.responseContent

//Parseo el response.
def parsedResponse =  new JsonSlurper().parseText(response)

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

// location of script file is relative to SOAPUI project file.
String scriptPath = groovyUtils.projectPath + "/scripts/"

// Create Groovy Script Engine to run the script.
GroovyScriptEngine gse = new GroovyScriptEngine(scriptPath) 

// Load the Groovy Script file 
externalScript = gse.loadScriptByName("UtilsTest.Groovy")  

// Create a runtime instance of script
instance = externalScript.newInstance()

// Sanity check 
assert instance!= null

log.info("Corriendo script");

def dbDsa  = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbDSA')
def dbHost = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbHost')
def user = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbUser')
def password = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbPass')
def dbPort = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue("dbPort")

// Muestro el path de conexion de la DB
log.info(user + ":" + password + "@" + dbHost + ':' + dbPort + '/' + dbDsa)

// run the foo method in the external script
def dsaInstance = instance.getInstanceDB(dbDsa, dbHost, dbPort, user, password, log)

// Get of the response the name and crmSubCode fields
def servicesId = parsedResponse.Items.srvId
def status = parsedResponse.Items.status
def name = parsedResponse.Items.name
def crmCode = parsedResponse.Items.crmCode as String
def trafficProfile = parsedResponse.Items.parameters.trafficProfile
def clientClass = parsedResponse.Items.parameters.clientClass
def maxCpe = parsedResponse.Items.parameters.maxCpe as Integer
def reservedIpList = parsedResponse.Items.parameters.reservedIpList[0]
def wifiStatus = parsedResponse.Items.parameters.wifi.status
def gdStatus = parsedResponse.Items.parameters.gd.status



dsaInstance.query("select ss.service_id , hi.status, hi.fdm_srv_hsi, replace(replace(replace(hi.crmCode,'\"\',''),'{','['),'}',']') as newCrmCode, hi.trafficProfile, hi.clientClass, ht.blps_allocation_type, ht.blps,hi.blps_max_amount, hi.blps, hi.maxCpe, hi.reservedIpList as reservedIpList, hi.wifi_status, hi.gd_status, hi.vlan from  hsi_instance hi, subscription_service ss , subscriptions s, hsi_template ht where hi.id = ss.service_id and ss.subscription_id = s.id and hi.template_id = ht.id and ht.name = 'maximo';"){ ResultSet rs ->
	// Pruebo el primero	
	rs.next()
	
	// Valido el campo servicesID
	log.info("services: " + rs.getInt('service_id'))
	assert rs.getInt('service_id') == servicesId

	// Valido el campo status
	log.info("status: " + rs.getString('status'))
	assert rs.getString('status') == status

	// Valido el campo fdm_srv_hsi == name
	log.info("fdm_srv_hsi: " + rs.getString('fdm_srv_hsi'))
	assert rs.getString('fdm_srv_hsi') == name

	// Valido el campo newCrmCode
	log.info("crmCode: " + rs.getString('newCrmCode'))
	assert rs.getString('newCrmCode') == crmCode

	// Valido el campo trafficProfile
	log.info("trafficProfile: " + rs.getString('trafficProfile'))
	assert rs.getString('trafficProfile') == trafficProfile

	// Valido el campo clientClass
	log.info("clientClass: " + rs.getString('clientClass'))
	assert rs.getString('clientClass') == clientClass

	// Valido el campo maxCpe
	log.info("maxCpe: " + rs.getInt('maxCpe'))
	assert rs.getInt('maxCpe') == maxCpe

	// Valido el campo reservedIpList
	log.info("reservedIpList: " + rs.getString('reservedIpList'))
	assert rs.getString('reservedIpList') == reservedIpList	

	// Valido el campo wifi_status
	log.info("wifi_status: " + rs.getString('wifi_status'))
	assert rs.getString('wifi_status') == wifiStatus	

	// Valido el campo gd_status
	log.info("gd_status: " + rs.getString('gd_status'))
	assert rs.getString('gd_status') == gdStatus	

	//Valido que no haya mas datos.
	assert !rs.next() 	     
}</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="crmSubCode" value="100002" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Create - CreateServiceVideo" id="30a82e7b-575e-4074-b5b4-ed5d9f976255"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription/{subId}/service" methodName="Create" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Create - CreateServiceVideo" id="1b406235-c481-45a1-aeed-d4cc36c905a5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
  "name":"${newServicesVideo}",
  "crmCode": {"${newCrmCodeVideo}":"${valueCrmCode}"},
  "parameters": []
}
</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/crmSubCode/issue</con:originalUri><con:assertion type="GroovyScriptAssertion" id="4cd69ddb-cde5-4d7d-a7f4-dd52c20442bf" name="ScriptAssertionReturnBodyValidation"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

//Getting response from methods
def ResponseMessage = context.response
def parsedJson = new groovy.json.JsonSlurper().parseText(ResponseMessage)

assert parsedJson.Result == "Success"
assert parsedJson.Display_items == 1
assert parsedJson.Matched_items == 1
assert parsedJson.Error_code == null
assert parsedJson.Items != null
assert parsedJson.Items.parameters != null
assert parsedJson.Error_str == null
assert parsedJson.Error_str_detail == null
assert parsedJson.Donetime != null
assert parsedJson.Items != null
assert parsedJson.Items.name == "video"
assert parsedJson.Items.parameters != null
assert parsedJson.Items.parameters.trafficProfile != null
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="101ce411-7c69-4ee0-86d8-8b115bf0bb05" name="ScriptAssertionDataBase"><con:configuration><scriptText>import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import groovy.lang.Binding
import groovy.util.GroovyScriptEngine
import groovy.sql.Sql
import java.sql.ResultSet

//Obtengo el response
def response = messageExchange.response.responseContent

//Parseo el response.
def parsedResponse =  new JsonSlurper().parseText(response)

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

// location of script file is relative to SOAPUI project file.
String scriptPath = groovyUtils.projectPath + "/scripts/"

// Create Groovy Script Engine to run the script.
GroovyScriptEngine gse = new GroovyScriptEngine(scriptPath) 

// Load the Groovy Script file 
externalScript = gse.loadScriptByName("UtilsTest.Groovy")  

// Create a runtime instance of script
instance = externalScript.newInstance()

// Sanity check 
assert instance!= null

log.info("Corriendo script");

def dbDsa  = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbDSA')
def dbHost = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbHost')
def user = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbUser')
def password = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbPass')
def dbPort = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue("dbPort")

// Muestro el path de conexion de la DB
log.info(user + ":" + password + "@" + dbHost + ':' + dbPort + '/' + dbDsa)

// run the foo method in the external script
def dsaInstance = instance.getInstanceDB(dbDsa, dbHost, dbPort, user, password, log)

// Get of the response the name and crmSubCode fields
def servicesId = parsedResponse.Items.srvId
def status = parsedResponse.Items.status
def name = parsedResponse.Items.name
def crmCode = parsedResponse.Items.crmCode as String
def trafficProfile = parsedResponse.Items.parameters.trafficProfile

dsaInstance.query("select ss.service_id, vi.status, vt.name, replace(replace(replace(vi.crmCode,'\"\',''),'{','['),'}',']') as newCrmCode, vi.trafficProfile from video_instance vi , subscription_service ss , subscriptions s, video_template vt where vi.id = ss.service_id and ss.subscription_id = s.id and vi.template_id = vt.id and vt.name = 'video'"){ ResultSet rs ->
	// Pruebo el primero	
	rs.next()
	
	// Valido el campo servicesID
	log.info("services: " + rs.getInt('service_id'))
	assert rs.getInt('service_id') == servicesId

	// Valido el campo status
	log.info("status: " + rs.getString('status'))
	assert rs.getString('status') == status

	// Valido el campo fdm_srv_hsi == name
	log.info("name: " + rs.getString('name'))
	assert rs.getString('name') == name

	// Valido el campo newCrmCode
	log.info("crmCode: " + rs.getString('newCrmCode'))
	assert rs.getString('newCrmCode') == crmCode

	// Valido el campo trafficProfile
	log.info("trafficProfile: " + rs.getString('trafficProfile'))
	assert rs.getString('trafficProfile') == trafficProfile

	//Valido que no haya mas datos.
	assert !rs.next() 	     
}</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="crmSubCode" value="100002" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Create - CreateServiceTls" id="3f93098d-bdef-439b-bfa9-f9c8dbc6b0b2"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription/{subId}/service" methodName="Create" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Create - CreateServiceTls" id="1b406235-c481-45a1-aeed-d4cc36c905a5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
  "name":"${newServicesTls}",
  "crmCode": {"${newCrmCodeTls}":"${valueCrmCode}"},
  "parameters": {"vlan":"${newVlanValue}" , "bindLanPorts" : "${newBindLanPorts}"}
}
</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/crmSubCode/issue</con:originalUri><con:assertion type="GroovyScriptAssertion" id="674f49aa-1f99-48d7-a9f9-faa4aaa3de03" name="ScriptAssertionReturnBodyValidation"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

//Getting response from methods
def ResponseMessage = context.response
def parsedJson = new groovy.json.JsonSlurper().parseText(ResponseMessage)

assert parsedJson.Result == "Success"
assert parsedJson.Display_items == 1
assert parsedJson.Matched_items == 1
assert parsedJson.Error_code == null
assert parsedJson.Items != null
assert parsedJson.Items.name == "tls"
assert parsedJson.Items.parameters != null
assert parsedJson.Items.parameters.clientClass != null
assert parsedJson.Items.parameters.bindLanPorts != null
assert parsedJson.Items.parameters.bindLanPorts == 2
assert parsedJson.Items.parameters.maxCpe == 1
assert parsedJson.Items.parameters.bindLanPortsType == "dynamic"
assert parsedJson.Items.parameters.reservedIpList != null
assert parsedJson.Items.parameters.reservedIpList == []
assert parsedJson.Error_str == null
assert parsedJson.Error_str_detail == null
assert parsedJson.Donetime != null</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="077f955c-b148-48d7-aa9f-0127bea1deb2" name="ScriptAssertionDataBase"><con:configuration><scriptText>import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import groovy.lang.Binding
import groovy.util.GroovyScriptEngine
import groovy.sql.Sql
import java.sql.ResultSet

//Obtengo el response
def response = messageExchange.response.responseContent

//Parseo el response.
def parsedResponse =  new JsonSlurper().parseText(response)

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

// location of script file is relative to SOAPUI project file.
String scriptPath = groovyUtils.projectPath + "/scripts/"

// Create Groovy Script Engine to run the script.
GroovyScriptEngine gse = new GroovyScriptEngine(scriptPath) 

// Load the Groovy Script file 
externalScript = gse.loadScriptByName("UtilsTest.Groovy")  

// Create a runtime instance of script
instance = externalScript.newInstance()

// Sanity check 
assert instance!= null

log.info("Corriendo script");

def dbDsa  = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbDSA')
def dbHost = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbHost')
def user = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbUser')
def password = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbPass')
def dbPort = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue("dbPort")

// Muestro el path de conexion de la DB
log.info(user + ":" + password + "@" + dbHost + ':' + dbPort + '/' + dbDsa)
log.info(parsedResponse.Items.name)


// run the foo method in the external script
def dsaInstance = instance.getInstanceDB(dbDsa, dbHost, dbPort, user, password, log)

// Get of the response the name and crmSubCode fields
def servicesId = parsedResponse.Items.srvId as Integer
def status = parsedResponse.Items.status
def name = parsedResponse.Items.name
def trafficProfile = parsedResponse.Items.parameters.trafficProfile
def clientClass = parsedResponse.Items.parameters.clientClass
def maxCpe = parsedResponse.Items.parameters.maxCpe as Integer
def reservedIpList = parsedResponse.Items.parameters.reservedIpList[0]
def wifiStatus = parsedResponse.Items.parameters.wifi.status
def gdStatus = parsedResponse.Items.parameters.gd.status
def crmCode = parsedResponse.Items.crmCode as String


dsaInstance.query("select ss.service_id , ti.status, ti.trafficProfile, ti.clientClass, ti.maxCpe, ti.reservedIpList, ti.wifi_status, ti.gd_status, tt.name, replace(replace(replace(ti.crmCode,'\"\',''),'{','['),'}',']') as newCrmCode from  tls_instance ti , subscription_service ss , subscriptions s, tls_template tt where ti.id = ss.service_id and ss.subscription_id = s.id and ti.template_id = tt.id and tt.name = 'tls'")
{ ResultSet rs ->
	// Pruebo el primero	
	rs.next()
	
	// Valido el campo subscriptionId
	log.info("service: " + rs.getInt('service_id'))
	assert rs.getInt('service_id') == servicesId

	// Valido el campo status
	log.info("status: " + rs.getString('status'))
	assert rs.getString('status') == status

	// Valido el campo hi.fdm_srv_hsi == name
	log.info("name: " + rs.getString('name'))
	assert rs.getString('name') == name

	// Valido el campo trafficProfile
	log.info("clientClass: " + rs.getString('clientClass'))
	assert rs.getString('trafficProfile') == trafficProfile

	// Valido el campo trafficProfile
	log.info("clientClass: " + rs.getString('clientClass'))
	assert rs.getString('clientClass') == clientClass

	// Valido el campo trafficProfile
	log.info("maxCpe: " + rs.getInt('maxCpe'))
	assert rs.getInt('maxCpe') == maxCpe

	// Valido el campo reservedIpList
	log.info("reservedIpList: " + rs.getString('reservedIpList'))
	assert rs.getString('reservedIpList') == reservedIpList	

	// Valido el campo wifi_status
	log.info("wifi_status: " + rs.getString('wifi_status'))
	assert rs.getString('wifi_status') == wifiStatus	

	// Valido el campo gd_status
	log.info("gd_status: " + rs.getString('gd_status'))
	assert rs.getString('gd_status') == gdStatus	
	
	// Valido el campo REPLACE(hi.crmCode,'\"\','')
	log.info("crmCode: " + rs.getString('newCrmCode'))
	assert rs.getString('newCrmCode') == crmCode

	//Valido que no haya mas datos.
	assert !rs.next() 	     
}</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="crmSubCode" value="100002" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Create - CreateServiceTlsQinQ" id="d9f0edc0-1659-44a0-832f-7a4e65a818e1"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription/{subId}/service" methodName="Create" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Create - CreateServiceTlsQinQ" id="1b406235-c481-45a1-aeed-d4cc36c905a5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
  "name":"${newServicesTlsQinq}",
  "crmCode": {"${newCrmCodeTlsQinq}":"${valueCrmCode}"},
  "parameters": {"vlan":"${newVlanValue}", "bindLanPorts":"${newBindLanPorts}" }
}
</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/crmSubCode/issue</con:originalUri><con:assertion type="GroovyScriptAssertion" id="dfb3560e-f01f-45ec-bc5d-8bc30c9d96a1" name="ScriptAssertionReturnBodyValidation"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

//Getting response from methods
def ResponseMessage = context.response
def parsedJson = new groovy.json.JsonSlurper().parseText(ResponseMessage)

assert parsedJson.Result == "Success"
assert parsedJson.Display_items == 1
assert parsedJson.Matched_items == 1
assert parsedJson.Error_code == null
assert parsedJson.Items != null
assert parsedJson.Items.name == "tls-qinq"
assert parsedJson.Items.parameters != null
assert parsedJson.Items.parameters.clientClass != null
assert parsedJson.Items.parameters.bindLanPorts != null
assert parsedJson.Items.parameters.bindLanPorts == 2
assert parsedJson.Items.parameters.maxCpe == 1
assert parsedJson.Items.parameters.bindLanPortsType == "dynamic"
assert parsedJson.Items.parameters.reservedIpList != null
assert parsedJson.Items.parameters.reservedIpList == []
assert parsedJson.Error_str == null
assert parsedJson.Error_str_detail == null
assert parsedJson.Donetime != null</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="f2bfe641-b648-4832-adf4-4f9268145a3a" name="ScriptAssertionDataBase"><con:configuration><scriptText>import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import groovy.lang.Binding
import groovy.util.GroovyScriptEngine
import groovy.sql.Sql
import java.sql.ResultSet

//Obtengo el response
def response = messageExchange.response.responseContent

//Parseo el response.
def parsedResponse =  new JsonSlurper().parseText(response)

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

// location of script file is relative to SOAPUI project file.
String scriptPath = groovyUtils.projectPath + "/scripts/"

// Create Groovy Script Engine to run the script.
GroovyScriptEngine gse = new GroovyScriptEngine(scriptPath) 

// Load the Groovy Script file 
externalScript = gse.loadScriptByName("UtilsTest.Groovy")  

// Create a runtime instance of script
instance = externalScript.newInstance()

// Sanity check 
assert instance!= null

log.info("Corriendo script");

def dbDsa  = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbDSA')
def dbHost = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbHost')
def user = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbUser')
def password = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbPass')
def dbPort = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue("dbPort")

// Muestro el path de conexion de la DB
log.info(user + ":" + password + "@" + dbHost + ':' + dbPort + '/' + dbDsa)
log.info(parsedResponse.Items.name)


// run the foo method in the external script
def dsaInstance = instance.getInstanceDB(dbDsa, dbHost, dbPort, user, password, log)

// Get of the response the name and crmSubCode fields
def servicesId = parsedResponse.Items.srvId as Integer
def status = parsedResponse.Items.status
def name = parsedResponse.Items.name
def trafficProfile = parsedResponse.Items.parameters.trafficProfile
def clientClass = parsedResponse.Items.parameters.clientClass
def maxCpe = parsedResponse.Items.parameters.maxCpe as Integer
def reservedIpList = parsedResponse.Items.parameters.reservedIpList[0]
def wifiStatus = parsedResponse.Items.parameters.wifi.status
def gdStatus = parsedResponse.Items.parameters.gd.status
def crmCode = parsedResponse.Items.crmCode as String


dsaInstance.query("select ss.service_id , ti.status, ti.trafficProfile, ti.clientClass, ti.maxCpe, ti.reservedIpList, ti.wifi_status, ti.gd_status, tt.name, replace(replace(replace(ti.crmCode,'\"\',''),'{','['),'}',']') as newCrmCode from  tls_instance ti , subscription_service ss , subscriptions s, tls_template tt where ti.id = ss.service_id and ss.subscription_id = s.id and ti.template_id = tt.id and tt.name = 'tls-qinq';")
{ ResultSet rs ->
	// Pruebo el primero	
	rs.next()
	
	// Valido el campo subscriptionId
	log.info("service: " + rs.getInt('service_id'))
	assert rs.getInt('service_id') == servicesId

	// Valido el campo status
	log.info("status: " + rs.getString('status'))
	assert rs.getString('status') == status

	// Valido el campo hi.fdm_srv_hsi == name
	log.info("name: " + rs.getString('name'))
	assert rs.getString('name') == name

	// Valido el campo trafficProfile
	log.info("clientClass: " + rs.getString('clientClass'))
	assert rs.getString('trafficProfile') == trafficProfile

	// Valido el campo trafficProfile
	log.info("clientClass: " + rs.getString('clientClass'))
	assert rs.getString('clientClass') == clientClass

	// Valido el campo trafficProfile
	log.info("maxCpe: " + rs.getInt('maxCpe'))
	assert rs.getInt('maxCpe') == maxCpe

	// Valido el campo reservedIpList
	log.info("reservedIpList: " + rs.getString('reservedIpList'))
	assert rs.getString('reservedIpList') == reservedIpList	

	// Valido el campo wifi_status
	log.info("wifi_status: " + rs.getString('wifi_status'))
	assert rs.getString('wifi_status') == wifiStatus	

	// Valido el campo gd_status
	log.info("gd_status: " + rs.getString('gd_status'))
	assert rs.getString('gd_status') == gdStatus	
	
	// Valido el campo REPLACE(hi.crmCode,'\"\','')
	log.info("crmCode: " + rs.getString('newCrmCode'))
	assert rs.getString('newCrmCode') == crmCode

	//Valido que no haya mas datos.
	assert !rs.next() 	     
}</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="crmSubCode" value="100002" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Create - CreateServiceVoip" id="72152792-a5a2-4e76-bcf2-fc7aa404bb88"><con:settings/><con:config service="http://10.0.0.100:8080" methodName="Create" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription/{subId}/service" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Create - CreateServiceVoip" id="3cd2013c-14fd-41b1-b327-4da1a2d6d049" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
	"name": "voip",
	"crmCode": {"${newCrmCodeVoip}":"${valueCrmCode}"},
	"trafficProfile": "test",
	"parameters": {
		"amountLinesMax": 1,
		"voipProfile": 1,
		"lines": [
			{
				"port": "${newPort}",
				"enabled": 1,
				"username": "${newUserVoip}",
				"password": "${newPasswordVoip}",
				"line": "${newLineVoip}"	
			}
		]
	}
}
</con:request><con:originalUri>http://10.0.0.19//dsa/api/v1.0/subscriber/100002/subscription/1/service</con:originalUri><con:assertion type="GroovyScriptAssertion" id="ad811530-c61a-4098-9b74-9c6cd3d97e4f" name="ScriptAssertionReturnBodyValidation"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

//Getting response from methods
def ResponseMessage = context.response
def parsedJson = new groovy.json.JsonSlurper().parseText(ResponseMessage)

assert parsedJson.Result == "Success"
assert parsedJson.Display_items == 1
assert parsedJson.Matched_items == 1
assert parsedJson.Error_code == null
assert parsedJson.Items != null
assert parsedJson.Items.crmCode != null
assert parsedJson.Items.crmCode.'0014' == "SubscriptionId"
assert parsedJson.Items.parameters.trafficProfile == "VoIP Nacional"
assert parsedJson.Items.parameters.voipProfile.id == 1
assert parsedJson.Items.parameters.voipProfile.name == "voip"
assert parsedJson.Items.parameters.amount_lines == 1
assert parsedJson.Items.parameters.lines[0].id == 1
assert parsedJson.Items.parameters.lines[0].srv_instance == 11
assert parsedJson.Items.parameters.lines[0].port == 90
assert parsedJson.Items.parameters.lines[0].line == "48484340"
assert parsedJson.Items.parameters.lines[0].username == "testUserVoip"
assert parsedJson.Items.parameters.lines[0].password == "testPasswordVoip"
assert parsedJson.Items.parameters.lines[0].enable == 1
assert parsedJson.Error_str == null
assert parsedJson.Error_str_detail == null
assert parsedJson.Donetime != null

log.info("Validaciones OK")</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="05090798-cc33-45f7-99a1-8096e6e3057e" name="ScriptAssertionDataBase"><con:configuration><scriptText>import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import groovy.lang.Binding
import groovy.util.GroovyScriptEngine
import groovy.sql.Sql
import java.sql.ResultSet

//Obtengo el response
def response = messageExchange.response.responseContent

//Parseo el response.
def parsedResponse =  new JsonSlurper().parseText(response)

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

// location of script file is relative to SOAPUI project file.
String scriptPath = groovyUtils.projectPath + "/scripts/"

// Create Groovy Script Engine to run the script.
GroovyScriptEngine gse = new GroovyScriptEngine(scriptPath) 

// Load the Groovy Script file 
externalScript = gse.loadScriptByName("UtilsTest.Groovy")  

// Create a runtime instance of script
instance = externalScript.newInstance()

// Sanity check 
assert instance!= null

log.info("Corriendo script");

def dbDsa  = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbDSA')
def dbHost = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbHost')
def user = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbUser')
def password = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbPass')
def dbPort = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue("dbPort")

// Muestro el path de conexion de la DB
log.info(user + ":" + password + "@" + dbHost + ':' + dbPort + '/' + dbDsa)
log.info(parsedResponse.Items.name)


// run the foo method in the external script
def dsaInstance = instance.getInstanceDB(dbDsa, dbHost, dbPort, user, password, log)

// Get of the response the name and crmSubCode fields
def lineId = parsedResponse.Items.parameters.lines[0].id 
def srvId = parsedResponse.Items.srvId
def port = parsedResponse.Items.parameters.lines[0].port
def line = parsedResponse.Items.parameters.lines[0].line
def username = parsedResponse.Items.parameters.lines[0].username
def passWord = parsedResponse.Items.parameters.lines[0].password
def enable = parsedResponse.Items.parameters.lines[0].enable
def trafficProfile = parsedResponse.Items.parameters.trafficProfile
def voipProfileId = parsedResponse.Items.parameters.voipProfile.id
def voipProfileName = parsedResponse.Items.parameters.voipProfile.name

dsaInstance.query("select vl.id, vl.srv_instance, vl.port, vl.line, vl.username, vl.password, vl.enable, vi.trafficProfile, gvp.id, gvp.name from  voip_instance vi , subscription_service ss , subscriptions s, voip_template vt, voip_lines vl, gpon_voip_profile gvp where  vi.id = ss.service_id and ss.subscription_id = s.id and vi.template_id = vt.id and vl.srv_instance = vi.id and gvp.name = vt.name;")
{ ResultSet rs ->
	// Pruebo el primero	
	rs.next()
	
	// Valido el campo vl.id
	log.info("lineId: " + rs.getInt('vl.id'))
	assert rs.getInt('vl.id') == lineId

	// Valido el campo vl.srv_instance
	log.info("srvId: " + rs.getInt('vl.srv_instance'))
	assert rs.getInt('vl.srv_instance') == srvId

	// Valido el campo vl.port
	log.info("port: " + rs.getInt('vl.port'))
	assert rs.getInt('vl.port') == port

	// Valido el campo line
	log.info("line: " + rs.getString('vl.line'))
	assert rs.getString('vl.line') == line

	// Valido el campo username
	log.info("username: " + rs.getString('vl.username'))
	assert rs.getString('vl.username') == username

	// Valido el campo password
	log.info("passWord: " + rs.getString('vl.password'))
	assert rs.getString('vl.password') == passWord

	// Valido el campo enable
	log.info("enable: " + rs.getInt('vl.enable'))
	assert rs.getInt('vl.enable') == enable	

	// Valido el campo vi.trafficProfile
	log.info("trafficProfilee: " + rs.getString('vi.trafficProfile'))
	assert rs.getString('vi.trafficProfile') == trafficProfile	

	// Valido el campo gvp.id
	log.info("voipProfileId: " + rs.getInt('gvp.id'))
	assert rs.getInt('gvp.id') == voipProfileId	
	
	// Valido el campo gvp.name
	log.info("voipProfileName: " + rs.getString('gvp.name'))
	assert rs.getString('gvp.name') == voipProfileName

	//Valido que no haya mas datos.
	assert !rs.next() 	     
}</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="crmSubCode" value="100002" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Create - CreateServiceHsi - ReservationIpList failure" id="b185ebb5-2207-464e-bad5-5b0a2264e453"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription/{subId}/service" methodName="Create" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Create - CreateServiceHsi - ReservationIpList failure" id="1b406235-c481-45a1-aeed-d4cc36c905a5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
  "name":"${newServiceHsi}",
  "crmCode": {"${newCrmCode}":"${valueCrmCode}"},
  "parameters": {
    "ReservationIpLista":"${newReservationIpLista}"
  }
}</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/crmSubCode/issue</con:originalUri><con:assertion type="GroovyScriptAssertion" id="4cd69ddb-cde5-4d7d-a7f4-dd52c20442bf" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

//Getting response from methods
def ResponseMessage = context.response
def parsedJson = new groovy.json.JsonSlurper().parseText(ResponseMessage)

assert parsedJson.Result == "Failure"
assert parsedJson.Display_items == 0
assert parsedJson.Matched_items == 0
assert parsedJson.Error_code == 409
assert parsedJson.Items == null
assert parsedJson.Error_str == "Parametros incorrectos para el template"
assert parsedJson.Error_str_detail != null 
assert parsedJson.Donetime != null</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="crmSubCode" value="100002" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Create Another - CreateServiceHsiShouldReturnReservedIPList" id="592e3ba1-a614-4bfa-b23c-cdaa5ae8e975"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription/{subId}/service" methodName="Create" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Create Another - CreateServiceHsiShouldReturnReservedIPList" id="1b406235-c481-45a1-aeed-d4cc36c905a5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
  "name":"${newServiceHsi}",
  "crmCode": {"${newCrmCode}":"${valueCrmCode}"},
  "parameters": {
      "maxCpe":"${newMaxCpe}",
      "reservedIpList" : ["${newReservedIpList1}","${newReservedIpList2}"]
  }
}
</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/crmSubCode/issue</con:originalUri><con:assertion type="GroovyScriptAssertion" id="4cd69ddb-cde5-4d7d-a7f4-dd52c20442bf" name="ScriptAssertionReturnBodyValidation"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

//Getting response from methods
def ResponseMessage = context.response
def parsedJson = new groovy.json.JsonSlurper().parseText(ResponseMessage)

assert parsedJson.Result == "Success"
assert parsedJson.Display_items == 1
assert parsedJson.Matched_items == 1
assert parsedJson.Error_code == null
assert parsedJson.Items != null
assert parsedJson.Items.parameters != null
assert parsedJson.Items.parameters.clientClass != null
assert parsedJson.Items.parameters.bindLanPorts != null
assert parsedJson.Items.parameters.maxCpe == 90
assert parsedJson.Items.parameters.reservedIpList != null
assert parsedJson.Items.parameters.reservedIpList == ['10.0.0.1','10.0.0.5']
assert parsedJson.Error_str == null
assert parsedJson.Error_str_detail == null
assert parsedJson.Donetime != null</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="crmSubCode" value="100002" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Create ServiceWithDNS - CreateServiceHsiShouldReturnReservedIPList" id="5290c993-70c1-465e-8f70-e5c68ad46bf8"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription/{subId}/service" methodName="Create" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Create ServiceWithDNS - CreateServiceHsiShouldReturnReservedIPList" id="1b406235-c481-45a1-aeed-d4cc36c905a5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
  "name":"${newServiceHsi}",
  "crmCode": {"${newCrmCode}":"${valueCrmCode}"},
  "parameters": {
      "maxCpe":"${newMaxCpe}",
      "reservedIpList" : ["${newReservedIpList1}","${newReservedIpList2}"],
      "gd":          {
            "status": "${newStatusEnabled}",
            "ipv4":             {
               "nat": "${newStatusEnabled}",
               "ipMode": "${newIpModeDhcp}",
               "address": "${newIpAddress}",
               "mask": "${newIpMask}",
               "gw": "${newIpGw}",
               "dns": ["${newIpDns1}"]
            },
            "ipv6": {"status": "${newStatusEnabled}"}
         }
  }
}
</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/crmSubCode/issue</con:originalUri><con:assertion type="GroovyScriptAssertion" id="4cd69ddb-cde5-4d7d-a7f4-dd52c20442bf" name="ScriptAssertionReturnBodyValidation"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

//Getting response from methods
def ResponseMessage = context.response
def parsedJson = new groovy.json.JsonSlurper().parseText(ResponseMessage)

assert parsedJson.Result == "Success"
assert parsedJson.Display_items == 1
assert parsedJson.Matched_items == 1
assert parsedJson.Error_code == null
assert parsedJson.Items != null
assert parsedJson.Items.parameters != null
assert parsedJson.Items.parameters.clientClass != null
assert parsedJson.Items.parameters.bindLanPorts != null
assert parsedJson.Items.parameters.maxCpe == 90
assert parsedJson.Items.parameters.reservedIpList != null
assert parsedJson.Items.parameters.reservedIpList == ['10.0.0.1','10.0.0.5']
assert parsedJson.Items.parameters.gd.ipv4.dns == ['12.1.2.2']
assert parsedJson.Items.parameters.gd.ipv4.ipMode == "DHCP"
assert parsedJson.Items.parameters.gd.ipv4.address == "10.0.0.2"
assert parsedJson.Items.parameters.gd.ipv4.mask == "255.0.0.0"
assert parsedJson.Items.parameters.gd.ipv4.gw == "12.1.1.1"
assert parsedJson.Error_str == null
assert parsedJson.Error_str_detail == null
assert parsedJson.Donetime != null</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="2393fe26-92e5-4e3e-9f3f-41fe3cedbf9f" name="Script Assertion"><con:configuration><scriptText>import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import groovy.lang.Binding
import groovy.util.GroovyScriptEngine
import groovy.sql.Sql
import java.sql.ResultSet

//Obtengo el response
def response = messageExchange.response.responseContent

//Parseo el response.
def parsedResponse =  new JsonSlurper().parseText(response)

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

// location of script file is relative to SOAPUI project file.
String scriptPath = groovyUtils.projectPath + "/scripts/"

// Create Groovy Script Engine to run the script.
GroovyScriptEngine gse = new GroovyScriptEngine(scriptPath) 

// Load the Groovy Script file 
externalScript = gse.loadScriptByName("UtilsTest.Groovy")  

// Create a runtime instance of script
instance = externalScript.newInstance()

// Sanity check 
assert instance!= null

log.info("Corriendo script");

def dbDsa  = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbDSA')
def dbHost = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbHost')
def user = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbUser')
def password = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbPass')
def dbPort = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue("dbPort")

// Muestro el path de conexion de la DB
log.info(user + ":" + password + "@" + dbHost + ':' + dbPort + '/' + dbDsa)
log.info(parsedResponse.Items.name)


// run the foo method in the external script
def dsaInstance = instance.getInstanceDB(dbDsa, dbHost, dbPort, user, password, log)

// Get of the response the name and crmSubCode fields
def servicesId = parsedResponse.Items.srvId as Integer
def status = parsedResponse.Items.status
def name = parsedResponse.Items.name
def trafficProfile = parsedResponse.Items.parameters.trafficProfile
def clientClass = parsedResponse.Items.parameters.clientClass
def maxCpe = parsedResponse.Items.parameters.maxCpe as Integer
def reservedIpList = (parsedResponse.Items.parameters.reservedIpList as String).replaceAll("\\s","")
def wifiStatus = parsedResponse.Items.parameters.wifi.status
def gdStatus = parsedResponse.Items.parameters.gd.status
def gdIpv4Nat = parsedResponse.Items.parameters.gd.ipv4.nat
def gdIpv4IpMode = parsedResponse.Items.parameters.gd.ipv4.ipMode
def gdIpv4Address = parsedResponse.Items.parameters.gd.ipv4.address
def gdIpv4Mask = parsedResponse.Items.parameters.gd.ipv4.mask
def gdIpv4Gw = parsedResponse.Items.parameters.gd.ipv4.gw
def gdIpv4Dns = parsedResponse.Items.parameters.gd.ipv4.dns[0]
def gdIpv6Status = parsedResponse.Items.parameters.gd.ipv6.status
def crmCode = parsedResponse.Items.crmCode as String


dsaInstance.query("select ss.service_id, hi.status, hi.trafficProfile, hi.clientClass, hi.maxCpe, concat('[',hi.reservedIpList,']') as reservedIpList, hi.wifi_status, hi.gd_status, hi.gd_ipv4_nat, hi.gd_ipv4_ipMode, hi.gd_ipv4_address, hi.gd_ipv4_mask, hi.gd_ipv4_gw, hi.gd_ipv4_dns, hi.gd_ipv6_status, hi.fdm_srv_hsi, replace(replace(replace(hi.crmCode,'\"\',''),'{','['),'}',']') as newCrmCode from  hsi_instance hi, subscription_service ss , subscriptions s, hsi_template ht where  hi.id = ss.service_id and ss.subscription_id = s.id and hi.template_id = ht.id and ht.name = 'hsi' and hi.gd_ipv4_address = '10.0.0.2';")
{ ResultSet rs ->
	// Pruebo el primero	
	rs.next()
	
	// Valido el campo subscriptionId
	log.info("service: " + rs.getInt('service_id'))
	assert rs.getInt('service_id') == servicesId

	// Valido el campo status
	log.info("status: " + rs.getString('status'))
	assert rs.getString('status') == status

	// Valido el campo hi.fdm_srv_hsi == name
	log.info("fdm_srv_hsi: " + rs.getString('hi.fdm_srv_hsi'))
	assert rs.getString('hi.fdm_srv_hsi') == name

	// Valido el campo trafficProfile
	log.info("clientClass: " + rs.getString('clientClass'))
	assert rs.getString('trafficProfile') == trafficProfile

	// Valido el campo trafficProfile
	log.info("clientClass: " + rs.getString('clientClass'))
	assert rs.getString('clientClass') == clientClass

	// Valido el campo trafficProfile
	log.info("maxCpe: " + rs.getInt('maxCpe'))
	assert rs.getInt('maxCpe') == maxCpe

	// Valido el campo reservedIpList
	log.info("reservedIpList: " + rs.getString('reservedIpList'))
	assert rs.getString('reservedIpList') == reservedIpList	

	// Valido el campo wifi_status
	log.info("wifi_status: " + rs.getString('wifi_status'))
	assert rs.getString('wifi_status') == wifiStatus	

	// Valido el campo gd_status
	log.info("gd_status: " + rs.getString('gd_status'))
	assert rs.getString('gd_status') == gdStatus	
	
	// Valido el campo gd_ipv4_nat
	log.info("gd_ipv4_nat: " + rs.getString('gd_ipv4_nat'))
	assert rs.getString('gd_ipv4_nat') == gdIpv4Nat

	// Valido el campo gd_ipv4_ipMode
	log.info("gd_ipv4_ipMode: " + rs.getString('gd_ipv4_ipMode'))
	assert rs.getString('gd_ipv4_ipMode') == gdIpv4IpMode	

	// Valido el campo gd_ipv4_address
	log.info("gd_ipv4_address: " + rs.getString('gd_ipv4_address'))
	assert rs.getString('gd_ipv4_address') == gdIpv4Address

	// Valido el campo gd_ipv4_mask
	log.info("gd_ipv4_mask: " + rs.getString('gd_ipv4_mask'))
	assert rs.getString('gd_ipv4_mask') == gdIpv4Mask

	// Valido el campo gd_ipv4_gw
	log.info("gd_ipv4_gw: " + rs.getString('gd_ipv4_gw'))
	assert rs.getString('gd_ipv4_gw') == gdIpv4Gw

	// Valido el campo gd_ipv4_dns
	log.info("gd_ipv4_dns: " + rs.getString('gd_ipv4_dns'))
	assert rs.getString('gd_ipv4_dns') == gdIpv4Dns

	// Valido el campo gd_ipv6_status
	log.info("gd_ipv6_status: " + rs.getString('gd_ipv6_status'))
	assert rs.getString('gd_ipv6_status') == gdIpv6Status

	// Valido el campo REPLACE(hi.crmCode,'\"\','')
	log.info("crmCode: " + rs.getString('newCrmCode'))
	assert rs.getString('newCrmCode') == crmCode

	//Valido que no haya mas datos.
	assert !rs.next() 	     
}</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="crmSubCode" value="100002" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="srvId Transfer" id="a0c76fab-bfcc-4404-b353-cb4dcdda1029"><con:settings/><con:config><script>import groovy.json.JsonSlurper

srvId = new JsonSlurper().parseText(testRunner.testCase.getTestStepByName("Create - CreateServiceHsi").properties.Response.value).Items.srvId.toString()

testRunner.testCase.getTestStepByName("Get - GetService").setPropertyValue('srvId', srvId)
testRunner.testCase.getTestStepByName("ValidationError - UpdateNotValidStatusServiceShouldReturnFailure").setPropertyValue('srvId', srvId)
testRunner.testCase.getTestStepByName("Activate - UpdateStatusService").setPropertyValue('srvId', srvId)
testRunner.testCase.getTestStepByName("Update - CrmCodeService").setPropertyValue('srvId', srvId)
testRunner.testCase.getTestStepByName("Update - ParamsService").setPropertyValue('srvId', srvId)
testRunner.testCase.getTestStepByName("Delete - DeleteService").setPropertyValue('srvId', srvId)
testRunner.testCase.getTestStepByName("Update - ParamsService bindLanPorts").setPropertyValue('srvId', srvId)

context.srvId = srvId</script></con:config></con:testStep><con:testStep type="restrequest" name="Get - GetService" id="bc776daa-bbe9-4642-a69a-8620b1d69933"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription/{subId}/service/{srvId}" methodName="Get" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get - GetService" id="1b406235-c481-45a1-aeed-d4cc36c905a5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
  "name":"hsi",
  "crmCode": {"idSuscripcion":"99999"},
  "parameters": {"maxCpe":90 }
}
</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/crmSubCode/issue</con:originalUri><con:assertion type="GroovyScriptAssertion" id="aa36b66e-bdb7-4a05-90fa-044ac18f7b47" name="ScriptAssertionReturnBodyValidation"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

//Getting response from methods
def ResponseMessage = context.response
def parsedJson = new groovy.json.JsonSlurper().parseText(ResponseMessage)

assert parsedJson.Result == "Success"
assert parsedJson.Display_items == 1
assert parsedJson.Matched_items == 1
assert parsedJson.Error_code == null
assert parsedJson.Items != null
assert parsedJson.Items.parameters != null
assert parsedJson.Items.parameters.clientClass != null
assert parsedJson.Items.parameters.bindLanPorts != null
assert parsedJson.Items.parameters.bindLanPortsType != null
assert parsedJson.Items.parameters.bindLanPortsMaxAmount != null
assert parsedJson.Items.parameters.bindLanPortsTotal != null
assert parsedJson.Items.parameters.maxCpe == 90
assert parsedJson.Items.parameters.trafficProfile != null
assert parsedJson.Items.parameters.reservedIpList[0] == null
assert parsedJson.Items.parameters.wifi.status == "disabled"
assert parsedJson.Items.parameters.gd.status == "enabled"
assert parsedJson.Items.parameters.gd.ipv4.nat == "enabled"
assert parsedJson.Items.parameters.gd.ipv4.ipMode == "DHCP"
assert parsedJson.Items.parameters.gd.ipv4.address == null
assert parsedJson.Items.parameters.gd.ipv4.mask == null
assert parsedJson.Items.parameters.gd.ipv4.gw == null
assert parsedJson.Items.parameters.gd.ipv4.gw == null
assert parsedJson.Items.parameters.gd.ipv4.dns[0] == "8.8.8.8"
assert parsedJson.Items.parameters.gd.ipv6.status == "disabled"
assert parsedJson.Error_str == null
assert parsedJson.Error_str_detail == null
assert parsedJson.Donetime != null

log.info("Validaciones OK")</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="srvId" value="1"/>
  <con:entry key="crmSubCode" value="100002"/>
</con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>srvId</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Get All - GetAllSubscriptionService" id="a87544a8-6285-497a-8735-7bfca5d711d7"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription/{subId}/service" methodName="Get" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get All - GetAllSubscriptionService" id="1b406235-c481-45a1-aeed-d4cc36c905a5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request/><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/crmSubCode/issue</con:originalUri><con:assertion type="GroovyScriptAssertion" id="19a6d08c-2277-4206-92fe-cbc68789577c" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

//Getting response from methods
def ResponseMessage = context.response
def parsedJson = new groovy.json.JsonSlurper().parseText(ResponseMessage)

assert parsedJson.Result == "Success"
assert parsedJson.Display_items == 13
assert parsedJson.Matched_items == 13
assert parsedJson.Error_code == null
assert parsedJson.Items != null
assert parsedJson.Items[0].srvId == 1
assert parsedJson.Items[1].srvId == 2
assert parsedJson.Items[2].srvId == 3
assert parsedJson.Items[3].srvId == 4
assert parsedJson.Items[4].srvId == 5
assert parsedJson.Items[5].srvId == 6
assert parsedJson.Items[6].srvId == 7
assert parsedJson.Items[7].srvId == 8
assert parsedJson.Items[8].srvId == 9
assert parsedJson.Items[9].srvId == 10
assert parsedJson.Items[10].srvId == 11
assert parsedJson.Items[11].srvId == 13
assert parsedJson.Error_str == null
assert parsedJson.Error_str_detail == null
assert parsedJson.Donetime != null</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="crmSubCode" value="100002" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Create AllParams - CreateServiceHsiShouldReturnReservedIPList" id="68f3ab4f-1e26-4f7c-bffe-6229ea1b83ea"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription/{subId}/service" methodName="Create" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Create AllParams - CreateServiceHsiShouldReturnReservedIPList" id="1b406235-c481-45a1-aeed-d4cc36c905a5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
  "name":"${newServiceHsi}",
  "crmCode": {"${newCrmCode}":"${valueCrmCode}"},
  "parameters": {
      "trafficProfile":"${newTrafficProfile}",
      "clientClass":"${newClientClass}",
      "bindLanPortsType": "${newIpModeStatic}",
      "bindLanPorts":["${newAllBindLanPorts}"], 
      "reservedIpList" : ["${newReservedIpList3}"],
      "maxCpe":"${newMaxCpe}",
      "wifi":{
            "status":"${newStatusEnabled}"
          },
      "gd":          {
            "status": "${newStatusEnabled}",
            "ipv4":             {
               "nat": "${newStatusEnabled}",
               "ipMode": "${newIpModeStatic}",
               "address": "${newIpAddress}",
               "mask": "${newIpMask}",
               "gw": "${newIpGw}",
               "dns": ["${newIpDns2}","${newIpDns3}"]
            },
            "ipv6": {"status": "${newStatusEnabled}"}
         }
	}
}
</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/crmSubCode/issue</con:originalUri><con:assertion type="GroovyScriptAssertion" id="4cd69ddb-cde5-4d7d-a7f4-dd52c20442bf" name="ScriptAssertionReturnBodyValidation"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

//Getting response from methods
def ResponseMessage = context.response
def parsedJson = new groovy.json.JsonSlurper().parseText(ResponseMessage)

assert parsedJson.Result == "Success"
assert parsedJson.Display_items == 1
assert parsedJson.Matched_items == 1
assert parsedJson.Error_code == null
assert parsedJson.Items != null
assert parsedJson.Items.parameters != null
assert parsedJson.Items.parameters.clientClass != null
assert parsedJson.Items.parameters.bindLanPorts != null
assert parsedJson.Items.parameters.bindLanPorts == [1,2,3,4]
assert parsedJson.Items.parameters.maxCpe == 90
assert parsedJson.Items.parameters.reservedIpList != null
assert parsedJson.Items.parameters.reservedIpList == ['100.201.201.203']
assert parsedJson.Items.parameters.gd.ipv4.dns == ['8.8.8.8','8.8.4.4']
assert parsedJson.Items.parameters.gd.ipv6.status == "enabled"
assert parsedJson.Error_str == null
assert parsedJson.Error_str_detail == null
assert parsedJson.Donetime != null</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="9feb5801-c05f-4332-bf49-56bafc3efe1d" name="ScriptAssertionDataBase"><con:configuration><scriptText>import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import groovy.lang.Binding
import groovy.util.GroovyScriptEngine
import groovy.sql.Sql
import java.sql.ResultSet

//Obtengo el response
def response = messageExchange.response.responseContent

//Parseo el response.
def parsedResponse =  new JsonSlurper().parseText(response)

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

// location of script file is relative to SOAPUI project file.
String scriptPath = groovyUtils.projectPath + "/scripts/"

// Create Groovy Script Engine to run the script.
GroovyScriptEngine gse = new GroovyScriptEngine(scriptPath) 

// Load the Groovy Script file 
externalScript = gse.loadScriptByName("UtilsTest.Groovy")  

// Create a runtime instance of script
instance = externalScript.newInstance()

// Sanity check 
assert instance!= null

log.info("Corriendo script");

def dbDsa  = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbDSA')
def dbHost = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbHost')
def user = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbUser')
def password = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbPass')
def dbPort = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue("dbPort")

// Muestro el path de conexion de la DB
log.info(user + ":" + password + "@" + dbHost + ':' + dbPort + '/' + dbDsa)
log.info(parsedResponse.Items.name)


// run the foo method in the external script
def dsaInstance = instance.getInstanceDB(dbDsa, dbHost, dbPort, user, password, log)

// Get of the response the name and crmSubCode fields
def servicesId = parsedResponse.Items.srvId as Integer
def status = parsedResponse.Items.status
def name = parsedResponse.Items.name
def trafficProfile = parsedResponse.Items.parameters.trafficProfile
def clientClass = parsedResponse.Items.parameters.clientClass
def maxCpe = parsedResponse.Items.parameters.maxCpe as Integer
def reservedIpList = parsedResponse.Items.parameters.reservedIpList[0]
def wifiStatus = parsedResponse.Items.parameters.wifi.status
def gdStatus = parsedResponse.Items.parameters.gd.status
def gdIpv4Nat = parsedResponse.Items.parameters.gd.ipv4.nat
def gdIpv4IpMode = parsedResponse.Items.parameters.gd.ipv4.ipMode
def gdIpv4Address = parsedResponse.Items.parameters.gd.ipv4.address
def gdIpv4Mask = parsedResponse.Items.parameters.gd.ipv4.mask
def gdIpv4Gw = parsedResponse.Items.parameters.gd.ipv4.gw
def gdIpv4Dns = (parsedResponse.Items.parameters.gd.ipv4.dns as String).replaceAll("\\s","")
def gdIpv6Status = parsedResponse.Items.parameters.gd.ipv6.status
def crmCode = parsedResponse.Items.crmCode as String


dsaInstance.query("select ss.service_id, hi.status, hi.trafficProfile, hi.clientClass, hi.maxCpe, hi.reservedIpList, hi.wifi_status, hi.gd_status, hi.gd_ipv4_nat, hi.gd_ipv4_ipMode, hi.gd_ipv4_address, hi.gd_ipv4_mask, hi.gd_ipv4_gw, concat('[',hi.gd_ipv4_dns,']') as gd_ipv4_dns, hi.gd_ipv6_status, hi.fdm_srv_hsi, replace(replace(replace(hi.crmCode,'\"\',''),'{','['),'}',']') as newCrmCode from  hsi_instance hi, subscription_service ss , subscriptions s, hsi_template ht where  hi.id = ss.service_id and ss.subscription_id = s.id and hi.template_id = ht.id and ht.name = 'hsi' and hi.gd_ipv4_ipMode = 'static';")
{ ResultSet rs ->
	// Pruebo el primero	
	rs.next()
	
	// Valido el campo subscriptionId
	log.info("service: " + rs.getInt('service_id'))
	assert rs.getInt('service_id') == servicesId

	// Valido el campo status
	log.info("status: " + rs.getString('status'))
	assert rs.getString('status') == status

	// Valido el campo hi.fdm_srv_hsi == name
	log.info("fdm_srv_hsi: " + rs.getString('hi.fdm_srv_hsi'))
	assert rs.getString('hi.fdm_srv_hsi') == name

	// Valido el campo trafficProfile
	log.info("clientClass: " + rs.getString('clientClass'))
	assert rs.getString('trafficProfile') == trafficProfile

	// Valido el campo trafficProfile
	log.info("clientClass: " + rs.getString('clientClass'))
	assert rs.getString('clientClass') == clientClass

	// Valido el campo trafficProfile
	log.info("maxCpe: " + rs.getInt('maxCpe'))
	assert rs.getInt('maxCpe') == maxCpe

	// Valido el campo reservedIpList
	log.info("reservedIpList: " + rs.getString('reservedIpList'))
	assert rs.getString('reservedIpList') == reservedIpList	

	// Valido el campo wifi_status
	log.info("wifi_status: " + rs.getString('wifi_status'))
	assert rs.getString('wifi_status') == wifiStatus	

	// Valido el campo gd_status
	log.info("gd_status: " + rs.getString('gd_status'))
	assert rs.getString('gd_status') == gdStatus	
	
	// Valido el campo gd_ipv4_nat
	log.info("gd_ipv4_nat: " + rs.getString('gd_ipv4_nat'))
	assert rs.getString('gd_ipv4_nat') == gdIpv4Nat

	// Valido el campo gd_ipv4_ipMode
	log.info("gd_ipv4_ipMode: " + rs.getString('gd_ipv4_ipMode'))
	assert rs.getString('gd_ipv4_ipMode') == gdIpv4IpMode	

	// Valido el campo gd_ipv4_address
	log.info("gd_ipv4_address: " + rs.getString('gd_ipv4_address'))
	assert rs.getString('gd_ipv4_address') == gdIpv4Address

	// Valido el campo gd_ipv4_mask
	log.info("gd_ipv4_mask: " + rs.getString('gd_ipv4_mask'))
	assert rs.getString('gd_ipv4_mask') == gdIpv4Mask

	// Valido el campo gd_ipv4_gw
	log.info("gd_ipv4_gw: " + rs.getString('gd_ipv4_gw'))
	assert rs.getString('gd_ipv4_gw') == gdIpv4Gw

	// Valido el campo gd_ipv4_dns
	log.info("gd_ipv4_dns: " + rs.getString('gd_ipv4_dns'))
	assert rs.getString('gd_ipv4_dns') == gdIpv4Dns

	// Valido el campo gd_ipv6_status
	log.info("gd_ipv6_status: " + rs.getString('gd_ipv6_status'))
	assert rs.getString('gd_ipv6_status') == gdIpv6Status

	// Valido el campo REPLACE(hi.crmCode,'\"\','')
	log.info("crmCode: " + rs.getString('newCrmCode'))
	assert rs.getString('newCrmCode') == crmCode

	//Valido que no haya mas datos.
	assert !rs.next() 	     
}</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="crmSubCode" value="100002" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Asign device - ActiveSubscriptionShouldReturnOk" id="da758cf2-ee54-431b-9209-cf58c6b76daf"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription/{subId}/device" methodName="Asign device" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Asign device - ActiveSubscriptionShouldReturnOk" id="1b406235-c481-45a1-aeed-d4cc36c905a5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
  "id" : "ZTE01010101010",
  "activationCode": "12321321"
}</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/crmSubCode/issue</con:originalUri><con:assertion type="GroovyScriptAssertion" id="e5cb700e-a698-41c3-a8ed-c88a4209d249" name="ScriptAssertionReturnBodyValidation"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

//Getting response from methods
def ResponseMessage = context.response
def parsedJson = new groovy.json.JsonSlurper().parseText(ResponseMessage)

assert parsedJson.Result == "Success"
assert parsedJson.Display_items == 1
assert parsedJson.Matched_items == 1
assert parsedJson.Error_code == null
assert parsedJson.Items != null
assert parsedJson.Error_str == null
assert parsedJson.Error_str_detail == null
assert parsedJson.Items.id == 1
assert parsedJson.Items.subscriber_id == 1
assert parsedJson.Items.address == ""
assert parsedJson.Items.create_time != null
assert parsedJson.Items.update_time != null
assert parsedJson.Items.type == "service"
assert parsedJson.Items.reservationid == "909090"
assert parsedJson.Items.device_id == "ZTE01010101010"
assert parsedJson.Items.activationCode == null
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="f6dfd5aa-f95f-40e5-92d9-cc6224ae09ff" name="ScriptAssertionDataBase"><con:configuration><scriptText>import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import groovy.lang.Binding
import groovy.util.GroovyScriptEngine
import groovy.sql.Sql
import java.sql.ResultSet

//Obtengo el response
def response = messageExchange.response.responseContent

//Parseo el response.
def parsedResponse =  new JsonSlurper().parseText(response)

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

// location of script file is relative to SOAPUI project file.
String scriptPath = groovyUtils.projectPath + "/scripts/"

// Create Groovy Script Engine to run the script.
GroovyScriptEngine gse = new GroovyScriptEngine(scriptPath) 

// Load the Groovy Script file 
externalScript = gse.loadScriptByName("UtilsTest.Groovy")  

// Create a runtime instance of script
instance = externalScript.newInstance()

// Sanity check 
assert instance!= null

log.info("Corriendo script");

def dbDsa  = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbDSA')
def dbHost = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbHost')
def user = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbUser')
def password = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbPass')
def dbPort = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue("dbPort")

// Muestro el path de conexion de la DB
log.info(user + ":" + password + "@" + dbHost + ':' + dbPort + '/' + dbDsa)
log.info(parsedResponse.Items.name)


// run the foo method in the external script
def dsaInstance = instance.getInstanceDB(dbDsa, dbHost, dbPort, user, password, log)

// Get of the response the name and crmSubCode fields
def id = parsedResponse.Items.id
def subscriber_id = parsedResponse.Items.subscriber_id
def address = parsedResponse.Items.address
def create_time= parsedResponse.Items.create_time
def status = parsedResponse.Items.status
def type = parsedResponse.Items.type
def reservationId = parsedResponse.Items.reservationid as Integer
def crmCode = parsedResponse.Items.crmCode
def device_id = parsedResponse.Items.device_id


dsaInstance.query("select s.id, s.subscriber_id, s.address, s.create_time, s.update_time, s.status,s.type , s.reservationId, coalesce(s.crmCode,'') as crmCode, s.device_id from subscriptions s where s.id = 1;")
{ ResultSet rs ->
	// Pruebo el primero	
	rs.next()
	
	// Valido el campo id
	log.info("id: " + rs.getInt('id'))
	assert rs.getInt('id') == id

	// Valido el campo subscriber_id
	log.info("subscriber_id: " + rs.getInt('subscriber_id'))
	assert rs.getInt('subscriber_id') == subscriber_id

	// Valido el campo address
	log.info("address: " + rs.getInt('address'))
	log.info(address)
	//assert rs.getInt('address') == address
	
	// Valido el campo status
	log.info("status: " + rs.getString('status'))
	assert rs.getString('status') == status

	// Valido el campo status
	log.info("type: " + rs.getString('type'))
	assert rs.getString('type') == type

	// Valido el campo reservationId
	log.info("reservationId: " + rs.getInt('reservationId'))
	assert rs.getInt('reservationId') == reservationId

	// Valido el campo crmCode
	log.info("crmCode: " + rs.getInt('crmCode'))
	log.info(crmCode)
	//assert rs.getInt('crmCode') == crmCode

	// Valido el campo device_id
	log.info("device_id: " + rs.getString('device_id'))
	assert rs.getString('device_id') == device_id	

	//Valido que no haya mas datos.
	assert !rs.next() 	 
}</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="crmSubCode" value="100002" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="ValidationError - UpdateNotValidStatusServiceShouldReturnFailure" id="1c9294e0-5d7f-47f7-a661-25886cbcdc7c"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription/{subId}/service/{srvId}/status" methodName="Suspend" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="ValidationError - UpdateNotValidStatusServiceShouldReturnFailure" id="1b406235-c481-45a1-aeed-d4cc36c905a5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
  "status":"unvalor"
}
</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/crmSubCode/issue</con:originalUri><con:assertion type="GroovyScriptAssertion" id="386bd7d7-9710-4c84-935d-f7f926a6cf2b" name="ScriptAssertionReturnBodyValidation"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

//Getting response from methods
def ResponseMessage = context.response
def parsedJson = new groovy.json.JsonSlurper().parseText(ResponseMessage)

assert parsedJson.Result == "Failure"
assert parsedJson.Display_items == 0
assert parsedJson.Matched_items == 0
assert parsedJson.Error_code != null
assert parsedJson.Items == null
assert parsedJson.Error_str != null
assert parsedJson.Error_str_detail == "Status contains invalid value"
assert parsedJson.Donetime != null</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="srvId" value="1"/>
  <con:entry key="crmSubCode" value="100002"/>
</con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>srvId</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Activate - UpdateStatusService" id="17ebc4c0-ca49-4035-99a0-6f7fcc07b32c"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription/{subId}/service/{srvId}/status" methodName="Suspend" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Activate - UpdateStatusService" id="1b406235-c481-45a1-aeed-d4cc36c905a5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
  "status":"${newStatusSuspended}"
}
</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/crmSubCode/issue</con:originalUri><con:assertion type="GroovyScriptAssertion" id="45949867-528d-45bd-8183-d11d8bb35816" name="ScriptAssertionReturnBodyValidation"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

//Getting response from methods
def ResponseMessage = context.response
def parsedJson = new groovy.json.JsonSlurper().parseText(ResponseMessage)

assert parsedJson.Result == "Success"
assert parsedJson.Display_items == 1
assert parsedJson.Matched_items == 1
assert parsedJson.Error_code == null
assert parsedJson.Items != null
assert parsedJson.Items.parameters != null
assert parsedJson.Items.parameters.clientClass != null
assert parsedJson.Items.parameters.bindLanPorts != null
assert parsedJson.Items.parameters.bindLanPortsType == "dynamic"
assert parsedJson.Items.parameters.clientClass == "publico"
assert parsedJson.Items.parameters.trafficProfile == "200 Megas"
assert parsedJson.Items.parameters.bindLanPorts == 1
assert parsedJson.Items.parameters.maxCpe == 90
assert parsedJson.Items.parameters.reservedIpList[0] == null
assert parsedJson.Items.parameters.gd.ipv4.dns == ['8.8.8.8']
assert parsedJson.Items.parameters.gd.ipv6.status == "disabled"
assert parsedJson.Error_str == null
assert parsedJson.Error_str_detail == null
assert parsedJson.Donetime != null</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="4dace74c-62cd-4f1a-a2c8-c716f3f26297" name="ScriptAssertionDataBase"><con:configuration><scriptText>import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import groovy.lang.Binding
import groovy.util.GroovyScriptEngine
import groovy.sql.Sql
import java.sql.ResultSet

//Obtengo el response
def response = messageExchange.response.responseContent

//Parseo el response.
def parsedResponse =  new JsonSlurper().parseText(response)

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

// location of script file is relative to SOAPUI project file.
String scriptPath = groovyUtils.projectPath + "/scripts/"

// Create Groovy Script Engine to run the script.
GroovyScriptEngine gse = new GroovyScriptEngine(scriptPath) 

// Load the Groovy Script file 
externalScript = gse.loadScriptByName("UtilsTest.Groovy")  

// Create a runtime instance of script
instance = externalScript.newInstance()

// Sanity check 
assert instance!= null

log.info("Corriendo script");

def dbDsa  = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbDSA')
def dbHost = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbHost')
def user = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbUser')
def password = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbPass')
def dbPort = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue("dbPort")

// Muestro el path de conexion de la DB
log.info(user + ":" + password + "@" + dbHost + ':' + dbPort + '/' + dbDsa)
log.info(parsedResponse.Items.name)


// run the foo method in the external script
def dsaInstance = instance.getInstanceDB(dbDsa, dbHost, dbPort, user, password, log)

// Get of the response the name and crmSubCode fields
def servicesId = parsedResponse.Items.srvId as Integer
def status = parsedResponse.Items.status
def name = parsedResponse.Items.name
def trafficProfile = parsedResponse.Items.parameters.trafficProfile
def clientClass = parsedResponse.Items.parameters.clientClass
def maxCpe = parsedResponse.Items.parameters.maxCpe as Integer
def reservedIpList = parsedResponse.Items.parameters.reservedIpList[0]
def wifiStatus = parsedResponse.Items.parameters.wifi.status
def gdStatus = parsedResponse.Items.parameters.gd.status
def gdIpv4Nat = parsedResponse.Items.parameters.gd.ipv4.nat
def gdIpv4IpMode = parsedResponse.Items.parameters.gd.ipv4.ipMode
def gdIpv4Address = parsedResponse.Items.parameters.gd.ipv4.address
def gdIpv4Mask = parsedResponse.Items.parameters.gd.ipv4.mask
def gdIpv4Gw = parsedResponse.Items.parameters.gd.ipv4.gw
def gdIpv4Dns = parsedResponse.Items.parameters.gd.ipv4.dns[0]
def gdIpv6Status = parsedResponse.Items.parameters.gd.ipv6.status
def crmCode = parsedResponse.Items.crmCode as String


dsaInstance.query("select ss.service_id, hi.status, hi.trafficProfile, hi.clientClass, hi.maxCpe, hi.reservedIpList, hi.wifi_status, hi.gd_status, hi.gd_ipv4_nat, hi.gd_ipv4_ipMode, hi.gd_ipv4_address, hi.gd_ipv4_mask, hi.gd_ipv4_gw, hi.gd_ipv4_dns, hi.gd_ipv6_status, hi.fdm_srv_hsi, replace(replace(replace(hi.crmCode,'\"\',''),'{','['),'}',']') as newCrmCode from  hsi_instance hi, subscription_service ss , subscriptions s, hsi_template ht where  hi.id = ss.service_id and ss.subscription_id = s.id and hi.template_id = ht.id and ht.name = 'hsi' and ss.service_id = '1';")
{ ResultSet rs ->
	// Pruebo el primero	
	rs.next()
	
	// Valido el campo subscriptionId
	log.info("service: " + rs.getInt('service_id'))
	assert rs.getInt('service_id') == servicesId

	// Valido el campo status
	log.info("status: " + rs.getString('status'))
	assert rs.getString('status') == status

	// Valido el campo hi.fdm_srv_hsi == name
	log.info("fdm_srv_hsi: " + rs.getString('hi.fdm_srv_hsi'))
	assert rs.getString('hi.fdm_srv_hsi') == name

	// Valido el campo trafficProfile
	log.info("clientClass: " + rs.getString('clientClass'))
	assert rs.getString('trafficProfile') == trafficProfile

	// Valido el campo trafficProfile
	log.info("clientClass: " + rs.getString('clientClass'))
	assert rs.getString('clientClass') == clientClass

	// Valido el campo trafficProfile
	log.info("maxCpe: " + rs.getInt('maxCpe'))
	assert rs.getInt('maxCpe') == maxCpe

	// Valido el campo reservedIpList
	log.info("reservedIpList: " + rs.getString('reservedIpList'))
	assert rs.getString('reservedIpList') == reservedIpList	

	// Valido el campo wifi_status
	log.info("wifi_status: " + rs.getString('wifi_status'))
	assert rs.getString('wifi_status') == wifiStatus	

	// Valido el campo gd_status
	log.info("gd_status: " + rs.getString('gd_status'))
	assert rs.getString('gd_status') == gdStatus	
	
	// Valido el campo gd_ipv4_nat
	log.info("gd_ipv4_nat: " + rs.getString('gd_ipv4_nat'))
	assert rs.getString('gd_ipv4_nat') == gdIpv4Nat

	// Valido el campo gd_ipv4_ipMode
	log.info("gd_ipv4_ipMode: " + rs.getString('gd_ipv4_ipMode'))
	assert rs.getString('gd_ipv4_ipMode') == gdIpv4IpMode	

	// Valido el campo gd_ipv4_address
	log.info("gd_ipv4_address: " + rs.getString('gd_ipv4_address'))
	assert rs.getString('gd_ipv4_address') == gdIpv4Address

	// Valido el campo gd_ipv4_mask
	log.info("gd_ipv4_mask: " + rs.getString('gd_ipv4_mask'))
	assert rs.getString('gd_ipv4_mask') == gdIpv4Mask

	// Valido el campo gd_ipv4_gw
	log.info("gd_ipv4_gw: " + rs.getString('gd_ipv4_gw'))
	assert rs.getString('gd_ipv4_gw') == gdIpv4Gw

	// Valido el campo gd_ipv4_dns
	log.info("gd_ipv4_dns: " + rs.getString('gd_ipv4_dns'))
	assert rs.getString('gd_ipv4_dns') == gdIpv4Dns

	// Valido el campo gd_ipv6_status
	log.info("gd_ipv6_status: " + rs.getString('gd_ipv6_status'))
	assert rs.getString('gd_ipv6_status') == gdIpv6Status

	// Valido el campo REPLACE(hi.crmCode,'\"\','')
	log.info("crmCode: " + rs.getString('newCrmCode'))
	assert rs.getString('newCrmCode') == crmCode

	//Valido que no haya mas datos.
	assert !rs.next() 	     
}</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="srvId" value="1"/>
  <con:entry key="crmSubCode" value="100002"/>
</con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>srvId</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Update - CrmCodeService" id="f88bfd7d-e084-4503-b088-fffcfaed833e"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription/{subId}/service/{srvId}/crmCode" methodName="UpdateCrmCode" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Update - CrmCodeService" id="1b406235-c481-45a1-aeed-d4cc36c905a5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
  "crmCode": 
    {
      "${newCrmCode}":"${valueCrmCode}", 
      "${newCrmCode2}":"${valueCrmCode}"
    }
}</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/crmSubCode/issue</con:originalUri><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsResultSuccess"><con:configuration><token>"Result":"Success"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsCrmCode"><con:configuration><token>"crmCode":{</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsParameters"><con:configuration><token>"parameters":{</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsSrvId"><con:configuration><token>"srvId":</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsName"><con:configuration><token>"name":"hsi"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="srvId" value="1"/>
  <con:entry key="crmSubCode" value="100002"/>
</con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>srvId</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Update - ParamsService" id="9ddc2adf-792f-40ce-a718-14aae9132810"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription/{subId}/service/{srvId}" methodName="Update" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Update - ParamsService" id="1b406235-c481-45a1-aeed-d4cc36c905a5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
  "parameters":{
    "trafficProfile":"${newTrafficProfile2}"
  }
}
</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/crmSubCode/issue</con:originalUri><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsResultSuccess"><con:configuration><token>"Result":"Success"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsCrmCode"><con:configuration><token>"crmCode":{</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsParameters"><con:configuration><token>"parameters":{</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsSrvId"><con:configuration><token>"srvId":</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsName"><con:configuration><token>"name":"hsi"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsCrmCode88888"><con:configuration><token>"trafficProfile":"300 Megas"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="srvId" value="1"/>
  <con:entry key="crmSubCode" value="100002"/>
</con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>srvId</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Update - ParamsService bindLanPorts" id="64683209-d308-4ad5-b8e9-3ed6e964db95"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription/{subId}/service/{srvId}" methodName="Update" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Update - ParamsService bindLanPorts" id="1b406235-c481-45a1-aeed-d4cc36c905a5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
  "parameters":{
  	"bindLanPortsType": "${newIpModeStatic}",
	"bindLanPorts":["${newAllBindLanPorts}"]
  }
}
</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/crmSubCode/issue</con:originalUri><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsResultSuccess"><con:configuration><token>"Result":"Success"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsCrmCode"><con:configuration><token>"crmCode":{</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsParameters"><con:configuration><token>"parameters":{</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsSrvId"><con:configuration><token>"srvId":</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsName"><con:configuration><token>"name":"hsi"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsTrafficProfile"><con:configuration><token>"trafficProfile":"300 Megas"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="2bd296b8-8994-4239-8813-2010451f85b5" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

//Getting response from methods
def ResponseMessage = context.response
def parsedJson = new groovy.json.JsonSlurper().parseText(ResponseMessage)

assert parsedJson.Result == "Success"
assert parsedJson.Display_items == 1
assert parsedJson.Matched_items == 1
assert parsedJson.Error_code == null
assert parsedJson.Items != null
assert parsedJson.Items.srvId == 1
assert parsedJson.Items.parameters.bindLanPorts != null
assert parsedJson.Items.parameters.bindLanPorts[0] == 1
assert parsedJson.Items.parameters.bindLanPorts[1] == 2
assert parsedJson.Items.parameters.bindLanPorts[2] == 3</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="srvId" value="1"/>
  <con:entry key="crmSubCode" value="100002"/>
</con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>srvId</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Delete - DeleteService" id="f8dad4e3-c224-45e5-9f8a-d76b3dc3a81f"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription/{subId}/service/{srvId}" methodName="Delete" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Delete - DeleteService" id="1b406235-c481-45a1-aeed-d4cc36c905a5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request/><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/crmSubCode/issue</con:originalUri><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsResultSuccess"><con:configuration><token>"Result":"Success"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsCrmCode"><con:configuration><token>"Items":null</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="srvId" value="1"/>
  <con:entry key="crmSubCode" value="100002"/>
</con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>srvId</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Create - CreateServiceSCM" id="7330e0d4-6950-4c9b-abb2-e2a657628cc2"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription/{subId}/service" methodName="Create" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Create - CreateServiceSCM" id="1b406235-c481-45a1-aeed-d4cc36c905a5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
  "name":"${newServiceScm}",
  "crmCode": {"${newCrmCodeScm}":"${valueCrmCode}"},
  "parameters": {"type":"${newServiceTypeScm}" }
}
</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/crmSubCode/issue</con:originalUri><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsResultSuccess"><con:configuration><token>"Result":"Success"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsCrmCode"><con:configuration><token>"crmCode":{</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsParameters"><con:configuration><token>"parameters":{</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsSrvId"><con:configuration><token>"srvId":</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsStatus"><con:configuration><token>"status":"active"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsName"><con:configuration><token>"name":"scm"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsTypeTLS"><con:configuration><token>"type":"TLS"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="29ef1abb-18a5-4c07-8823-7e14123483b8" name="ScriptAssertionDataBase"><con:configuration><scriptText>import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import groovy.lang.Binding
import groovy.util.GroovyScriptEngine
import groovy.sql.Sql
import java.sql.ResultSet

//Obtengo el response
def response = messageExchange.response.responseContent

//Parseo el response.
def parsedResponse =  new JsonSlurper().parseText(response)

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

// location of script file is relative to SOAPUI project file.
String scriptPath = groovyUtils.projectPath + "/scripts/"

// Create Groovy Script Engine to run the script.
GroovyScriptEngine gse = new GroovyScriptEngine(scriptPath) 

// Load the Groovy Script file 
externalScript = gse.loadScriptByName("UtilsTest.Groovy")  

// Create a runtime instance of script
instance = externalScript.newInstance()

// Sanity check 
assert instance!= null

log.info("Corriendo script");

def dbDsa  = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbDSA')
def dbHost = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbHost')
def user = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbUser')
def password = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbPass')
def dbPort = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue("dbPort")

// Muestro el path de conexion de la DB
log.info(user + ":" + password + "@" + dbHost + ':' + dbPort + '/' + dbDsa)
log.info(parsedResponse.Items.name)


// run the foo method in the external script
def dsaInstance = instance.getInstanceDB(dbDsa, dbHost, dbPort, user, password, log)

// Get of the response fields
def srvId = parsedResponse.Items.srvId as Integer
def status = parsedResponse.Items.status
def name = parsedResponse.Items.name
def crmCode = parsedResponse.Items.crmCode as String


dsaInstance.query("select ss.service_id, di.status , st.template_name, replace(replace(replace(di.crmCode,'\"\',''),'{','['),'}',']') as newCrmCode from  dummy_instance di , subscription_service ss , subscriptions s, dummy_template dt, service_template st where  di.id = ss.service_id and ss.subscription_id = s.id and di.template_id = dt.id and st.template_id = di.template_id and di.template_id = '2'")
{ ResultSet rs ->
	// Pruebo el primero	
	rs.next()
	
	// Valido el campo service_id
	log.info("service: " + rs.getInt('service_id'))
	assert rs.getInt('service_id') == srvId

	// Valido el campo status
	log.info("status: " + rs.getString('status'))
	assert rs.getString('status') == status

	// Valido el campo template_name
	log.info("template_name: " + rs.getString('template_name'))
	assert rs.getString('template_name') == name

	// Valido el campo template_name
	log.info("newCrmCode: " + rs.getString('newCrmCode'))
	assert rs.getString('newCrmCode') == crmCode
	
	//Valido que no haya mas datos.
	assert !rs.next() 	     
}</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="crmSubCode" value="100002" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:setupScript>import groovy.lang.Binding
import groovy.util.GroovyScriptEngine

def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )

// location of script file is relative to SOAPUI project file.
String scriptPath = groovyUtils.projectPath + "/scripts/"

// Create Groovy Script Engine to run the script.
GroovyScriptEngine gse = new GroovyScriptEngine(scriptPath) 

// Load the Groovy Script file 
externalScript = gse.loadScriptByName("UtilsTest.Groovy")  

// Create a runtime instance of script
instance = externalScript.newInstance()

// Sanity check 
assert instance!= null

//call project properties
def dbDsa = testRunner.testCase.testSuite.project.getPropertyValue("dbDsa")
def dbHost = testRunner.testCase.testSuite.project.getPropertyValue("dbHost")
def user = testRunner.testCase.testSuite.project.getPropertyValue("dbUser")
def password = testRunner.testCase.testSuite.project.getPropertyValue("dbPass")
def dbPort = testRunner.testCase.testSuite.project.getPropertyValue("dbPort")

// run the foo method in the external script
instance.recreateDsaDB(dbDsa,dbHost,dbPort,user,password,log)</con:setupScript><con:properties/><con:reportParameters/></con:testCase><con:testCase id="8a398def-a60f-4d91-98f4-316aee50b5d4" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Test E2E Subscription Suit" searchProperties="true"><con:settings/><con:testStep type="properties" name="setUpProperties" id="31738db2-fadb-4f40-9e51-b280ad9d400f"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>newCrmSubCode</con:name><con:value>100002</con:value></con:property><con:property><con:name>newName</con:name><con:value>Martin Bravo</con:value></con:property><con:property><con:name>reservationId</con:name><con:value>909090</con:value></con:property><con:property><con:name>newDeviceId</con:name><con:value>ZTE01010101010</con:value></con:property><con:property><con:name>activationCode</con:name><con:value>12321321</con:value></con:property><con:property><con:name>removalStatus</con:name><con:value>enabled</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Create - CreateMartinBravoSubscriberShouldReturnOk" id="7f39a5c8-c22b-49ad-91eb-312f499d05ad"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber" methodName="Create" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Create - CreateMartinBravoSubscriberShouldReturnOk" id="7f7c1875-c1ab-4093-8e51-506fd78fc2f0" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
"crmSubCode":"${newCrmSubCode}",
"name":"${newName}"
}
</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber</con:originalUri><con:assertion type="GroovyScriptAssertion" id="1cefb68f-3683-46e1-84fa-bf3643362637" name="ScriptAssertionReturnBodyValidation"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

//Getting response from methods
def ResponseMessage = context.response
def parsedJson = new groovy.json.JsonSlurper().parseText(ResponseMessage)

assert parsedJson.Result == "Success"
assert parsedJson.Display_items == 1
assert parsedJson.Matched_items == 1
assert parsedJson.Error_code == null
assert parsedJson.Items != null
assert parsedJson.Error_str == null
assert parsedJson.Error_str_detail == null
assert parsedJson.Donetime != null

</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="1d7cdadd-e62f-4599-9934-dd2fd1e393ab" name="Script Assertion"><con:configuration><scriptText>//import net.sf.*;
//import net.sf.json.*;
//import net.sf.json.groovy.*;
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import groovy.lang.Binding
import groovy.util.GroovyScriptEngine
import groovy.sql.Sql
import java.sql.ResultSet

//Obtengo el response
def response = messageExchange.response.responseContent

//Parseo el response.
def parsedResponse =  new JsonSlurper().parseText(response)

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

// location of script file is relative to SOAPUI project file.
String scriptPath = groovyUtils.projectPath + "/scripts/"

// Create Groovy Script Engine to run the script.
GroovyScriptEngine gse = new GroovyScriptEngine(scriptPath) 

// Load the Groovy Script file 
externalScript = gse.loadScriptByName("UtilsTest.Groovy")  

// Create a runtime instance of script
instance = externalScript.newInstance()

// Sanity check 
assert instance!= null

log.info("Corriendo script");

def dbDsa  = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbDSA')
def dbHost = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbHost')
def user = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbUser')
def password = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbPass')
def dbPort = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue("dbPort")

// Muestro el path de conexion de la DB
log.info(user + ":" + password + "@" + dbHost + ':' + dbPort + '/' + dbDsa)
log.info(parsedResponse.Items.name)


// run the foo method in the external script
def dsaInstance = instance.getInstanceDB(dbDsa, dbHost, dbPort, user, password, log)

// Get of the response the name and crmSubCode fields
def name = parsedResponse.Items.name
// Convert field crmSubCode to Int.
def crmSubCode = parsedResponse.Items.crmSubCode

dsaInstance.query("SELECT * FROM subscribers;"){ ResultSet rs ->
	// Pruebo el primero	
	rs.next()
	
	// Valido el campo name
	log.info("name: " + rs.getString('name'))
	assert rs.getString('name') == name

	// Valido el campo number == crmSubCode en response.
	log.info("number: " + rs.getString('number'))
	assert rs.getString('number') == crmSubCode

	
	//Valido que no haya mas datos.
	assert !rs.next() 	     
}

</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="crmSubCodeTransfer" id="aaf1843d-e059-41e6-abd7-e5ea3b688d2e"><con:settings/><con:config><script>import groovy.json.JsonSlurper

crmSubCode = new JsonSlurper().parseText(testRunner.testCase.getTestStepByName('Create - CreateMartinBravoSubscriberShouldReturnOk').properties.Response.value).Items.crmSubCode.toString()

testRunner.testCase.getTestStepByName('Create - CreateMartinBravoSubscriptionShouldReturnOk').setPropertyValue('crmSubCode', crmSubCode)
testRunner.testCase.getTestStepByName('Get - GetTheMartinBravoPendindSubscriptionShouldReturnOk').setPropertyValue('crmSubCode', crmSubCode)
testRunner.testCase.getTestStepByName('CreateRapairOrderMartinBravoWithoutSubscriptionActiveShouldReturnFail').setPropertyValue('crmSubCode', crmSubCode)
testRunner.testCase.getTestStepByName('Asign device - ActiveSubscriptionShouldReturnOk').setPropertyValue('crmSubCode', crmSubCode)
testRunner.testCase.getTestStepByName('Create - CreateRemovalIssueShouldReturnOk').setPropertyValue('crmSubCode', crmSubCode)

context.crmSubCode = crmSubCode</script></con:config></con:testStep><con:testStep type="restrequest" name="Create - CreateMartinBravoSubscriptionShouldReturnOk" id="d3d23f74-834d-4a33-ae48-3986b155d413"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription" methodName="Create" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Create - CreateMartinBravoSubscriptionShouldReturnOk" id="e6e08620-df5b-479e-9e4b-84acb7330e05" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
  "reservationId": "${reservationId}"
}
</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription</con:originalUri><con:assertion type="GroovyScriptAssertion" id="e5c774be-d7b8-49a0-90bf-76b26a3d458b" name="ScriptAssertionReturnBodyValidation"><con:configuration><scriptText>import groovy.json.JsonSlurper

//Obtengo el response
def response = messageExchange.response.responseContent

//Obtengo el Header response
def headers = messageExchange.response.responseHeaders

//Parseo el response.
def parsedResponse =  new JsonSlurper().parseText(response)

//Defino el resultado actual y esperado del Header.
def expectedHTTPResponse = ['HTTP/1.1 200 OK']
def actualHTTPResponse = headers['#status#']

// asserting that the response is equal to expected response.
assert parsedResponse.Result == 'Success'
assert parsedResponse.Items.activationCode.code != null 
assert parsedResponse.Items.activationCode.expirationDate != null
assert parsedResponse.Items.activationCode.active != null
assert parsedResponse.Display_items == 1
assert parsedResponse.Matched_items == 1
assert parsedResponse.Error_code == null
assert parsedResponse.Error_str == null
assert parsedResponse.Error_str_detail == null
assert expectedHTTPResponse == actualHTTPResponse

log.info("Validaciones OK")
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="56c0b7d1-fca5-48ff-967f-8c1c2864f8a6" name="ScriptAssertionDataBase"><con:configuration><scriptText>//import net.sf.*;
//import net.sf.json.*;
//import net.sf.json.groovy.*;
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import groovy.lang.Binding
import groovy.util.GroovyScriptEngine
import groovy.sql.Sql
import java.sql.ResultSet

//Get to response
def response = messageExchange.response.responseContent

//Parsed to response
def parsedResponse =  new JsonSlurper().parseText(response)

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

// location of script file is relative to SOAPUI project file.
String scriptPath = groovyUtils.projectPath + "/scripts/"

// Create Groovy Script Engine to run the script.
GroovyScriptEngine gse = new GroovyScriptEngine(scriptPath) 

// Load the Groovy Script file 
externalScript = gse.loadScriptByName("UtilsTest.Groovy")  

// Create a runtime instance of script
instance = externalScript.newInstance()

// Sanity check 
assert instance!= null

log.info("Corriendo script");

def dbDsa  = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbDSA')
def dbHost = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbHost')
def user = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbUser')
def password = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('dbPass')
def dbPort = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue("dbPort")

// Muestro el path de conexion de la DB
log.info(user + ":" + password + "@" + dbHost + ':' + dbPort + '/' + dbDsa)

// run the foo method in the external script
def dsaInstance = instance.getInstanceDB(dbDsa, dbHost, dbPort, user, password, log)

// Get of the response the code field
def codeResponse = parsedResponse.Items.activationCode.code

dsaInstance.query("select * from activation_code ac, subscriptions s where ac.subscription_id = s.id;"){ ResultSet rs ->
	// Pruebo el primero	
	rs.next()
	
	// Valido el campo code
	log.info("code: " + rs.getString('code'))
	assert rs.getString('code') == codeResponse
	
	//Valido que no haya mas datos.
	assert !rs.next() 	     
}</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="crmSubCode" value="100002" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="subIdTransfer" id="ce1a8e0f-cb6b-41f8-a5e1-f9682fa53e3c"><con:settings/><con:config><script>import groovy.json.JsonSlurper

subId = new JsonSlurper().parseText(testRunner.testCase.getTestStepByName('Create - CreateMartinBravoSubscriptionShouldReturnOk').properties.Response.value).Items.subId.toString()

testRunner.testCase.getTestStepByName('Get - GetTheMartinBravoPendindSubscriptionShouldReturnOk').setPropertyValue('subId', subId)
testRunner.testCase.getTestStepByName('CreateRapairOrderMartinBravoWithoutSubscriptionActiveShouldReturnFail').setPropertyValue('subId', subId)
testRunner.testCase.getTestStepByName('Asign device - ActiveSubscriptionShouldReturnOk').setPropertyValue('subId', subId)
testRunner.testCase.getTestStepByName('Create - CreateRemovalIssueShouldReturnOk').setPropertyValue('subId', subId)

context.subId = subId</script></con:config></con:testStep><con:testStep type="restrequest" name="Get - GetTheMartinBravoPendindSubscriptionShouldReturnOk" id="ae240479-a581-454e-b643-110e861c3742"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription/{subId}" methodName="Get" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get - GetTheMartinBravoPendindSubscriptionShouldReturnOk" id="e6e08620-df5b-479e-9e4b-84acb7330e05" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
  "reservationId": "909090"
}
</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription</con:originalUri><con:assertion type="Simple Contains" id="8d8c9c7f-ef4a-42ab-9873-eb4fc41dae3e" name="ContainResultSuccess"><con:configuration><token>Result":"Success"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="8d8c9c7f-ef4a-42ab-9873-eb4fc41dae3e" name="ContainReservation"><con:configuration><token>"reservationId":"909090"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="d6b472a0-c247-431a-a19a-f5d97f0b89c1" name="ContainsActivationCode"><con:configuration><token>"activationCode":{</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="4126791b-1e2a-4f53-ba9f-acd08541cf46" name="ContainsStatusPending"><con:configuration><token>"status":"pending"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="3c8bce5d-0902-4f7e-a7b8-2b1d9688cc68" name="ContainsSubId"><con:configuration><token>"subId":1</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="53cc75ae-0614-4511-a589-2c8fb6ffa293" name="Contains active:true"><con:configuration><token>"active":true</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="crmSubCode" value="100002" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="CreateRapairOrderMartinBravoWithoutSubscriptionActiveShouldReturnFail" id="fe5e4956-9988-4ba0-9c81-bd85162f4438"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription/{subId}/issue" methodName="Create" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateRapairOrderMartinBravoWithoutSubscriptionActiveShouldReturnFail" id="e6e08620-df5b-479e-9e4b-84acb7330e05" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
  "reservationId": "${reservationId}"
}
</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription</con:originalUri><con:assertion type="Simple Contains" id="8d8c9c7f-ef4a-42ab-9873-eb4fc41dae3e" name="ContainResultSuccess"><con:configuration><token>Result":"Failure"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="8d8c9c7f-ef4a-42ab-9873-eb4fc41dae3e" name="ContainErrorLabel"><con:configuration><token>"Error_str":"Estado de suscripcion incorrecto"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="4126791b-1e2a-4f53-ba9f-acd08541cf46" name="ContainsError405"><con:configuration><token>"Error_code":405</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="2492f6e8-b4f0-4fb6-9251-16ee3d9c51a3" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

//Getting response from methods
def ResponseMessage = context.response
def parsedJson = new groovy.json.JsonSlurper().parseText(ResponseMessage)

assert parsedJson.Result == "Failure"
assert parsedJson.Display_items == 0
assert parsedJson.Matched_items == 0
assert parsedJson.Error_code == 405
assert parsedJson.Items == null
assert parsedJson.Error_str != null
assert parsedJson.Error_str_detail != null
assert parsedJson.Donetime != null</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="crmSubCode" value="100002" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Asign device - ActiveSubscriptionShouldReturnOk" id="57be6195-e907-469c-9bde-de1de025618b"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription/{subId}/device" methodName="Asign device" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Asign device - ActiveSubscriptionShouldReturnOk" id="1b406235-c481-45a1-aeed-d4cc36c905a5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
  "id" : "${newDeviceId}",
  "activationCode": "${activationCode}"
}</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/crmSubCode/issue</con:originalUri><con:assertion type="Invalid HTTP Status Codes" id="86dca399-dfce-4b99-859e-f4218a9ebcd0" name="Invalid HTTP Status Codes"><con:configuration><codes>HTTP/1.1 200 OK</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="407a7093-227a-49e2-bb65-9f602f7fae9b" name="ScriptAssertionReturnBodyValidation"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

//Getting response from methods
def ResponseMessage = context.response
def parsedJson = new groovy.json.JsonSlurper().parseText(ResponseMessage)

assert parsedJson.Result == "Success"
assert parsedJson.Display_items == 1
assert parsedJson.Matched_items == 1
assert parsedJson.Error_code == null
assert parsedJson.Items != null
assert parsedJson.Error_str == null
assert parsedJson.Error_str_detail == null
assert parsedJson.Donetime != null
</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="crmSubCode" value="100002" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Create - CreateRemovalIssueShouldReturnOk" id="d181eb99-f60a-472c-92fb-92d03e195425"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription/{subId}/removal" methodName="Put" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Create - CreateRemovalIssueShouldReturnOk" id="1b406235-c481-45a1-aeed-d4cc36c905a5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
  "removal"  : "${removalStatus}"
}</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/crmSubCode/issue</con:originalUri><con:assertion type="Simple Contains" id="b384f197-70cc-4289-be15-df2a2246e7d9" name="Contains"><con:configuration><token>"Result":"Success"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="94fcb50e-70ed-4553-bbbf-b9e0d2cb2f1d" name="ScriptAssertionReturnBodyValidation"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

//Getting response from methods
def ResponseMessage = context.response
def parsedJson = new groovy.json.JsonSlurper().parseText(ResponseMessage)

assert parsedJson.Result == "Success"
assert parsedJson.Display_items == 1
assert parsedJson.Matched_items == 1
assert parsedJson.Error_code == null
assert parsedJson.Items != null
assert parsedJson.Error_str == null
assert parsedJson.Error_str_detail == null
assert parsedJson.Donetime != null

</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="crmSubCode" value="100002" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Create - CreateRemovalIssueWhenAnotherOneAlreadyExistsShouldReturnOk" id="cdfc34b4-5bf2-4c89-a716-b0f8ae770893" disabled="true"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription/{subId}/removal" methodName="Put" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Create - CreateRemovalIssueWhenAnotherOneAlreadyExistsShouldReturnOk" id="1b406235-c481-45a1-aeed-d4cc36c905a5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
  "removal"  : "enabled"
}</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/crmSubCode/issue</con:originalUri><con:assertion type="Simple Contains" id="fbcebd3b-589b-4104-9f8d-054666af6205" name="Contains"><con:configuration><token>"Result":"Success"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="subId" value="1"/>
  <con:entry key="crmSubCode" value="100002"/>
</con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Get - GetIssuesShouldMatchedOne" id="9bb5e613-34dc-4278-8bbf-0f526f7ddcc9" disabled="true"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription/{subId}/issue" methodName="Get" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get - GetIssuesShouldMatchedOne" id="1b406235-c481-45a1-aeed-d4cc36c905a5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request/><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/crmSubCode/issue</con:originalUri><con:assertion type="Simple Contains" id="83ebd6f7-7c20-4273-914e-1cba2d22d999" name="Contains"><con:configuration><token>"Result":"Success"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="dfd707a8-f994-4487-a6fa-c2d93eb14263" name="Matched Items"><con:configuration><token>"Matched_items":1</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="subId" value="1"/>
  <con:entry key="crmSubCode" value="100002"/>
</con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Delete - DeleteRemovalIssueShouldReturnOk" id="f2d18732-63c9-4822-b5fe-bf5ea0eccd72" disabled="true"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription/{subId}/removal" methodName="Put" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Delete - DeleteRemovalIssueShouldReturnOk" id="1b406235-c481-45a1-aeed-d4cc36c905a5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
  "removal"  : "disabled"
}</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/crmSubCode/issue</con:originalUri><con:assertion type="Simple Contains" id="b5c00d12-2c87-4b02-bc7a-e182878ca239" name="Contains"><con:configuration><token>"Result":"Success"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="subId" value="1"/>
  <con:entry key="crmSubCode" value="100002"/>
</con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Get - GetIssuesShouldNotMatchedOne" id="f0479eb5-7931-43e6-9ceb-a1db01f19503" disabled="true"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription/{subId}/issue" methodName="Get" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get - GetIssuesShouldNotMatchedOne" id="1b406235-c481-45a1-aeed-d4cc36c905a5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request/><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/crmSubCode/issue</con:originalUri><con:assertion type="Simple Contains" id="83ebd6f7-7c20-4273-914e-1cba2d22d999" name="Contains"><con:configuration><token>"Result":"Success"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="dfd707a8-f994-4487-a6fa-c2d93eb14263" name="Matched Items"><con:configuration><token>"Matched_items":0</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="subId" value="1"/>
  <con:entry key="crmSubCode" value="100002"/>
</con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Create - CreateChangeDeviceIssueShouldReturnOk" id="8bd12a5b-3fb2-45a9-98b0-15b78a4c091f" disabled="true"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription/{subId}/issue" methodName="Create" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Create - CreateChangeDeviceIssueShouldReturnOk" id="1b406235-c481-45a1-aeed-d4cc36c905a5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request/><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/crmSubCode/issue</con:originalUri><con:assertion type="Simple Contains" id="420c7a85-6092-4b06-ba71-334a7889826e" name="Contains"><con:configuration><token>"Result":"Success"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="crmSubCode" value="100002" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Create - CreateChangeDeviceIssueWhenAnotherOneAlreadyExistsShouldReturnOk" id="372fcfa2-9c8e-4a76-a967-d5f3183eed81" disabled="true"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription/{subId}/issue" methodName="Create" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Create - CreateChangeDeviceIssueWhenAnotherOneAlreadyExistsShouldReturnOk" id="1b406235-c481-45a1-aeed-d4cc36c905a5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request/><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/crmSubCode/issue</con:originalUri><con:assertion type="Simple Contains" id="f491a16b-ee03-42b9-bf36-fbd374c17fac" name="Contains"><con:configuration><token>"Result":"Success"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="crmSubCode" value="100002" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GetIssuesShouldMatchedOne" id="35206ecc-ed17-4dd9-bfe2-7d13547f0a66" disabled="true"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription/{subId}/issue" methodName="Get" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GetIssuesShouldMatchedOne" id="1b406235-c481-45a1-aeed-d4cc36c905a5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request/><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/crmSubCode/issue</con:originalUri><con:assertion type="Simple Contains" id="83ebd6f7-7c20-4273-914e-1cba2d22d999" name="Contains"><con:configuration><token>"Result":"Success"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="dfd707a8-f994-4487-a6fa-c2d93eb14263" name="Matched Items"><con:configuration><token>"Matched_items":1</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="subId" value="1"/>
  <con:entry key="crmSubCode" value="100002"/>
</con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Delete - DeleteChangeDeviceIssueShouldReturnOk" id="b21551f7-2d5c-4888-b6e6-42b99f9c9d8e" disabled="true"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription/{subId}/issue" methodName="Delete" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Delete - DeleteChangeDeviceIssueShouldReturnOk" id="1b406235-c481-45a1-aeed-d4cc36c905a5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request/><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/crmSubCode/issue</con:originalUri><con:assertion type="Simple Contains" id="05d44e68-8228-42cf-9a5f-181767701166" name="Contains"><con:configuration><token>"Result":"Success"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="subId" value="1"/>
  <con:entry key="crmSubCode" value="100002"/>
</con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GetIssuesShouldNotMatchedOne" id="678d167e-1f71-4637-b12d-e929c2a5290f" disabled="true"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription/{subId}/issue" methodName="Get" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GetIssuesShouldNotMatchedOne" id="1b406235-c481-45a1-aeed-d4cc36c905a5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request/><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/crmSubCode/issue</con:originalUri><con:assertion type="Simple Contains" id="83ebd6f7-7c20-4273-914e-1cba2d22d999" name="Contains"><con:configuration><token>"Result":"Success"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="dfd707a8-f994-4487-a6fa-c2d93eb14263" name="Matched Items"><con:configuration><token>"Matched_items":0</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="subId" value="1"/>
  <con:entry key="crmSubCode" value="100002"/>
</con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Get - GetTheMartinBravoActiveSubscriptionShouldReturnOk" id="348b12be-8f41-4c61-8208-9c8169075a8a" disabled="true"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription/{subId}" methodName="Get" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get - GetTheMartinBravoActiveSubscriptionShouldReturnOk" id="e6e08620-df5b-479e-9e4b-84acb7330e05" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
  "reservationId": "909090"
}
</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription</con:originalUri><con:assertion type="Simple Contains" id="8d8c9c7f-ef4a-42ab-9873-eb4fc41dae3e" name="ContainResultSuccess"><con:configuration><token>Result":"Success"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="8d8c9c7f-ef4a-42ab-9873-eb4fc41dae3e" name="ContainReservation"><con:configuration><token>"reservationId":"909090"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="4126791b-1e2a-4f53-ba9f-acd08541cf46" name="ContainsStatusActive"><con:configuration><token>"status":"active"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="3c8bce5d-0902-4f7e-a7b8-2b1d9688cc68" name="ContainsSubId"><con:configuration><token>"subId":1</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple NotContains" id="16f3fe97-a944-4552-aee6-8ffa1972c9aa" name="Not Contains &quot;active&quot;:true"><con:configuration><token>"active":true</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="b61e7277-3aac-48ba-92b6-a445ee6b43dd" name="Contains ActivationCode in null"><con:configuration><token>"activationCode":null</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="crmSubCode" value="100002" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="CreateRapairOrderMartinBravoSubscriptionShouldReturnOk" id="609cb839-c984-4c3e-bda7-3d3e38530fcf" disabled="true"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription/{subId}/issue" methodName="Create" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateRapairOrderMartinBravoSubscriptionShouldReturnOk" id="e6e08620-df5b-479e-9e4b-84acb7330e05" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request/><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription</con:originalUri><con:assertion type="Simple Contains" id="8d8c9c7f-ef4a-42ab-9873-eb4fc41dae3e" name="ContainResultSuccess"><con:configuration><token>Result":"Success"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="8d8c9c7f-ef4a-42ab-9873-eb4fc41dae3e" name="ContainReservation"><con:configuration><token>"Items":{</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="d6b472a0-c247-431a-a19a-f5d97f0b89c1" name="ContainsActivationCode"><con:configuration><token>"activationCode":{</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="4126791b-1e2a-4f53-ba9f-acd08541cf46" name="ContainsActiveTrue"><con:configuration><token>"active":true</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="73847ed7-91dc-492c-b7e0-6c098a869f43" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

//Getting response from methods
def ResponseMessage = context.response
def parsedJson = new groovy.json.JsonSlurper().parseText(ResponseMessage)

assert parsedJson.Result == "Success"
assert parsedJson.Display_items == 1
assert parsedJson.Matched_items == 1
assert parsedJson.Error_code == null
assert parsedJson.Items != null
assert parsedJson.Items.activationCode != null
assert parsedJson.Items.activationCode.code != null
assert parsedJson.Items.activationCode.active != null
assert parsedJson.Items.activationCode.expirationDate != null
assert parsedJson.Error_str == null
assert parsedJson.Error_str_detail == null
assert parsedJson.Donetime != null</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="crmSubCode" value="100002" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GetRapairOrderMartinBravoSubscriptionShouldReturnOk" id="130e16bd-e909-4de5-a118-3b86b45f6944" disabled="true"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription/{subId}/issue" methodName="Get" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GetRapairOrderMartinBravoSubscriptionShouldReturnOk" id="e6e08620-df5b-479e-9e4b-84acb7330e05" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
  "reservationId": "909090"
}
</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription</con:originalUri><con:assertion type="Simple Contains" id="8d8c9c7f-ef4a-42ab-9873-eb4fc41dae3e" name="ContainResultSuccess"><con:configuration><token>Result":"Success"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="8d8c9c7f-ef4a-42ab-9873-eb4fc41dae3e" name="ContainReservation"><con:configuration><token>"Items":{</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="d6b472a0-c247-431a-a19a-f5d97f0b89c1" name="ContainsActivationCode"><con:configuration><token>"activationCode":{</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="4126791b-1e2a-4f53-ba9f-acd08541cf46" name="ContainsActiveTrue"><con:configuration><token>"active":true</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="b9cc8d4e-5b90-43bd-9ec5-18865b3422b5" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

//Getting response from methods
def ResponseMessage = context.response
def parsedJson = new groovy.json.JsonSlurper().parseText(ResponseMessage)

assert parsedJson.Result == "Success"
assert parsedJson.Display_items == 1
assert parsedJson.Matched_items == 1
assert parsedJson.Error_code == null
assert parsedJson.Items != null
assert parsedJson.Items.activationCode != null
assert parsedJson.Items.activationCode.code != null
assert parsedJson.Items.activationCode.active != null
assert parsedJson.Items.activationCode.expirationDate != null
assert parsedJson.Error_str == null
assert parsedJson.Error_str_detail == null
assert parsedJson.Donetime != null</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="crmSubCode" value="100002" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GetActivationCodeMartinBravoSubscriptionShouldReturnOk" id="9dc1eb37-d0f5-498c-9a51-ff261f5352b3" disabled="true"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription/{subId}/activationcode" methodName="Get" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GetActivationCodeMartinBravoSubscriptionShouldReturnOk" id="e6e08620-df5b-479e-9e4b-84acb7330e05" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
  "reservationId": "909090"
}
</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription</con:originalUri><con:assertion type="Simple Contains" id="8d8c9c7f-ef4a-42ab-9873-eb4fc41dae3e" name="ContainResultSuccess"><con:configuration><token>Result":"Success"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="8d8c9c7f-ef4a-42ab-9873-eb4fc41dae3e" name="ContainItemsNull"><con:configuration><token>"Items":{</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="765bd333-b78b-4da4-a6fb-cd1602455aa6" name="ContainsActiveTrue"><con:configuration><token>"active":true</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="f95a8dd9-4749-4673-add1-951c39bbfa51" name="ContainsCode"><con:configuration><token>"code"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="d04b9b8f-9690-4b75-a452-92f71c19f01e" name="ContainsExpirationDate"><con:configuration><token>"expirationDate"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="crmSubCode" value="100002" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="UpdateActivationCodeMartinBravoSubscriptionShouldReturnOk" id="a5e42c1f-34a9-4277-8e09-8513f13eb7d6" disabled="true"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription/{subId}/activationcode" methodName="Update" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UpdateActivationCodeMartinBravoSubscriptionShouldReturnOk" id="e6e08620-df5b-479e-9e4b-84acb7330e05" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
  "reservationId": "909090"
}
</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription</con:originalUri><con:assertion type="Simple Contains" id="8d8c9c7f-ef4a-42ab-9873-eb4fc41dae3e" name="ContainResultSuccess"><con:configuration><token>Result":"Success"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="8d8c9c7f-ef4a-42ab-9873-eb4fc41dae3e" name="ContainItemsNull"><con:configuration><token>"Items":{</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="765bd333-b78b-4da4-a6fb-cd1602455aa6" name="ContainsActiveTrue"><con:configuration><token>"active":true</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="f95a8dd9-4749-4673-add1-951c39bbfa51" name="ContainsCode"><con:configuration><token>"code"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="d04b9b8f-9690-4b75-a452-92f71c19f01e" name="ContainsExpirationDate"><con:configuration><token>"expirationDate"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="crmSubCode" value="100002" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="RemoveRapairOrderMartinBravoSubscriptionShouldReturnOk" id="f57209c6-de8f-40a3-bc62-ed49f7aebf57" disabled="true"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription/{subId}/issue" methodName="Delete" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="RemoveRapairOrderMartinBravoSubscriptionShouldReturnOk" id="e6e08620-df5b-479e-9e4b-84acb7330e05" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
  "reservationId": "909090"
}
</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription</con:originalUri><con:assertion type="Simple Contains" id="8d8c9c7f-ef4a-42ab-9873-eb4fc41dae3e" name="ContainResultSuccess"><con:configuration><token>Result":"Success"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="8d8c9c7f-ef4a-42ab-9873-eb4fc41dae3e" name="ContainItemsNull"><con:configuration><token>"Items":null</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="5a2aece1-8ffa-41fc-bf54-20084ddb6d20" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

//Getting response from methods
def ResponseMessage = context.response
def parsedJson = new groovy.json.JsonSlurper().parseText(ResponseMessage)

assert parsedJson.Result == "Success"
assert parsedJson.Display_items == 0
assert parsedJson.Matched_items == 1
assert parsedJson.Error_code == null
assert parsedJson.Items == null
assert parsedJson.Error_str == null
assert parsedJson.Error_str_detail == null
assert parsedJson.Donetime != null
</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="crmSubCode" value="100002" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GetAnActivationCodeMartinBravoSubscriptionShouldReturnFailure" id="67923343-bf44-4147-b218-907b4691610e" disabled="true"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription/{subId}/activationcode" methodName="Get" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GetAnActivationCodeMartinBravoSubscriptionShouldReturnFailure" id="e6e08620-df5b-479e-9e4b-84acb7330e05" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
  "reservationId": "909090"
}
</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription</con:originalUri><con:assertion type="Simple Contains" id="8d8c9c7f-ef4a-42ab-9873-eb4fc41dae3e" name="ContainResultSuccess"><con:configuration><token>Result":"Failure"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="8d8c9c7f-ef4a-42ab-9873-eb4fc41dae3e" name="ContainItemsNull"><con:configuration><token>"Items":null</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="5a6b9721-95b6-449e-bbaf-addc7711955a" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

//Getting response from methods
def ResponseMessage = context.response
def parsedJson = new groovy.json.JsonSlurper().parseText(ResponseMessage)

assert parsedJson.Result == "Failure"
assert parsedJson.Display_items == 0
assert parsedJson.Matched_items == 0
assert parsedJson.Error_code == 432
assert parsedJson.Items == null
assert parsedJson.Error_str != null
assert parsedJson.Error_str_detail != null
assert parsedJson.Donetime != null</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="crmSubCode" value="100002" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GetDeviceMartinBravoSubscriptionShouldReturnOk" id="edbdb8ff-9643-45cc-ba8c-b2e6bc3d752d" disabled="true"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription/{subId}/device" methodName="Get" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GetDeviceMartinBravoSubscriptionShouldReturnOk" id="e6e08620-df5b-479e-9e4b-84acb7330e05" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
  "reservationId": "909090"
}
</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription</con:originalUri><con:assertion type="Simple Contains" id="8d8c9c7f-ef4a-42ab-9873-eb4fc41dae3e" name="ContainResultSuccess"><con:configuration><token>Result":"Success"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="8d8c9c7f-ef4a-42ab-9873-eb4fc41dae3e" name="ContainItemsNull"><con:configuration><token>"Items":{</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="d04b9b8f-9690-4b75-a452-92f71c19f01e" name="ContainsExpirationDate"><con:configuration><token>"Items":{"id":</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="dae938ca-bbfd-4cc9-9134-ca1f9ae668b8" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

//Getting response from methods
def ResponseMessage = context.response
def parsedJson = new groovy.json.JsonSlurper().parseText(ResponseMessage)

assert parsedJson.Result == "Success"
assert parsedJson.Display_items == 1
assert parsedJson.Matched_items == 1
assert parsedJson.Error_code == null
assert parsedJson.Items != null
assert parsedJson.Items.id == 'ZTE01010101010'
assert parsedJson.Error_str == null
assert parsedJson.Error_str_detail == null
assert parsedJson.Donetime != null
</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="crmSubCode" value="100002" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="UpdateMartinBravoSubscriptionShouldReturnOk" id="ee8f86c9-8644-4f3c-b847-1a50db70e5f5" disabled="true"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription/{subId}" methodName="Update" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UpdateMartinBravoSubscriptionShouldReturnOk" id="e6e08620-df5b-479e-9e4b-84acb7330e05" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
  "reservationId": "909091"
}
</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription</con:originalUri><con:assertion type="Simple Contains" id="8d8c9c7f-ef4a-42ab-9873-eb4fc41dae3e" name="ContainResultSuccess"><con:configuration><token>Result":"Success"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="8d8c9c7f-ef4a-42ab-9873-eb4fc41dae3e" name="ContainItemsNull"><con:configuration><token>"Items":{</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="d04b9b8f-9690-4b75-a452-92f71c19f01e" name="ContainsExpirationDate"><con:configuration><token>"Items":{</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="3a4bd43b-88f9-4ee2-a430-312423097889" name="ContainsSubId"><con:configuration><token>"subId":</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="3a4bd43b-88f9-4ee2-a430-312423097889" name="ContainsStatus"><con:configuration><token>"status":"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="3a4bd43b-88f9-4ee2-a430-312423097889" name="ContainsActivationCode"><con:configuration><token>"activationCode":null</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="3a4bd43b-88f9-4ee2-a430-312423097889" name="ContainsReservationId"><con:configuration><token>"reservationId":</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="crmSubCode" value="100002" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="RemovelUpdateSubscription" id="772ae7e4-ee05-45ea-a244-d3e97621ea38" disabled="true"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription/{subId}/removal" methodName="Put" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="RemovelUpdateSubscription" id="1b406235-c481-45a1-aeed-d4cc36c905a5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
  "removal"  : "enabled"
}</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/crmSubCode/issue</con:originalUri><con:assertion type="Simple Contains" id="9c5a1a9f-2aaa-4ff8-96c2-6915fd213f76" name="ContainsResultSuccess"><con:configuration><token>Result":"Success"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="3c46729a-9b24-439d-a385-719dbfa75906" name="ContainsRemovalEnable"><con:configuration><token>"removal":"enabled"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="subId" value="1"/>
  <con:entry key="crmSubCode" value="100002"/>
</con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteMartinBravoSubscriptionShouldReturnOk" id="49c8cf19-4aa3-41b2-adcd-c47990663333" disabled="true"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription/{subId}" methodName="Delete" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteMartinBravoSubscriptionShouldReturnOk" id="e6e08620-df5b-479e-9e4b-84acb7330e05" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request/><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription</con:originalUri><con:assertion type="Simple Contains" id="8d8c9c7f-ef4a-42ab-9873-eb4fc41dae3e" name="ContainResultSuccess"><con:configuration><token>Result":"Success"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="8d8c9c7f-ef4a-42ab-9873-eb4fc41dae3e" name="ContainItemsNull"><con:configuration><token>"Items":null</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="crmSubCode" value="100002" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:setupScript>import groovy.lang.Binding
import groovy.util.GroovyScriptEngine

def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )

// location of script file is relative to SOAPUI project file.
String scriptPath = groovyUtils.projectPath + "/scripts/"

// Create Groovy Script Engine to run the script.
GroovyScriptEngine gse = new GroovyScriptEngine(scriptPath) 

// Load the Groovy Script file 
externalScript = gse.loadScriptByName("UtilsTest.Groovy")  

// Create a runtime instance of script
instance = externalScript.newInstance()

// Sanity check 
assert instance!= null

//call project properties
def dbDsa = testRunner.testCase.testSuite.project.getPropertyValue("dbDsa")
def dbHost = testRunner.testCase.testSuite.project.getPropertyValue("dbHost")
def user = testRunner.testCase.testSuite.project.getPropertyValue("dbUser")
def password = testRunner.testCase.testSuite.project.getPropertyValue("dbPass")
def dbPort = testRunner.testCase.testSuite.project.getPropertyValue("dbPort")

// run the foo method in the external script
instance.recreateDsaDB(dbDsa,dbHost,dbPort,user,password,log)</con:setupScript><con:properties/><con:reportParameters/></con:testCase><con:testCase id="6a9d5b7e-28c8-4158-a281-d65bc145cbbf" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Test E2E Error Cases" searchProperties="true" disabled="true"><con:settings/><con:testStep type="restrequest" name="Get - GetMartinBravoSubscriberShouldReturnHisInfoError" id="b94f866b-9086-4081-989f-9d3db3989e21"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}" methodName="Get" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get - GetMartinBravoSubscriberShouldReturnHisInfoError" id="7f7c1875-c1ab-4093-8e51-506fd78fc2f0" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request/><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber</con:originalUri><con:assertion type="Simple Contains" id="b6abe90b-2082-40ad-835e-f2c5d4b5fc1a" name="ContainResultSuccess"><con:configuration><token>Result":"Failure"</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="b6abe90b-2082-40ad-835e-f2c5d4b5fc1a" name="ContainSubscriberName"><con:configuration><token>"Items":null</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="b6abe90b-2082-40ad-835e-f2c5d4b5fc1a" name="ContainSubscriberNumber"><con:configuration><token>"Error_str":"Item not found"</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="c5baa01d-e254-4a14-9136-b922a588414d" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

//Getting response from methods
def ResponseMessage = context.response
def parsedJson = new groovy.json.JsonSlurper().parseText(ResponseMessage)

assert parsedJson.Result == "Failure"
assert parsedJson.Display_items == 0
assert parsedJson.Matched_items == 0
assert parsedJson.Error_code == 404
assert parsedJson.Items == null
assert parsedJson.Error_str == "Item not found"
assert parsedJson.Error_str_detail == "The subscriber 100002 not exists"
assert parsedJson.Donetime != null</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="crmSubCode" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Get - GetTheMartinBravoActiveSubscriptionShouldReturn Error Subscriber" id="52a77c26-2882-4fbe-8e50-d3907647364e"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription/{subId}" methodName="Get" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get - GetTheMartinBravoActiveSubscriptionShouldReturn Error Subscriber" id="e6e08620-df5b-479e-9e4b-84acb7330e05" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
  "reservationId": "909090"
}
</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription</con:originalUri><con:assertion type="Simple Contains" id="8d8c9c7f-ef4a-42ab-9873-eb4fc41dae3e" name="ContainResultSuccess"><con:configuration><token>Result":"Failure"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="4f2ad6c9-2772-485a-858b-66db06aebbc9" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

//Getting response from methods
def ResponseMessage = context.response
def parsedJson = new groovy.json.JsonSlurper().parseText(ResponseMessage)

assert parsedJson.Result == "Failure"
assert parsedJson.Display_items == 0
assert parsedJson.Matched_items == 0
assert parsedJson.Error_code == 414
assert parsedJson.Items == null
assert parsedJson.Error_str == "Item not found"
assert parsedJson.Error_str_detail == "The subscriber 100002 not exists"
assert parsedJson.Donetime != null</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="crmSubCode" value="100002" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Get - GetService Error susbcriber not exists" id="0c4abced-7785-4e21-b866-4a3d20f59573"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription/{subId}/service/{srvId}" methodName="Get" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get - GetService Error susbcriber not exists" id="1b406235-c481-45a1-aeed-d4cc36c905a5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
  "name":"hsi",
  "crmCode": {"idSuscripcion":"99999"},
  "parameters": {"maxCpe":90 }
}
</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/crmSubCode/issue</con:originalUri><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsResultFailure"><con:configuration><token>"Result":"Failure"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsName"><con:configuration><token>"Error_str_detail":"The subscriber 100002 not exists"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="94a0058e-8999-4cd5-8835-c8ab27035e62" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

//Getting response from methods
def ResponseMessage = context.response
def parsedJson = new groovy.json.JsonSlurper().parseText(ResponseMessage)

assert parsedJson.Result == "Failure"
assert parsedJson.Display_items == 0
assert parsedJson.Matched_items == 0
assert parsedJson.Error_code == 410
assert parsedJson.Items == null
assert parsedJson.Error_str == "Item not found"
assert parsedJson.Error_str_detail == "The subscriber 100002 not exists"
assert parsedJson.Donetime != null</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="srvId" value="1"/>
  <con:entry key="crmSubCode" value="100002"/>
</con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>srvId</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Get -  Open Issues Failure" id="d43d38b4-a580-49a0-8e85-1d66e0efc781"><con:settings/><con:config service="http://10.0.0.100:8080" methodName="Get" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription/{subId}/issue" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get -  Open Issues Failure" id="c7372697-7922-4c19-8c02-0cc9db184620" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request/><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v1.0/subscriber/100002/subscription/1/issue</con:originalUri><con:assertion type="GroovyScriptAssertion" id="47ff4f39-e19a-4580-9712-80e2cc4516b7" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

//Getting response from methods
def ResponseMessage = context.response
def parsedJson = new groovy.json.JsonSlurper().parseText(ResponseMessage)

assert parsedJson.Result == "Failure"
assert parsedJson.Display_items == 0
assert parsedJson.Matched_items == 0
assert parsedJson.Error_code == 414
assert parsedJson.Items == null
assert parsedJson.Error_str == "Item not found"
assert parsedJson.Error_str_detail == "The subscriber 100002 not exists"
assert parsedJson.Donetime != null</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="subId" value="1"/>
  <con:entry key="crmSubCode" value="100002"/>
</con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Delete -  Open Issues Failure" id="9b9ec75c-8941-41e5-b258-88407b354059"><con:settings/><con:config service="http://10.0.0.100:8080" methodName="Delete" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription/{subId}/issue" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Delete -  Open Issues Failure" id="c7372697-7922-4c19-8c02-0cc9db184620" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request/><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v1.0/subscriber/100002/subscription/1/issue</con:originalUri><con:assertion type="GroovyScriptAssertion" id="47ff4f39-e19a-4580-9712-80e2cc4516b7" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

//Getting response from methods
def ResponseMessage = context.response
def parsedJson = new groovy.json.JsonSlurper().parseText(ResponseMessage)

assert parsedJson.Result == "Failure"
assert parsedJson.Display_items == 0
assert parsedJson.Matched_items == 0
assert parsedJson.Error_code == 414
assert parsedJson.Items == null
assert parsedJson.Error_str == "Item not found"
assert parsedJson.Error_str_detail == "The subscriber 100002 not exists"
assert parsedJson.Donetime != null</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="subId" value="1"/>
  <con:entry key="crmSubCode" value="100002"/>
</con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Update - UpdateSubscriberError" id="919a05a1-f6de-4f12-a2e8-60997c222338"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}" methodName="Update" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Update - UpdateSubscriberError" id="7f7c1875-c1ab-4093-8e51-506fd78fc2f0" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
     "name": "Matias Bravo"
}</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber</con:originalUri><con:assertion type="Simple Contains" id="b6abe90b-2082-40ad-835e-f2c5d4b5fc1a" name="ContainResultFailure"><con:configuration><token>Result":"Failure"</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="b6abe90b-2082-40ad-835e-f2c5d4b5fc1a" name="ContainSubscriberError"><con:configuration><token>"Error_str_detail":"The subscriber 100002 not exists"</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="0b454424-b6ea-4fda-a06c-63bd031377a9" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

//Getting response from methods
def ResponseMessage = context.response
def parsedJson = new groovy.json.JsonSlurper().parseText(ResponseMessage)

assert parsedJson.Result == "Failure"
assert parsedJson.Display_items == 0
assert parsedJson.Matched_items == 0
assert parsedJson.Error_code == 404
assert parsedJson.Items == null
assert parsedJson.Error_str == "Item not found"
assert parsedJson.Error_str_detail == "The subscriber 100002 not exists"
assert parsedJson.Donetime != null

</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="crmSubCode" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Create - CreateMartinBravoSubscriberShouldReturnOk" id="90ba2054-b6bc-46e4-b8c7-dfc465a2a764"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber" methodName="Create" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Create - CreateMartinBravoSubscriberShouldReturnOk" id="7f7c1875-c1ab-4093-8e51-506fd78fc2f0" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
"crmSubCode":"100002",
"name":"Martin Bravo"
}
</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber</con:originalUri><con:assertion type="Simple Contains" id="b6abe90b-2082-40ad-835e-f2c5d4b5fc1a" name="ContainResultSuccess"><con:configuration><token>Result":"Success"</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="b6abe90b-2082-40ad-835e-f2c5d4b5fc1a" name="ContainSubscriberName"><con:configuration><token>"name":"Martin Bravo"</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="b6abe90b-2082-40ad-835e-f2c5d4b5fc1a" name="ContainSubscriberNumber"><con:configuration><token>"crmSubCode":"100002"</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="06cfaf3e-3430-435f-a1e2-1c2c58314370" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

//Getting response from methods
def ResponseMessage = context.response
def parsedJson = new groovy.json.JsonSlurper().parseText(ResponseMessage)

assert parsedJson.Result == "Success"
assert parsedJson.Display_items == 1
assert parsedJson.Matched_items == 1
assert parsedJson.Error_code == null
assert parsedJson.Items != null
assert parsedJson.Error_str == null
assert parsedJson.Error_str_detail == null
assert parsedJson.Donetime != null

</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Get - GetTheMartinBravoActiveSubscriptionShouldReturn Error Subscription" id="0ec0f450-7be7-4b39-860c-65eb355681f0"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription/{subId}" methodName="Get" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get - GetTheMartinBravoActiveSubscriptionShouldReturn Error Subscription" id="e6e08620-df5b-479e-9e4b-84acb7330e05" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
  "reservationId": "909090"
}
</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription</con:originalUri><con:assertion type="Simple Contains" id="8d8c9c7f-ef4a-42ab-9873-eb4fc41dae3e" name="ContainResultSuccess"><con:configuration><token>Result":"Failure"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="8d8c9c7f-ef4a-42ab-9873-eb4fc41dae3e" name="ContainReservation"><con:configuration><token>"Error_str_detail":"The subscription 1 not exists for subscriber number 100002"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="3e4e91fd-cc96-4c87-ad85-7fcc7d5b1390" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

//Getting response from methods
def ResponseMessage = context.response
def parsedJson = new groovy.json.JsonSlurper().parseText(ResponseMessage)

assert parsedJson.Result == "Failure"
assert parsedJson.Display_items == 0
assert parsedJson.Matched_items == 0
assert parsedJson.Error_code == 404
assert parsedJson.Items == null
assert parsedJson.Error_str == "Item not found"
assert parsedJson.Error_str_detail == "The subscription 1 not exists for subscriber number 100002"
assert parsedJson.Donetime != null

</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="crmSubCode" value="100002" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Get - GetService Error subscription not exists" id="759c9479-002d-42d4-9b16-1f393a789090"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription/{subId}/service/{srvId}" methodName="Get" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get - GetService Error subscription not exists" id="1b406235-c481-45a1-aeed-d4cc36c905a5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
  "name":"hsi",
  "crmCode": {"idSuscripcion":"99999"},
  "parameters": {"maxCpe":90 }
}
</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/crmSubCode/issue</con:originalUri><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsResultFailure"><con:configuration><token>"Result":"Failure"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsName"><con:configuration><token>"Error_str_detail":"The subscription 1 not exists for subscriber number 100002"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="30da61a1-20cd-401e-93cc-1155484cc711" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

//Getting response from methods
def ResponseMessage = context.response
def parsedJson = new groovy.json.JsonSlurper().parseText(ResponseMessage)

assert parsedJson.Result == "Failure"
assert parsedJson.Display_items == 0
assert parsedJson.Matched_items == 0
assert parsedJson.Error_code == 412
assert parsedJson.Items == null
assert parsedJson.Error_str == "Item not found"
assert parsedJson.Error_str_detail == "The subscription 1 not exists for subscriber number 100002"
assert parsedJson.Donetime != null

</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="srvId" value="1"/>
  <con:entry key="crmSubCode" value="100002"/>
</con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>srvId</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Get -  Open Issues Failure subscription" id="6bba6550-ffe7-424e-8e0c-f0af55744773"><con:settings/><con:config service="http://10.0.0.100:8080" methodName="Get" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription/{subId}/issue" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get -  Open Issues Failure subscription" id="c7372697-7922-4c19-8c02-0cc9db184620" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request/><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v1.0/subscriber/100002/subscription/1/issue</con:originalUri><con:assertion type="GroovyScriptAssertion" id="47ff4f39-e19a-4580-9712-80e2cc4516b7" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

//Getting response from methods
def ResponseMessage = context.response
def parsedJson = new groovy.json.JsonSlurper().parseText(ResponseMessage)

assert parsedJson.Result == "Failure"
assert parsedJson.Display_items == 0
assert parsedJson.Matched_items == 0
assert parsedJson.Error_code == 404
assert parsedJson.Items == null
assert parsedJson.Error_str == "Item not found"
assert parsedJson.Error_str_detail == "The subscription 1 not exists for subscriber number 100002"
assert parsedJson.Donetime != null</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="subId" value="1"/>
  <con:entry key="crmSubCode" value="100002"/>
</con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Delete -  Open Issues Failure subscription" id="ca2fc894-343d-49fb-9b73-5700095bbea0"><con:settings/><con:config service="http://10.0.0.100:8080" methodName="Delete" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription/{subId}/issue" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Delete -  Open Issues Failure subscription" id="c7372697-7922-4c19-8c02-0cc9db184620" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request/><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v1.0/subscriber/100002/subscription/1/issue</con:originalUri><con:assertion type="GroovyScriptAssertion" id="47ff4f39-e19a-4580-9712-80e2cc4516b7" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

//Getting response from methods
def ResponseMessage = context.response
def parsedJson = new groovy.json.JsonSlurper().parseText(ResponseMessage)

assert parsedJson.Result == "Failure"
assert parsedJson.Display_items == 0
assert parsedJson.Matched_items == 0
assert parsedJson.Error_code == 404
assert parsedJson.Items == null
assert parsedJson.Error_str == "Item not found"
assert parsedJson.Error_str_detail == "The subscription 1 not exists for subscriber number 100002"
assert parsedJson.Donetime != null</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="subId" value="1"/>
  <con:entry key="crmSubCode" value="100002"/>
</con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Create - CreateASubscriptionInMartinBravoShouldReturnFail - subscriber not exists" id="ad3e0f45-97aa-4e12-ac2a-4b53cdf3a171"><con:settings/><con:config service="http://10.0.0.100:8080" methodName="Create" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Create - CreateASubscriptionInMartinBravoShouldReturnFail - subscriber not exists" id="c2e14433-2d71-4676-a9d8-51d55cbe18a7" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
  "reservationId": "909090"
}
</con:request><con:originalUri>http://10.0.0.100/dsa-nico/dsa/api/v1.0/subscriber/100002/subscription</con:originalUri><con:assertion type="Simple Contains" id="ba4f29f2-107d-43fc-b23c-efa3a4037236" name="Contains Failure Response"><con:configuration><token>"Result":"Failure"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Invalid HTTP Status Codes" id="0734601d-a66b-4629-a9d1-1f938d30f634" name="Invalid HTTP Status Codes &lt;> 200"><con:configuration><codes>HTTP/1.1 200 OK</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="98fc3703-7f1a-455d-a4c4-e34af92cabe8" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

//Getting response from methods
def ResponseMessage = context.response
def parsedJson = new groovy.json.JsonSlurper().parseText(ResponseMessage)

assert parsedJson.Result == "Failure"
assert parsedJson.Display_items == 0
assert parsedJson.Matched_items == 0
assert parsedJson.Error_code == 414
assert parsedJson.Items == null
assert parsedJson.Error_str == "Item not found"
assert parsedJson.Error_str_detail == "The subscriber 100009 not exists"
assert parsedJson.Donetime != null

</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="crmSubCode" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Create - CreateASubscriptionInMartinBravoShouldReturnSuccess" id="dcf9176c-ee5f-4e7f-a4fc-f154ab39f59a"><con:settings/><con:config service="http://10.0.0.100:8080" methodName="Create" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Create - CreateASubscriptionInMartinBravoShouldReturnSuccess" id="c2e14433-2d71-4676-a9d8-51d55cbe18a7" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
  "reservationId": "909090"
}
</con:request><con:originalUri>http://10.0.0.100/dsa-nico/dsa/api/v1.0/subscriber/100002/subscription</con:originalUri><con:assertion type="Simple Contains" id="ba4f29f2-107d-43fc-b23c-efa3a4037236" name="Contains Success Response"><con:configuration><token>"Result":"Success"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Invalid HTTP Status Codes" id="0734601d-a66b-4629-a9d1-1f938d30f634" name="Invalid HTTP Status Codes &lt;> 200"><con:configuration><codes>HTTP/1.1 200 OK</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="3ae706cb-eb54-4164-a6e7-d652625cdd61" name="Contains Pending status"><con:configuration><token>"activationCode":</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="f8f80dcc-f284-4d37-aa8a-04a4fc2c7403" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

//Getting response from methods
def ResponseMessage = context.response
def parsedJson = new groovy.json.JsonSlurper().parseText(ResponseMessage)

assert parsedJson.Result == "Success"
assert parsedJson.Display_items == 1
assert parsedJson.Matched_items == 1
assert parsedJson.Error_code == null
assert parsedJson.Items != null
assert parsedJson.Error_str == null
assert parsedJson.Error_str_detail == null
assert parsedJson.Donetime != null
assert parsedJson.Items.subId == 1
assert parsedJson.Items.status == "pending"
assert parsedJson.Items.reservationId == "909090"
assert parsedJson.Items.activationCode != null
assert parsedJson.Items.activationCode.code != null
assert parsedJson.Items.activationCode.expirationDate != null
assert parsedJson.Items.activationCode.active </scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="crmSubCode" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Get - All suscription Services -- wrong subId" id="de148c27-9bda-42b1-9e4c-99df506dc65f"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription/{subId}/service" methodName="Get" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get - All suscription Services -- wrong subId" id="1b406235-c481-45a1-aeed-d4cc36c905a5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request/><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/crmSubCode/issue</con:originalUri><con:assertion type="Simple Contains" id="7bfb9cfa-488e-45a7-94b2-83511b328ac4" name="Contains Failure"><con:configuration><token>"Result":"Failure"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="dc109e5b-5148-49f0-83d3-6efe58789577" name="Contains Error Description"><con:configuration><token>"Error_str_detail":"The subscription 123 not exists for subscriber number 100002"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="ea0ad5b6-737e-4d9e-8e9c-96e5baca7933" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

//Getting response from methods
def ResponseMessage = context.response
def parsedJson = new groovy.json.JsonSlurper().parseText(ResponseMessage)

assert parsedJson.Result == "Failure"
assert parsedJson.Display_items == 0
assert parsedJson.Matched_items == 0
assert parsedJson.Error_code == 412
assert parsedJson.Items == null
assert parsedJson.Error_str == "Item not found"
assert parsedJson.Error_str_detail == "The subscription 123 not exists for subscriber number 100002"
assert parsedJson.Donetime != null</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="subId" value="123"/>
  <con:entry key="crmSubCode" value="100002"/>
</con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Get - GetService Error IdSrvNotExists" id="ffae64cc-4003-40ae-8d96-ba3a50bf250f"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription/{subId}/service/{srvId}" methodName="Get" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get - GetService Error IdSrvNotExists" id="1b406235-c481-45a1-aeed-d4cc36c905a5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
  "name":"hsi",
  "crmCode": {"idSuscripcion":"99999"},
  "parameters": {"maxCpe":90 }
}
</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/crmSubCode/issue</con:originalUri><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsResultFailure"><con:configuration><token>"Result":"Failure"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsError"><con:configuration><token>"Error_str_detail":"The service 1 not exists for subscription 1"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="f450f393-e3df-4d4d-9736-d635a684282e" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

//Getting response from methods
def ResponseMessage = context.response
def parsedJson = new groovy.json.JsonSlurper().parseText(ResponseMessage)

assert parsedJson.Result == "Failure"
assert parsedJson.Display_items == 0
assert parsedJson.Matched_items == 0
assert parsedJson.Error_code == 414
assert parsedJson.Items == null
assert parsedJson.Error_str == "Item not found"
assert parsedJson.Error_str_detail == "The service 1 not exists for subscription 1"
assert parsedJson.Donetime != null

</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="srvId" value="1"/>
  <con:entry key="crmSubCode" value="100002"/>
</con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>srvId</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Get -  Open Issues Empty issue not exists" id="ffb8f4a8-c740-41fc-9a1d-a5b18a40532e"><con:settings/><con:config service="http://10.0.0.100:8080" methodName="Get" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription/{subId}/issue" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get -  Open Issues Empty issue not exists" id="c7372697-7922-4c19-8c02-0cc9db184620" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request/><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v1.0/subscriber/100002/subscription/1/issue</con:originalUri><con:assertion type="GroovyScriptAssertion" id="47ff4f39-e19a-4580-9712-80e2cc4516b7" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

//Getting response from methods
def ResponseMessage = context.response
def parsedJson = new groovy.json.JsonSlurper().parseText(ResponseMessage)

assert parsedJson.Result == "Success"
assert parsedJson.Display_items == 0
assert parsedJson.Matched_items == 0
assert parsedJson.Error_code == null
assert parsedJson.Items != []
assert parsedJson.Items != null
assert parsedJson.Error_str == null
assert parsedJson.Error_str_detail == null
assert parsedJson.Donetime != null</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="subId" value="1"/>
  <con:entry key="crmSubCode" value="100002"/>
</con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Delete -  Issues Failure issue not exists" id="ed38c9b6-b26a-41e8-94cf-90de827ee51d"><con:settings/><con:config service="http://10.0.0.100:8080" methodName="Delete" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription/{subId}/issue" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Delete -  Issues Failure issue not exists" id="c7372697-7922-4c19-8c02-0cc9db184620" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request/><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v1.0/subscriber/100002/subscription/1/issue</con:originalUri><con:assertion type="GroovyScriptAssertion" id="47ff4f39-e19a-4580-9712-80e2cc4516b7" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

//Getting response from methods
def ResponseMessage = context.response
def parsedJson = new groovy.json.JsonSlurper().parseText(ResponseMessage)

assert parsedJson.Result == "Failure"
assert parsedJson.Display_items == 0
assert parsedJson.Matched_items == 0
assert parsedJson.Error_code == 408
assert parsedJson.Items == null
assert parsedJson.Error_str == "Issue for subscription not exists"
assert parsedJson.Error_str_detail == "The subscription 1 doesn't have any open issue"
assert parsedJson.Donetime != null</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="subId" value="1"/>
  <con:entry key="crmSubCode" value="100002"/>
</con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Create - CreateService - Not exists template" id="5f2f4a3f-3611-4428-98d5-fc587e186d15"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription/{subId}/service" methodName="Create" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Create - CreateService - Not exists template" id="1b406235-c481-45a1-aeed-d4cc36c905a5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
  "name":"not-exists",
  "crmCode": {"99999":"idSuscripcion"},
  "parameters": {"maxCpe":90 }
}
</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/crmSubCode/issue</con:originalUri><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsResultFailure"><con:configuration><token>"Result":"Failure"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsName"><con:configuration><token>"Error_str_detail":"The template name not-exists not exists"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="e46ead1d-734d-4601-ae33-3bc079f6e7d9" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

//Getting response from methods
def ResponseMessage = context.response
def parsedJson = new groovy.json.JsonSlurper().parseText(ResponseMessage)

assert parsedJson.Result == "Failure"
assert parsedJson.Display_items == 0
assert parsedJson.Matched_items == 0
assert parsedJson.Error_code == 408
assert parsedJson.Items == null
assert parsedJson.Error_str == "Template not exists"
assert parsedJson.Error_str_detail == "The template name not-exists not exists"
assert parsedJson.Donetime != null

</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="subId" value="1"/>
  <con:entry key="crmSubCode" value="100002"/>
</con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Create - CreateService - Not exists crmCode" id="62bb535b-8b8f-48ee-ae37-23f05382a17f"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription/{subId}/service" methodName="Create" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Create - CreateService - Not exists crmCode" id="1b406235-c481-45a1-aeed-d4cc36c905a5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
  "name":"not-exists",
  "crmCode": {"99999":"idSuscripcion"},
  "parameters": {"maxCpe":90 }
}
</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/crmSubCode/issue</con:originalUri><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsResultFailure"><con:configuration><token>"Result":"Failure"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsName"><con:configuration><token>"Error_str_detail":"The subscriber 100009 not exists"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="9eff38db-6c04-46c8-9501-8142f845677b" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

//Getting response from methods
def ResponseMessage = context.response
def parsedJson = new groovy.json.JsonSlurper().parseText(ResponseMessage)

assert parsedJson.Result == "Failure"
assert parsedJson.Display_items == 0
assert parsedJson.Matched_items == 0
assert parsedJson.Error_code == 410
assert parsedJson.Items == null
assert parsedJson.Error_str == "Item not found"
assert parsedJson.Error_str_detail == "The subscriber 100009 not exists"
assert parsedJson.Donetime != null

</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="subId" value="1"/>
  <con:entry key="crmSubCode" value="100009"/>
</con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Create - CreateService - Not exists subs" id="c71ee043-04e9-4fa0-88c7-c78db51667f4"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription/{subId}/service" methodName="Create" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Create - CreateService - Not exists subs" id="1b406235-c481-45a1-aeed-d4cc36c905a5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
  "name":"not-exists",
  "crmCode": {"99999":"idSuscripcion"},
  "parameters": {"maxCpe":90 }
}
</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/crmSubCode/issue</con:originalUri><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsResultFailure"><con:configuration><token>"Result":"Failure"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsName"><con:configuration><token>"Error_str_detail":"The subscription 9090 not exists for subscriber number 100002"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="6f1809c1-b75b-4cb7-b870-82ade4dde417" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

//Getting response from methods
def ResponseMessage = context.response
def parsedJson = new groovy.json.JsonSlurper().parseText(ResponseMessage)

assert parsedJson.Result == "Failure"
assert parsedJson.Display_items == 0
assert parsedJson.Matched_items == 0
assert parsedJson.Error_code == 412
assert parsedJson.Items == null
assert parsedJson.Error_str == "Item not found"
assert parsedJson.Error_str_detail == "The subscription 9090 not exists for subscriber number 100002"
assert parsedJson.Donetime != null

</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="subId" value="9090"/>
  <con:entry key="crmSubCode" value="100002"/>
</con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Create - CreateService - ParamError" id="8997a210-37c0-4cf1-8f19-e21bc26ce25d"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription/{subId}/service" methodName="Create" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Create - CreateService - ParamError" id="1b406235-c481-45a1-aeed-d4cc36c905a5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
  "name":"hsi",
  "crmCode": {"sdfsdfsdf":"idSuscripcions"},
  "parameters": {}
}
</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/crmSubCode/issue</con:originalUri><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsResultFailure"><con:configuration><token>"Result":"Failure"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="3b92d1ab-5487-4327-a177-ff90b9e6c4f1" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

//Getting response from methods
def ResponseMessage = context.response
def parsedJson = new groovy.json.JsonSlurper().parseText(ResponseMessage)

assert parsedJson.Result == "Failure"
assert parsedJson.Display_items == 0
assert parsedJson.Matched_items == 0
assert parsedJson.Error_code == 409
assert parsedJson.Items == null
assert parsedJson.Error_str == "Wrong parameters for template"
assert parsedJson.Error_str_detail == "Wrong parameters for template hsi, parameters given [idSuscripcions] , possible parameters [idSuscripcion]"
assert parsedJson.Donetime != null

</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="crmSubCode" value="100002" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Create - CreateService - Parameters: clientclass error" id="92c237b3-b339-4ecb-98a7-489b733a2772"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription/{subId}/service" methodName="Create" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Create - CreateService - Parameters: clientclass error" id="1b406235-c481-45a1-aeed-d4cc36c905a5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
  "name":"hsi",
  "crmCode": {"99999":"idSuscripcion"},
  "parameters": 
  {
  	"clientclass":"abc"
  }
}
</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/crmSubCode/issue</con:originalUri><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsResultFailure"><con:configuration><token>"Result":"Failure"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="3b92d1ab-5487-4327-a177-ff90b9e6c4f1" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

//Getting response from methods
def ResponseMessage = context.response
def parsedJson = new groovy.json.JsonSlurper().parseText(ResponseMessage)

assert parsedJson.Result == "Failure"
assert parsedJson.Display_items == 0
assert parsedJson.Matched_items == 0
assert parsedJson.Error_code == 423
assert parsedJson.Items == null
assert parsedJson.Error_str == "The client class you are trying to register does not exist"
assert parsedJson.Error_str_detail == "Make sure that the client class [abc] is between the correct parameters for the instance"
assert parsedJson.Donetime != null

</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="crmSubCode" value="100002" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Create - CreateService - Parameters: trafficprofile error" id="1242b9d3-ad96-4916-bd94-f11bbcda5155"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription/{subId}/service" methodName="Create" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Create - CreateService - Parameters: trafficprofile error" id="1b406235-c481-45a1-aeed-d4cc36c905a5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
  "name":"hsi",
  "crmCode": {"99999":"idSuscripcion"},
  "parameters": 
  {
  	"trafficprofile":"abc"
  }
}
</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/crmSubCode/issue</con:originalUri><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsResultFailure"><con:configuration><token>"Result":"Failure"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="3b92d1ab-5487-4327-a177-ff90b9e6c4f1" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

//Getting response from methods
def ResponseMessage = context.response
def parsedJson = new groovy.json.JsonSlurper().parseText(ResponseMessage)

assert parsedJson.Result == "Failure"
assert parsedJson.Display_items == 0
assert parsedJson.Matched_items == 0
assert parsedJson.Error_code == 424
assert parsedJson.Items == null
assert parsedJson.Error_str == "The traffic profile that you are trying to register does not exist"
assert parsedJson.Error_str_detail == "Make sure that the traffic profile [abc] is between the correct parameters for the instance"
assert parsedJson.Donetime != null

</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="crmSubCode" value="100002" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Create - CreateServiceHsi for error case test" id="9a38e806-59b9-4ab3-bcde-bd6a9c2fae87"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription/{subId}/service" methodName="Create" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Create - CreateServiceHsi for error case test" id="1b406235-c481-45a1-aeed-d4cc36c905a5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
  "name":"hsi",
  "crmCode": {"99999":"idSuscripcion"},
  "parameters": {"maxCpe":90 }
}
</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/crmSubCode/issue</con:originalUri><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsResultSuccess"><con:configuration><token>"Result":"Success"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsCrmCode"><con:configuration><token>"crmCode":{</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsParameters"><con:configuration><token>"parameters":{</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsSrvId"><con:configuration><token>"srvId":</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsStatus"><con:configuration><token>"status":"inactive"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsName"><con:configuration><token>"name":"hsi"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="d44b5e79-7611-4bf2-92b0-40af0131f18e" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

//Getting response from methods
def ResponseMessage = context.response
def parsedJson = new groovy.json.JsonSlurper().parseText(ResponseMessage)

assert parsedJson.Result == "Success"
assert parsedJson.Display_items == 1
assert parsedJson.Matched_items == 1
assert parsedJson.Error_code == null
assert parsedJson.Items != null
assert parsedJson.Error_str == null
assert parsedJson.Error_str_detail == null
assert parsedJson.Donetime != null


assert parsedJson.Items.srvId == 2
assert parsedJson.Items.status == "inactive"
assert parsedJson.Items.name == "hsi"
assert parsedJson.Items.crmCode != null
assert parsedJson.Items.crmCode["99999"] == "idSuscripcion"
assert parsedJson.Items.parameters != null
assert parsedJson.Items.parameters["trafficProfile"] == "test"
assert parsedJson.Items.parameters["clientClass"] == "residencial"
assert parsedJson.Items.parameters["bindLanPorts"] == [1,2,3,4]
assert parsedJson.Items.parameters["maxCpe"] == 90
assert parsedJson.Items.parameters["reservedIpList"] == []
assert parsedJson.Items.parameters["wifi"] != null
assert parsedJson.Items.parameters["gd"] != null

       



</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="subId" value="1"/>
  <con:entry key="crmSubCode" value="100002"/>
</con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="CreateAnErrorServiceThatReturnsTheErrorIfTheIPADDRESSIsIncorrect" id="a4e05b62-c1bf-49d5-b67b-4b146c3827e5"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription/{subId}/service" methodName="Create" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateAnErrorServiceThatReturnsTheErrorIfTheIPADDRESSIsIncorrect" id="1b406235-c481-45a1-aeed-d4cc36c905a5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
  "name":"hsi",
  "crmCode": {"99999":"idSuscripcion"},
  "parameters": {
      "trafficProfile":"test",
      "clientClass":"test",
      "bindLanPorts":[1,2,3,4], 
      "reservedIpList" : ["100.201.201.203"],
      "maxCpe":1,
      "wifi":{
            "status":"enabled"
          },
      "gd":          {
            "status": "enabled",
            "ipv4":             {
               "nat": "enabled",
               "ipMode": "static",
               "address": "200.201.202.256"
            },
            "ipv6": {"status": "disabled"}
         }
  }
}
</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/crmSubCode/issue</con:originalUri><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsResultSuccess"><con:configuration><token>"Result":"Failure"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="4cd69ddb-cde5-4d7d-a7f4-dd52c20442bf" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

//Getting response from methods
def ResponseMessage = context.response
def parsedJson = new groovy.json.JsonSlurper().parseText(ResponseMessage)

assert parsedJson.Result == "Failure"
assert parsedJson.Display_items == 0
assert parsedJson.Matched_items == 0
assert parsedJson.Error_code == 101
assert parsedJson.Items == null
assert parsedJson.Error_str == "Validation Error"
assert parsedJson.Error_str_detail.contains("gd.ipv4.address")
assert parsedJson.Donetime != null</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="subId" value="1"/>
  <con:entry key="crmSubCode" value="100002"/>
</con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="CreateAnErrorServiceThatReturnsTheErrorIfTheMASKIsIncorrect" id="795e76ba-7603-4fa0-b335-cf552e6562d0"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription/{subId}/service" methodName="Create" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateAnErrorServiceThatReturnsTheErrorIfTheMASKIsIncorrect" id="1b406235-c481-45a1-aeed-d4cc36c905a5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
  "name":"hsi",
  "crmCode": {"99999":"idSuscripcion"},
  "parameters": {
      "trafficProfile":"test",
      "clientClass":"test",
      "bindLanPorts":[1,2,3,4], 
      "reservedIpList" : ["100.201.201.203"],
      "maxCpe":1,
      "wifi":{
            "status":"enabled"
          },
      "gd":          {
            "status": "enabled",
            "ipv4":             {
               "nat": "enabled",
               "ipMode": "static",
               "mask": "200.201.202.256"
            },
            "ipv6": {"status": "disabled"}
         }
  }
}
</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/crmSubCode/issue</con:originalUri><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsResultSuccess"><con:configuration><token>"Result":"Failure"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="4cd69ddb-cde5-4d7d-a7f4-dd52c20442bf" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

//Getting response from methods
def ResponseMessage = context.response
def parsedJson = new groovy.json.JsonSlurper().parseText(ResponseMessage)

assert parsedJson.Result == "Failure"
assert parsedJson.Display_items == 0
assert parsedJson.Matched_items == 0
assert parsedJson.Error_code == 101
assert parsedJson.Items == null
assert parsedJson.Error_str == "Validation Error"
assert parsedJson.Error_str_detail.contains("gd.ipv4.mask")
assert parsedJson.Donetime != null</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="subId" value="1"/>
  <con:entry key="crmSubCode" value="100002"/>
</con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="CreateAnErrorServiceThatReturnsTheErrorIfTheIPGWIsIncorrect" id="83135718-fbdf-426d-975a-45c6493208ff"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription/{subId}/service" methodName="Create" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateAnErrorServiceThatReturnsTheErrorIfTheIPGWIsIncorrect" id="1b406235-c481-45a1-aeed-d4cc36c905a5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
  "name":"hsi",
  "crmCode": {"99999":"idSuscripcion"},
  "parameters": {
      "trafficProfile":"test",
      "clientClass":"test",
      "bindLanPorts":[1,2,3,4], 
      "reservedIpList" : ["100.201.201.203"],
      "maxCpe":1,
      "wifi":{
            "status":"enabled"
          },
      "gd":          {
            "status": "enabled",
            "ipv4":             {
               "nat": "enabled",
               "ipMode": "static",
               "address": "200.201.202.203",
               "mask": "255.255.255.0",
               "gw": "01.201.202.1",
               "dns": ["8.8.8.8","8.8.4.4"]
            },
            "ipv6": {"status": "disabled"}
         }
  }
}
</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/crmSubCode/issue</con:originalUri><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsResultSuccess"><con:configuration><token>"Result":"Failure"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="4cd69ddb-cde5-4d7d-a7f4-dd52c20442bf" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

//Getting response from methods
def ResponseMessage = context.response
def parsedJson = new groovy.json.JsonSlurper().parseText(ResponseMessage)

assert parsedJson.Result == "Failure"
assert parsedJson.Display_items == 0
assert parsedJson.Matched_items == 0
assert parsedJson.Error_code == 101
assert parsedJson.Items == null
assert parsedJson.Error_str == "Validation Error"
assert parsedJson.Error_str_detail.contains("gd.ipv4.gw")
assert parsedJson.Donetime != null</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="subId" value="1"/>
  <con:entry key="crmSubCode" value="100002"/>
</con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="CreateAnErrorServiceThatReturnsTheErrorIfTheIPDNS0IsIncorrect" id="71ee7e40-b61d-4b15-9697-ad794e638321"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription/{subId}/service" methodName="Create" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateAnErrorServiceThatReturnsTheErrorIfTheIPDNS0IsIncorrect" id="1b406235-c481-45a1-aeed-d4cc36c905a5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
  "name":"hsi",
  "crmCode": {"99999":"idSuscripcion"},
  "parameters": {
      "trafficProfile":"test",
      "clientClass":"test",
      "bindLanPorts":[1,2,3,4], 
      "reservedIpList" : ["100.201.201.203"],
      "maxCpe":1,
      "wifi":{
            "status":"enabled"
          },
      "gd":          {
            "status": "enabled",
            "ipv4":             {
               "nat": "enabled",
               "ipMode": "static",
               "dns": ["200.201.202.256","200.201.202.25"]
            },
            "ipv6": {"status": "disabled"}
         }
  }
}
</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/crmSubCode/issue</con:originalUri><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsResultSuccess"><con:configuration><token>"Result":"Failure"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="4cd69ddb-cde5-4d7d-a7f4-dd52c20442bf" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

//Getting response from methods
def ResponseMessage = context.response
def parsedJson = new groovy.json.JsonSlurper().parseText(ResponseMessage)

assert parsedJson.Result == "Failure"
assert parsedJson.Display_items == 0
assert parsedJson.Matched_items == 0
assert parsedJson.Error_code == 101
assert parsedJson.Items == null
assert parsedJson.Error_str == "Validation Error"
assert parsedJson.Error_str_detail.contains("gd.ipv4.dns.0")
assert parsedJson.Donetime != null</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="subId" value="1"/>
  <con:entry key="crmSubCode" value="100002"/>
</con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="CreateAnErrorServiceThatReturnsTheErrorIfTheIPDNS1IsIncorrect" id="8d023d16-2a19-4d23-ae03-7716ff206986"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription/{subId}/service" methodName="Create" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateAnErrorServiceThatReturnsTheErrorIfTheIPDNS1IsIncorrect" id="1b406235-c481-45a1-aeed-d4cc36c905a5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
  "name":"hsi",
  "crmCode": {"99999":"idSuscripcion"},
  "parameters": {
      "trafficProfile":"test",
      "clientClass":"test",
      "bindLanPorts":[1,2,3,4], 
      "reservedIpList" : ["100.201.201.203"],
      "maxCpe":1,
      "wifi":{
            "status":"enabled"
          },
      "gd":          {
            "status": "enabled",
            "ipv4":             {
               "nat": "enabled",
               "ipMode": "static",
               "dns": ["200.201.202.25","200.201.202.256"]
            },
            "ipv6": {"status": "disabled"}
         }
  }
}
</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/crmSubCode/issue</con:originalUri><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsResultSuccess"><con:configuration><token>"Result":"Failure"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="4cd69ddb-cde5-4d7d-a7f4-dd52c20442bf" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

//Getting response from methods
def ResponseMessage = context.response
def parsedJson = new groovy.json.JsonSlurper().parseText(ResponseMessage)

assert parsedJson.Result == "Failure"
assert parsedJson.Display_items == 0
assert parsedJson.Matched_items == 0
assert parsedJson.Error_code == 101
assert parsedJson.Items == null
assert parsedJson.Error_str == "Validation Error"
assert parsedJson.Error_str_detail.contains("gd.ipv4.dns.1")
assert parsedJson.Donetime != null</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="subId" value="1"/>
  <con:entry key="crmSubCode" value="100002"/>
</con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Update - CrmCodeService Error params" id="1145b4d6-37e6-46aa-a02c-8f3b3a411747"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription/{subId}/service/{srvId}/crmCode" methodName="UpdateCrmCode" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Update - CrmCodeService Error params" id="1b406235-c481-45a1-aeed-d4cc36c905a5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
  "crmCode": 
    {
      "99999":"idSuscripcions"
    }
}</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/crmSubCode/issue</con:originalUri><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsResultFailure"><con:configuration><token>"Result":"Failure"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsError"><con:configuration><token>"Error_str_detail":"Cannot update crmCode values due incorrect parameters, wrong parameters [idSuscripcions] , possible parameters [idSuscripcion]"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="srvId" value="2"/>
  <con:entry key="crmSubCode" value="100002"/>
</con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>srvId</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Asign device - ActiveSubscriptionShouldReturnOk" id="ef9bfc37-74bd-4c54-8319-43000373baca"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription/{subId}/device" methodName="Asign device" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Asign device - ActiveSubscriptionShouldReturnOk" id="1b406235-c481-45a1-aeed-d4cc36c905a5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
  "id" : "ZTE01010101010",
  "activationCode": "12321321"
}</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/crmSubCode/issue</con:originalUri><con:assertion type="GroovyScriptAssertion" id="e5cb700e-a698-41c3-a8ed-c88a4209d249" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

//Getting response from methods
def ResponseMessage = context.response
def parsedJson = new groovy.json.JsonSlurper().parseText(ResponseMessage)

assert parsedJson.Result == "Success"
assert parsedJson.Display_items == 1
assert parsedJson.Matched_items == 1
assert parsedJson.Error_code == null
assert parsedJson.Items != null
assert parsedJson.Items.status == "active"
assert parsedJson.Error_str == null
assert parsedJson.Error_str_detail == null</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="subId" value="1"/>
  <con:entry key="crmSubCode" value="100002"/>
</con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Create - CreateServiceTLS - Parameters: bindlanport error" id="5f11c439-b24d-4123-b3a9-88f7b59a8f62"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription/{subId}/service" methodName="Create" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Create - CreateServiceTLS - Parameters: bindlanport error" id="1b406235-c481-45a1-aeed-d4cc36c905a5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
  "name":"tls",
  "crmCode": {"99999":"idSuscripcion"},
  "parameters": {"vlan":1245}
}
</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/crmSubCode/issue</con:originalUri><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsResultFailure"><con:configuration><token>"Result":"Failure"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="3b92d1ab-5487-4327-a177-ff90b9e6c4f1" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

//Getting response from methods
def ResponseMessage = context.response
def parsedJson = new groovy.json.JsonSlurper().parseText(ResponseMessage)

assert parsedJson.Result == "Failure"
assert parsedJson.Display_items == 0
assert parsedJson.Matched_items == 0
assert parsedJson.Error_code == 425
assert parsedJson.Items == null
assert parsedJson.Error_str == "You are trying to activate the service with missing parameters"
assert parsedJson.Error_str_detail == "Make sure that the bindlan port parameter is being sent, as it is necessary to activate the service"
assert parsedJson.Donetime != null

</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="crmSubCode" value="100002" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Delete - Subscription with service TLS" id="74986e20-0d77-408c-9941-a1349cc004e3"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription/{subId}" methodName="Delete" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Delete - Subscription with service TLS" id="feefdf12-b3b4-40b2-8276-b5fbe393d422" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request/><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/123</con:originalUri><con:assertion type="GroovyScriptAssertion" id="cb40eaf0-3816-4d3d-9d5d-65c58b7ae641" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

//Getting response from methods
def ResponseMessage = context.response
def parsedJson = new groovy.json.JsonSlurper().parseText(ResponseMessage)

assert parsedJson.Result == "Success"
assert parsedJson.Display_items == 0
assert parsedJson.Matched_items == 1
assert parsedJson.Error_code == null
assert parsedJson.Items == null
assert parsedJson.Error_str == null
assert parsedJson.Error_str_detail == null
assert parsedJson.Donetime != null</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="crmSubCode" value="100002" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Delete - Subscription" id="e650550b-d15b-4312-b41c-fe6142701efe"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription/{subId}" methodName="Delete" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Delete - Subscription" id="feefdf12-b3b4-40b2-8276-b5fbe393d422" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request/><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/123</con:originalUri><con:assertion type="GroovyScriptAssertion" id="cb40eaf0-3816-4d3d-9d5d-65c58b7ae641" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

//Getting response from methods
def ResponseMessage = context.response
def parsedJson = new groovy.json.JsonSlurper().parseText(ResponseMessage)

assert parsedJson.Result == "Failure"
assert parsedJson.Display_items == 0
assert parsedJson.Matched_items == 0
assert parsedJson.Error_code == 404
assert parsedJson.Items == null
assert parsedJson.Error_str == "Item not found"
assert parsedJson.Error_str_detail == "The subscription 999 not exists for subscriber number 100002"
assert parsedJson.Donetime != null</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="subId" value="999"/>
  <con:entry key="crmSubCode" value="100002"/>
</con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="5a9e8a52-99fd-4dee-a59b-684fd9f3bd3c" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Test E2E Activate a Residencial Subscriber and update the Plan" searchProperties="true" disabled="true"><con:settings/><con:testStep type="restrequest" name="Create - CreateMartinBravoSubscriberShouldReturnOk" id="79000eb7-ae94-4b9a-ae8f-92752b49c50c"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber" methodName="Create" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Create - CreateMartinBravoSubscriberShouldReturnOk" id="7f7c1875-c1ab-4093-8e51-506fd78fc2f0" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
"crmSubCode":"100002",
"name":"Martin Bravo"
}
</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber</con:originalUri><con:assertion type="Simple Contains" id="b6abe90b-2082-40ad-835e-f2c5d4b5fc1a" name="ContainResultSuccess"><con:configuration><token>Result":"Success"</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="b6abe90b-2082-40ad-835e-f2c5d4b5fc1a" name="ContainSubscriberName"><con:configuration><token>"name":"Martin Bravo"</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="b6abe90b-2082-40ad-835e-f2c5d4b5fc1a" name="ContainSubscriberNumber"><con:configuration><token>"crmSubCode":"100002"</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="94249649-86b9-4185-8483-70871464f145" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

//Getting response from methods
def ResponseMessage = context.response
def parsedJson = new groovy.json.JsonSlurper().parseText(ResponseMessage)

assert parsedJson.Result == "Success"
assert parsedJson.Display_items == 1
assert parsedJson.Matched_items == 1
assert parsedJson.Error_code == null
assert parsedJson.Items != null
assert parsedJson.Error_str == null
assert parsedJson.Error_str_detail == null
assert parsedJson.Donetime != null

</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Create - CreateASubscriptionInMartinBravoShouldReturnSuccess" id="5fc1a085-4b8f-4287-915a-8f694199ee98"><con:settings/><con:config service="http://10.0.0.100:8080" methodName="Create" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Create - CreateASubscriptionInMartinBravoShouldReturnSuccess" id="c2e14433-2d71-4676-a9d8-51d55cbe18a7" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
  "reservationId": "909090"
}
</con:request><con:originalUri>http://10.0.0.100/dsa-nico/dsa/api/v1.0/subscriber/100002/subscription</con:originalUri><con:assertion type="Response SLA Assertion" id="4f6528be-5f83-4b4a-acc9-6002f8dfacbd" name="Response SLA > 600"><con:configuration><SLA>900</SLA></con:configuration></con:assertion><con:assertion type="Simple Contains" id="ba4f29f2-107d-43fc-b23c-efa3a4037236" name="Contains Success Response"><con:configuration><token>"Result":"Success"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Invalid HTTP Status Codes" id="0734601d-a66b-4629-a9d1-1f938d30f634" name="Invalid HTTP Status Codes &lt;> 200"><con:configuration><codes>HTTP/1.1 200 OK</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="3ae706cb-eb54-4164-a6e7-d652625cdd61" name="Contains Pending status"><con:configuration><token>"activationCode":</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="5413a192-d822-4e09-8325-3f5207d65bde" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

//Getting response from methods
def ResponseMessage = context.response
def parsedJson = new groovy.json.JsonSlurper().parseText(ResponseMessage)

assert parsedJson.Result == "Success"
assert parsedJson.Display_items == 1
assert parsedJson.Matched_items == 1
assert parsedJson.Error_code == null
assert parsedJson.Items != null
assert parsedJson.Error_str == null
assert parsedJson.Error_str_detail == null
assert parsedJson.Donetime != null
assert parsedJson.Items.subId == 1
assert parsedJson.Items.status == "pending"
assert parsedJson.Items.reservationId == "909090"
assert parsedJson.Items.activationCode != null
assert parsedJson.Items.activationCode.code != null
assert parsedJson.Items.activationCode.expirationDate != null
assert parsedJson.Items.activationCode.active </scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="crmSubCode" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Create - CreateBasicHsiServiceShouldReturnSucess" id="726e6a74-2fad-444e-a84f-6b86bc3b213c"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription/{subId}/service" methodName="Create" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Create - CreateBasicHsiServiceShouldReturnSucess" id="1b406235-c481-45a1-aeed-d4cc36c905a5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
  "name":"hsi",
  "crmCode": {"99999":"idSuscripcion"},
  "parameters": {
   	"maxCpe": 2,
   	"reservedIpList" : ["10.0.0.1","10.0.0.5"],
      "gd":          {
            "status": "disabled",
            "ipv4":             {
               "nat": "disabled",
               "ipMode": "DHCP"
            },
            "ipv6": {"status": "disabled"}
         },
     "bindLanPorts" : 0,
     "bindLanPortsType" : "dynamic"
  }
}
</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/crmSubCode/issue</con:originalUri><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsResultSuccess"><con:configuration><token>"Result":"Success"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsCrmCode"><con:configuration><token>"crmCode":{</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsParameters"><con:configuration><token>"parameters":{</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsSrvId"><con:configuration><token>"srvId":</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsStatus"><con:configuration><token>"status":"inactive"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsName"><con:configuration><token>"name":"hsi"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="4cd69ddb-cde5-4d7d-a7f4-dd52c20442bf" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

//Getting response from methods
def ResponseMessage = context.response
def parsedJson = new groovy.json.JsonSlurper().parseText(ResponseMessage)

assert parsedJson.Result == "Success"
assert parsedJson.Display_items == 1
assert parsedJson.Matched_items == 1
assert parsedJson.Error_code == null
assert parsedJson.Items != null
assert parsedJson.Items.status == "inactive"
assert parsedJson.Items.parameters != null
assert parsedJson.Items.parameters.clientClass != null
assert parsedJson.Items.parameters.bindLanPorts != null
assert parsedJson.Items.parameters.maxCpe == 2
assert parsedJson.Items.parameters.reservedIpList != null
assert parsedJson.Items.parameters.gd.status == "disabled"
assert parsedJson.Error_str == null
assert parsedJson.Error_str_detail == null
assert parsedJson.Donetime != null</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="subId" value="1"/>
  <con:entry key="crmSubCode" value="100002"/>
</con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Get - GetService" id="aa9d2c5e-262b-4d84-ba1f-fc4e11b69a82"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription/{subId}/service/{srvId}" methodName="Get" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get - GetService" id="1b406235-c481-45a1-aeed-d4cc36c905a5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
  "name":"hsi",
  "crmCode": {"idSuscripcion":"99999"},
  "parameters": {"maxCpe":90 }
}
</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/crmSubCode/issue</con:originalUri><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsResultSuccess"><con:configuration><token>"Result":"Success"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsCrmCode"><con:configuration><token>"crmCode":{</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsParameters"><con:configuration><token>"parameters":{</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsSrvId"><con:configuration><token>"srvId":</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsStatus"><con:configuration><token>"status":"inactive"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsName"><con:configuration><token>"name":"hsi"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="2b51d058-751e-4bc0-95af-504f8a5541a2" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

//Getting response from methods
def ResponseMessage = context.response
def parsedJson = new groovy.json.JsonSlurper().parseText(ResponseMessage)

assert parsedJson.Result == "Success"
assert parsedJson.Display_items == 1
assert parsedJson.Matched_items == 1
assert parsedJson.Error_code == null
assert parsedJson.Items != null
assert parsedJson.Items.status == "inactive"
assert parsedJson.Items.parameters != null
assert parsedJson.Items.parameters.clientClass != null
assert parsedJson.Items.parameters.bindLanPorts != null
assert parsedJson.Items.parameters.maxCpe == 2
assert parsedJson.Items.parameters.reservedIpList != null
assert parsedJson.Items.parameters.gd.status == "disabled"
assert parsedJson.Error_str == null
assert parsedJson.Error_str_detail == null
assert parsedJson.Donetime != null</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="srvId" value="1"/>
  <con:entry key="crmSubCode" value="100002"/>
</con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>srvId</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Asign device - ActiveSubscriptionShouldReturnOk" id="5d8b5287-0efe-412c-868c-d7171c0e4487"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription/{subId}/device" methodName="Asign device" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Asign device - ActiveSubscriptionShouldReturnOk" id="1b406235-c481-45a1-aeed-d4cc36c905a5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
  "id" : "ZTE01010101010",
  "activationCode": "12321321"
}</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/crmSubCode/issue</con:originalUri><con:assertion type="GroovyScriptAssertion" id="e5cb700e-a698-41c3-a8ed-c88a4209d249" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

//Getting response from methods
def ResponseMessage = context.response
def parsedJson = new groovy.json.JsonSlurper().parseText(ResponseMessage)

assert parsedJson.Result == "Success"
assert parsedJson.Display_items == 1
assert parsedJson.Matched_items == 1
assert parsedJson.Error_code == null
assert parsedJson.Items != null
assert parsedJson.Items.status == "active"
assert parsedJson.Error_str == null
assert parsedJson.Error_str_detail == null</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="subId" value="1"/>
  <con:entry key="crmSubCode" value="100002"/>
</con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="UpdateService - EnableWifiShouldReturnSuccess" id="7d1890a2-d24f-40b3-9ff0-bb5c0a660040"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription/{subId}/service/{srvId}" methodName="Update" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UpdateService - EnableWifiShouldReturnSuccess" id="1b406235-c481-45a1-aeed-d4cc36c905a5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
   
  "parameters":{
     "gd":          {
            "status": "enabled",
            "ipv4":             {
               "nat": "enabled",
               "ipMode": "DHCP",
               "address": "",
               "mask": "",
               "gw": "",
               "dns": []
            },
            "ipv6": {"status": "disabled"}
         }	
  }
}</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/crmSubCode/issue</con:originalUri><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsResultSuccess"><con:configuration><token>"Result":"Success"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsCrmCode"><con:configuration><token>"crmCode":{</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsParameters"><con:configuration><token>"parameters":{</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsSrvId"><con:configuration><token>"srvId":</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsStatus"><con:configuration><token>"status":"active"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsName"><con:configuration><token>"name":"hsi"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="13b13989-aae5-47f6-b704-bd963d89d2bf" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

//Getting response from methods
def ResponseMessage = context.response
def parsedJson = new groovy.json.JsonSlurper().parseText(ResponseMessage)

assert parsedJson.Result == "Success"
assert parsedJson.Display_items == 1
assert parsedJson.Matched_items == 1
assert parsedJson.Error_code == null
assert parsedJson.Items != null
assert parsedJson.Items.status == "active"
assert parsedJson.Items.parameters != null
assert parsedJson.Items.parameters.clientClass != null
assert parsedJson.Items.parameters.bindLanPorts != null
assert parsedJson.Items.parameters.maxCpe == 2
assert parsedJson.Items.parameters.reservedIpList != null
assert parsedJson.Items.parameters.gd.status == "enabled"
assert parsedJson.Error_str == null
assert parsedJson.Error_str_detail == null
assert parsedJson.Donetime != null</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="subId" value="1"/>
  <con:entry key="srvId" value="1"/>
  <con:entry key="crmSubCode" value="100002"/>
</con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>srvId</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="UpdateService - ChangeTheTrafficProfileShouldReturnSuccess" id="64e470fb-5ef3-4752-9bed-da1a99eb7178"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription/{subId}/service/{srvId}" methodName="Update" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UpdateService - ChangeTheTrafficProfileShouldReturnSuccess" id="1b406235-c481-45a1-aeed-d4cc36c905a5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
	"parameters": {
	    	"trafficProfile": "hsi-test"
	}
}</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/crmSubCode/issue</con:originalUri><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsResultSuccess"><con:configuration><token>"Result":"Success"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsCrmCode"><con:configuration><token>"crmCode":{</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsParameters"><con:configuration><token>"parameters":{</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsSrvId"><con:configuration><token>"srvId":</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsStatus"><con:configuration><token>trafficProfile":"hsi-test"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsName"><con:configuration><token>"name":"hsi"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="13b13989-aae5-47f6-b704-bd963d89d2bf" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

//Getting response from methods
def ResponseMessage = context.response
def parsedJson = new groovy.json.JsonSlurper().parseText(ResponseMessage)

assert parsedJson.Result == "Success"
assert parsedJson.Display_items == 1
assert parsedJson.Matched_items == 1
assert parsedJson.Error_code == null
assert parsedJson.Items != null
assert parsedJson.Items.status == "active"
assert parsedJson.Items.parameters != null
assert parsedJson.Items.parameters.clientClass != null
assert parsedJson.Items.parameters.bindLanPorts != null
assert parsedJson.Items.parameters.trafficProfile == "hsi-test"
assert parsedJson.Items.parameters.maxCpe == 2
assert parsedJson.Items.parameters.reservedIpList != null
assert parsedJson.Items.parameters.gd.status == "enabled"
assert parsedJson.Error_str == null
assert parsedJson.Error_str_detail == null
assert parsedJson.Donetime != null</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="subId" value="1"/>
  <con:entry key="srvId" value="1"/>
  <con:entry key="crmSubCode" value="100002"/>
</con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>srvId</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="UpdateService - FixTheIPShouldReturnSuccess" id="c8dd521f-680b-436d-9e45-59fd3f725303"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription/{subId}/service/{srvId}" methodName="Update" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UpdateService - FixTheIPShouldReturnSuccess" id="1b406235-c481-45a1-aeed-d4cc36c905a5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
   
  "parameters":{
     "gd":          {
            "status": "enabled",
            "ipv4":             {
               "nat": "enabled",
               "ipMode": "DHCP",
               "address": "10.0.0.1",
               "mask": "255.255.255.0",
               "gw": "10.0.0.2",
               "dns": ["8.8.8.8","8.8.4.4"]
            },
            "ipv6": {"status": "enabled"}
         }	
  }
}</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/crmSubCode/issue</con:originalUri><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsResultSuccess"><con:configuration><token>"Result":"Success"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsCrmCode"><con:configuration><token>"crmCode":{</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsParameters"><con:configuration><token>"parameters":{</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsSrvId"><con:configuration><token>"srvId":</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsStatus"><con:configuration><token>"status":"active"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsName"><con:configuration><token>"name":"hsi"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="13b13989-aae5-47f6-b704-bd963d89d2bf" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

//Getting response from methods
def ResponseMessage = context.response
def parsedJson = new groovy.json.JsonSlurper().parseText(ResponseMessage)

assert parsedJson.Result == "Success"
assert parsedJson.Display_items == 1
assert parsedJson.Matched_items == 1
assert parsedJson.Error_code == null
assert parsedJson.Items != null
assert parsedJson.Items.status == "active"
assert parsedJson.Items.parameters != null
assert parsedJson.Items.parameters.clientClass != null
assert parsedJson.Items.parameters.bindLanPorts != null
assert parsedJson.Items.parameters.maxCpe == 2
assert parsedJson.Items.parameters.reservedIpList != null
assert parsedJson.Items.parameters.gd.status == "enabled"
assert parsedJson.Error_str == null
assert parsedJson.Error_str_detail == null
assert parsedJson.Donetime != null</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="subId" value="1"/>
  <con:entry key="srvId" value="1"/>
  <con:entry key="crmSubCode" value="100002"/>
</con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>srvId</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="UpdateService - DisableWifiShouldReturnSuccess" id="d00c498a-ffd8-4cae-9ff4-5d2043d8bd4c"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription/{subId}/service/{srvId}" methodName="Update" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UpdateService - DisableWifiShouldReturnSuccess" id="1b406235-c481-45a1-aeed-d4cc36c905a5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
   
  "parameters":{
     "gd":          {
            "status": "disabled",
            "ipv6": {"status": "disabled"}
         }	
  }
}</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/crmSubCode/issue</con:originalUri><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsResultSuccess"><con:configuration><token>"Result":"Success"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsCrmCode"><con:configuration><token>"crmCode":{</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsParameters"><con:configuration><token>"parameters":{</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsSrvId"><con:configuration><token>"srvId":</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsStatus"><con:configuration><token>"status":"active"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsName"><con:configuration><token>"name":"hsi"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="13b13989-aae5-47f6-b704-bd963d89d2bf" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

//Getting response from methods
def ResponseMessage = context.response
def parsedJson = new groovy.json.JsonSlurper().parseText(ResponseMessage)

assert parsedJson.Result == "Success"
assert parsedJson.Display_items == 1
assert parsedJson.Matched_items == 1
assert parsedJson.Error_code == null
assert parsedJson.Items != null
assert parsedJson.Items.status == "active"
assert parsedJson.Items.parameters != null
assert parsedJson.Items.parameters.clientClass != null
assert parsedJson.Items.parameters.bindLanPorts != null
assert parsedJson.Items.parameters.maxCpe == 2
assert parsedJson.Items.parameters.reservedIpList != null
assert parsedJson.Items.parameters.gd.status == "disabled"
assert parsedJson.Error_str == null
assert parsedJson.Error_str_detail == null
assert parsedJson.Donetime != null</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="subId" value="1"/>
  <con:entry key="srvId" value="1"/>
  <con:entry key="crmSubCode" value="100002"/>
</con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>srvId</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Delete Susbcription - DeletASubscriptionRemoveAllServiceAndDeviceShouldRerutnSuccess" id="9bb30b10-057d-4e57-a9b3-b36931ba9b0c" disabled="true"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription/{subId}" methodName="Delete" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Delete Susbcription - DeletASubscriptionRemoveAllServiceAndDeviceShouldRerutnSuccess" id="18dec9d5-5236-4e78-9992-028083570553" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request/><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode</con:originalUri><con:assertion type="Simple Contains" id="83d1f736-2c19-42dc-b828-509b14bd7fc7" name="Contains"><con:configuration><token>"Result":"Success"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="crmSubCode" value="100002" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="aeda385f-472b-4959-84b8-ef3bd29280b5" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Test E2E FDM Error Case" searchProperties="true" disabled="true"><con:settings/><con:testStep type="restrequest" name="CreateMartinBravoSubscriberShouldReturnOk" id="75e9c83b-c9f3-48d7-a0d4-4fd879b2a54a"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber" methodName="Create" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateMartinBravoSubscriberShouldReturnOk" id="7f7c1875-c1ab-4093-8e51-506fd78fc2f0" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
"crmSubCode":"100002",
"name":"Martin Bravo"
}
</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber</con:originalUri><con:assertion type="Simple Contains" id="b6abe90b-2082-40ad-835e-f2c5d4b5fc1a" name="ContainResultSuccess"><con:configuration><token>Result":"Success"</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="b6abe90b-2082-40ad-835e-f2c5d4b5fc1a" name="ContainSubscriberName"><con:configuration><token>"name":"Martin Bravo"</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="b6abe90b-2082-40ad-835e-f2c5d4b5fc1a" name="ContainSubscriberNumber"><con:configuration><token>"crmSubCode":"100002"</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="06cfaf3e-3430-435f-a1e2-1c2c58314370" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

//Getting response from methods
def ResponseMessage = context.response
def parsedJson = new groovy.json.JsonSlurper().parseText(ResponseMessage)

assert parsedJson.Result == "Success"
assert parsedJson.Display_items == 1
assert parsedJson.Matched_items == 1
assert parsedJson.Error_code == null
assert parsedJson.Items != null
assert parsedJson.Error_str == null
assert parsedJson.Error_str_detail == null
assert parsedJson.Donetime != null

</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="CreateASubscriptionInMartinBravoShouldReturnOk" id="a45e99dc-e386-4263-a52b-8d66b432f4da"><con:settings/><con:config service="http://10.0.0.100:8080" methodName="Create" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateASubscriptionInMartinBravoShouldReturnOk" id="c2e14433-2d71-4676-a9d8-51d55cbe18a7" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
  "reservationId": "909090"
}
</con:request><con:originalUri>http://10.0.0.100/dsa-nico/dsa/api/v1.0/subscriber/100002/subscription</con:originalUri><con:assertion type="Simple Contains" id="ba4f29f2-107d-43fc-b23c-efa3a4037236" name="Contains Success Response"><con:configuration><token>"Result":"Success"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Invalid HTTP Status Codes" id="0734601d-a66b-4629-a9d1-1f938d30f634" name="Invalid HTTP Status Codes &lt;> 200"><con:configuration><codes>HTTP/1.1 200 OK</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="3ae706cb-eb54-4164-a6e7-d652625cdd61" name="Contains Pending status"><con:configuration><token>"activationCode":</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="f8f80dcc-f284-4d37-aa8a-04a4fc2c7403" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

//Getting response from methods
def ResponseMessage = context.response
def parsedJson = new groovy.json.JsonSlurper().parseText(ResponseMessage)

assert parsedJson.Result == "Success"
assert parsedJson.Display_items == 1
assert parsedJson.Matched_items == 1
assert parsedJson.Error_code == null
assert parsedJson.Items != null
assert parsedJson.Error_str == null
assert parsedJson.Error_str_detail == null
assert parsedJson.Donetime != null
assert parsedJson.Items.subId == 1
assert parsedJson.Items.status == "pending"
assert parsedJson.Items.reservationId == "909090"
assert parsedJson.Items.activationCode != null
assert parsedJson.Items.activationCode.code != null
assert parsedJson.Items.activationCode.expirationDate != null
assert parsedJson.Items.activationCode.active </scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="crmSubCode" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="CreateServiceHsiShouldReturnOk" id="0efc8806-986c-4067-a68e-045b1eeff995"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription/{subId}/service" methodName="Create" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateServiceHsiShouldReturnOk" id="1b406235-c481-45a1-aeed-d4cc36c905a5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
  "name":"hsi",
  "crmCode": {"99999":"idSuscripcion"},
  "parameters": {"maxCpe":90 }
}
</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/crmSubCode/issue</con:originalUri><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsResultSuccess"><con:configuration><token>"Result":"Success"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsCrmCode"><con:configuration><token>"crmCode":{</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsParameters"><con:configuration><token>"parameters":{</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsSrvId"><con:configuration><token>"srvId":</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsStatus"><con:configuration><token>"status":"inactive"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsName"><con:configuration><token>"name":"hsi"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="d44b5e79-7611-4bf2-92b0-40af0131f18e" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

//Getting response from methods
def ResponseMessage = context.response
def parsedJson = new groovy.json.JsonSlurper().parseText(ResponseMessage)

assert parsedJson.Result == "Success"
assert parsedJson.Display_items == 1
assert parsedJson.Matched_items == 1
assert parsedJson.Error_code == null
assert parsedJson.Items != null
assert parsedJson.Error_str == null
assert parsedJson.Error_str_detail == null
assert parsedJson.Donetime != null


assert parsedJson.Items.srvId == 1
assert parsedJson.Items.status == "inactive"
assert parsedJson.Items.name == "hsi"
assert parsedJson.Items.crmCode != null
assert parsedJson.Items.crmCode["99999"] == "idSuscripcion"
assert parsedJson.Items.parameters != null
assert parsedJson.Items.parameters["trafficProfile"] == "test"
assert parsedJson.Items.parameters["clientClass"] == "residencial"
assert parsedJson.Items.parameters["bindLanPorts"] == [1,2,3,4]
assert parsedJson.Items.parameters["maxCpe"] == 90
assert parsedJson.Items.parameters["reservedIpList"] == []
assert parsedJson.Items.parameters["wifi"] != null
assert parsedJson.Items.parameters["gd"] != null

       



</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="subId" value="1"/>
  <con:entry key="crmSubCode" value="100002"/>
</con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="ActiveSubscriptionShouldReturnOk" id="935c3086-c7e0-45ef-9b4c-72d161ef9cfc"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription/{subId}/device" methodName="Asign device" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="ActiveSubscriptionShouldReturnOk" id="1b406235-c481-45a1-aeed-d4cc36c905a5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
  "id" : "ZTE05050505050",
  "activationCode": "12321321"
}</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/crmSubCode/issue</con:originalUri><con:assertion type="Invalid HTTP Status Codes" id="86dca399-dfce-4b99-859e-f4218a9ebcd0" name="Invalid HTTP Status Codes"><con:configuration><codes>HTTP/1.1 200 OK</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="407a7093-227a-49e2-bb65-9f602f7fae9b" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

//Getting response from methods
def ResponseMessage = context.response
def parsedJson = new groovy.json.JsonSlurper().parseText(ResponseMessage)

assert parsedJson.Result == "Success"
assert parsedJson.Display_items == 1
assert parsedJson.Matched_items == 1
assert parsedJson.Error_code == null
assert parsedJson.Items != null
assert parsedJson.Error_str == null
assert parsedJson.Error_str_detail == null
assert parsedJson.Donetime != null
</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="subId" value="1"/>
  <con:entry key="crmSubCode" value="100002"/>
</con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteServiceShouldReturnFailure" id="15970592-1bc8-4591-9e3e-73a2b63bec77"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription/{subId}/service/{srvId}" methodName="Delete" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteServiceShouldReturnFailure" id="1b406235-c481-45a1-aeed-d4cc36c905a5" mediaType="application/json" postQueryString="false"><con:description>Este caso devuelve error porque dentro de DSA, en el FDM mock está hardcode para que falle. De esta forma comprobamos que siempre estamos devolviendo 450 como codigo de erro si  algo falla.</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request/><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/crmSubCode/issue</con:originalUri><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsResultSuccess"><con:configuration><token>"Result":"Failure"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsCrmCode"><con:configuration><token>"Error_code":450</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="srvId" value="1"/>
  <con:entry key="crmSubCode" value="100002"/>
</con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>srvId</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="c13c52b7-e250-4f76-b6a4-5906645bafad" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Test E2E VoIP Service Suit" searchProperties="true" disabled="true"><con:settings/><con:testStep type="restrequest" name="Create - CreateMartinBravoSubscriber" id="0e3a7eb4-99ca-4619-b6e3-31cb6991d43b"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber" methodName="Create" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Create - CreateMartinBravoSubscriber" id="7f7c1875-c1ab-4093-8e51-506fd78fc2f0" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
	"crmSubCode":"100002",
	"name":"Martin Bravo"
}
</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber</con:originalUri><con:assertion type="Simple Contains" id="b6abe90b-2082-40ad-835e-f2c5d4b5fc1a" name="ContainResultSuccess"><con:configuration><token>Result":"Success"</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="b6abe90b-2082-40ad-835e-f2c5d4b5fc1a" name="ContainSubscriberName"><con:configuration><token>"name":"Martin Bravo"</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="b6abe90b-2082-40ad-835e-f2c5d4b5fc1a" name="ContainSubscriberNumber"><con:configuration><token>"crmSubCode":"100002"</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="94249649-86b9-4185-8483-70871464f145" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

//Getting response from methods
def ResponseMessage = context.response
def parsedJson = new groovy.json.JsonSlurper().parseText(ResponseMessage)

assert parsedJson.Result == "Success"
assert parsedJson.Display_items == 1
assert parsedJson.Matched_items == 1
assert parsedJson.Error_code == null
assert parsedJson.Items != null
assert parsedJson.Error_str == null
assert parsedJson.Error_str_detail == null
assert parsedJson.Donetime != null

</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="CreateASubscriptionInMartinBravo" id="3414e2e5-181f-499e-8a31-d536c11c2356"><con:settings/><con:config service="http://10.0.0.100:8080" methodName="Create" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateASubscriptionInMartinBravo" id="c2e14433-2d71-4676-a9d8-51d55cbe18a7" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
	"address": "test 1",
	"reservationId": "909090"
}
</con:request><con:originalUri>http://10.0.0.100/dsa-nico/dsa/api/v1.0/subscriber/100002/subscription</con:originalUri><con:assertion type="Response SLA Assertion" id="4f6528be-5f83-4b4a-acc9-6002f8dfacbd" name="Response SLA > 600"><con:configuration><SLA>900</SLA></con:configuration></con:assertion><con:assertion type="Simple Contains" id="ba4f29f2-107d-43fc-b23c-efa3a4037236" name="Contains Success Response"><con:configuration><token>"Result":"Success"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Invalid HTTP Status Codes" id="0734601d-a66b-4629-a9d1-1f938d30f634" name="Invalid HTTP Status Codes &lt;> 200"><con:configuration><codes>HTTP/1.1 200 OK</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="3ae706cb-eb54-4164-a6e7-d652625cdd61" name="Contains Pending status"><con:configuration><token>"activationCode":</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="5413a192-d822-4e09-8325-3f5207d65bde" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

//Getting response from methods
def ResponseMessage = context.response
def parsedJson = new groovy.json.JsonSlurper().parseText(ResponseMessage)

assert parsedJson.Result == "Success"
assert parsedJson.Display_items == 1
assert parsedJson.Matched_items == 1
assert parsedJson.Error_code == null
assert parsedJson.Items != null
assert parsedJson.Error_str == null
assert parsedJson.Error_str_detail == null
assert parsedJson.Donetime != null
assert parsedJson.Items.subId == 1
assert parsedJson.Items.status == "pending"
assert parsedJson.Items.reservationId == "909090"
assert parsedJson.Items.activationCode != null
assert parsedJson.Items.activationCode.code != null
assert parsedJson.Items.activationCode.expirationDate != null
assert parsedJson.Items.activationCode.active </scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="crmSubCode" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="CreateServiceVoIP" id="93bdc8ab-5d27-4ba3-b859-86e0e34edee2"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription/{subId}/service" methodName="Create" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CreateServiceVoIP" id="1b406235-c481-45a1-aeed-d4cc36c905a5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
	"name": "voip",
	"trafficProfile": "test",
	"parameters": {
		"amountLinesMax": 1,
		"voipProfile": 1,
		"lines": [
			{
				"port": 1,
				"enabled": 1,
				"username": "123",
				"password": "123",
				"line": "123"	
			}
		]
	}
}</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/crmSubCode/issue</con:originalUri><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsResultSuccess"><con:configuration><token>"Result":"Success"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsParameters"><con:configuration><token>"parameters":{</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsSrvId"><con:configuration><token>"srvId":</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsStatus"><con:configuration><token>"status":"inactive"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsName"><con:configuration><token>"name":"voip"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="4cd69ddb-cde5-4d7d-a7f4-dd52c20442bf" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

//Getting response from methods
def ResponseMessage = context.response
def parsedJson = new groovy.json.JsonSlurper().parseText(ResponseMessage)

assert parsedJson.Result == "Success"
assert parsedJson.Display_items == 1
assert parsedJson.Matched_items == 1
assert parsedJson.Error_code == null
assert parsedJson.Items != null
assert parsedJson.Items.name == "voip"
assert parsedJson.Items.parameters != null
assert parsedJson.Items.parameters.trafficProfile == "test"
assert parsedJson.Items.parameters.voipProfile != null
assert parsedJson.Items.parameters.voipProfile.name == "test"
assert parsedJson.Items.parameters.voipProfile.proxy_server == "abc"
assert parsedJson.Items.parameters.voipProfile.proxy_port == 8080
assert parsedJson.Items.parameters.voipProfile.digit_map == "abc1234"
assert parsedJson.Items.parameters.amount_lines == 1
assert parsedJson.Items.parameters.lines != null
assert parsedJson.Items.parameters.lines[0].srv_instance == 1
assert parsedJson.Items.parameters.lines[0].port == 1
assert parsedJson.Items.parameters.lines[0].line == "123"
assert parsedJson.Items.parameters.lines[0].username == "123"
assert parsedJson.Items.parameters.lines[0].password == "123"
assert parsedJson.Items.parameters.lines[0].enable == 1
assert parsedJson.Error_str == null
assert parsedJson.Error_str_detail == null
assert parsedJson.Donetime != null</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="crmSubCode" value="100002" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Update - ParamsServiceVoIP" id="94e1b0cd-6d24-40bc-a2c9-d5edd2097224"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription/{subId}/service/{srvId}" methodName="Update" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Update - ParamsServiceVoIP" id="1b406235-c481-45a1-aeed-d4cc36c905a5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
  "parameters":{
	"trafficProfile":"hsi-test"
  }
}
</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/crmSubCode/issue</con:originalUri><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsResultSuccess"><con:configuration><token>"Result":"Success"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsParameters"><con:configuration><token>"parameters":{</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsSrvId"><con:configuration><token>"srvId":</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsName"><con:configuration><token>"name":"voip"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="bc2697e8-7350-4bda-b1c5-649f4a9e6615" name="ContainsCrmCode88888"><con:configuration><token>"trafficProfile":"hsi-test"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="srvId" value="1"/>
  <con:entry key="crmSubCode" value="100002"/>
</con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>srvId</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Active - ActiveSubscriptionWithVoIPService" id="cbc5a1e1-d797-4d5f-b348-25c70a6cea15"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription/{subId}/device" methodName="Asign device" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Active - ActiveSubscriptionWithVoIPService" id="1b406235-c481-45a1-aeed-d4cc36c905a5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
  "id" : "ZTE01010101010",
  "activationCode": "12321321"
}</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription/crmSubCode/issue</con:originalUri><con:assertion type="GroovyScriptAssertion" id="e5cb700e-a698-41c3-a8ed-c88a4209d249" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

//Getting response from methods
def ResponseMessage = context.response
def parsedJson = new groovy.json.JsonSlurper().parseText(ResponseMessage)

assert parsedJson.Result == "Success"
assert parsedJson.Display_items == 1
assert parsedJson.Matched_items == 1
assert parsedJson.Error_code == null
assert parsedJson.Items != null
assert parsedJson.Error_str == null
assert parsedJson.Error_str_detail == null</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="subId" value="1"/>
  <con:entry key="crmSubCode" value="100002"/>
</con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteSubscription" id="b642786f-1038-4512-828f-2a31557e41df"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}/subscription/{subId}" methodName="Delete" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteSubscription" id="e6e08620-df5b-479e-9e4b-84acb7330e05" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request>{
  "reservationId": "909090"
}
</con:request><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber/crmSubCode/subscription</con:originalUri><con:assertion type="Simple Contains" id="8d8c9c7f-ef4a-42ab-9873-eb4fc41dae3e" name="ContainResultSuccess"><con:configuration><token>Result":"Success"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="8d8c9c7f-ef4a-42ab-9873-eb4fc41dae3e" name="ContainItemsNull"><con:configuration><token>"Items":null</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="crmSubCode" value="100002" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry><con:entry>subId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DeleteMartinBravoSubscriber" id="f0f0d026-72ec-4f11-a499-1db748acb257"><con:settings/><con:config service="http://10.0.0.100:8080" resourcePath="/${#Project#path}/dsa/api/v1.0/subscriber/{crmSubCode}" methodName="Delete" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DeleteMartinBravoSubscriber" id="7f7c1875-c1ab-4093-8e51-506fd78fc2f0" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Project#host}:${#Project#port}</con:endpoint><con:request/><con:originalUri>http://10.0.0.100/sts-bp-andres/dsa/dsa/api/v0.3/subscriber</con:originalUri><con:assertion type="Simple Contains" id="b6abe90b-2082-40ad-835e-f2c5d4b5fc1a" name="ContainResultSuccess"><con:configuration><token>Result":"Success"</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Invalid HTTP Status Codes" id="6ffe93fa-3771-4f8a-9fd3-e6ab4db07b1a" name="Invalid HTTP Status Codes"><con:configuration><codes>HTTP/1.1 200 OK</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="b9009ff9-88a6-4858-8a72-ddedd249925f" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

//Getting response from methods
def ResponseMessage = context.response
def parsedJson = new groovy.json.JsonSlurper().parseText(ResponseMessage)

assert parsedJson.Result == "Success"
assert parsedJson.Display_items == 0
assert parsedJson.Matched_items == 1
assert parsedJson.Error_code == null
assert parsedJson.Items == null
assert parsedJson.Error_str == null
assert parsedJson.Error_str_detail == null
assert parsedJson.Donetime != null</scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="crmSubCode" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>crmSubCode</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties><con:property><con:name>subscription_test_id</con:name><con:value>10101010</con:value></con:property></con:properties><con:reportParameters/></con:testSuite><con:restMockService id="b607b460-2ef2-4081-b7db-5f93d063592d" port="8080" path="/" host="localhost"><con:settings/><con:properties/><con:headerValidator/></con:restMockService><con:endpointStrategy xsi:type="con:DefaultEndpointStrategy" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:endpoint mode="COMPLEMENT" username="stechs" password="stechs">http://10.0.0.100:8080/dsa-dev/trunk/dsa/api/v0.1</con:endpoint><con:endpoint mode="COMPLEMENT" username="stechs">http://{#project#host}:{#project#port}</con:endpoint><con:endpoint mode="COMPLEMENT" username="stechs" password="stechs">http://${#Project#host}:${#Project#port}</con:endpoint></con:endpointStrategy><con:requirements/><con:properties><con:property><con:name>host</con:name><con:value>10.0.0.19</con:value></con:property><con:property><con:name>port</con:name><con:value>8081</con:value></con:property><con:property><con:name>path</con:name><con:value/></con:property><con:property><con:name>dbDsa</con:name><con:value>dsa_testing_auto_v3</con:value></con:property><con:property><con:name>dbHost</con:name><con:value>10.10.1.3</con:value></con:property><con:property><con:name>dbUser</con:name><con:value>root</con:value></con:property><con:property><con:name>dbPass</con:name><con:value>stsr00t</con:value></con:property><con:property><con:name>dbPort</con:name><con:value>3306</con:value></con:property></con:properties><con:wssContainer/><con:databaseConnectionContainer/><con:jmsConnectionContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:reporting><con:xmlTemplates/><con:parameters/></con:reporting><con:sensitiveInformation/><con:authRepository/><con:tags/></con:soapui-project>